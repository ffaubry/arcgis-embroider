(window.webpackJsonp=window.webpackJsonp||[]).push([[77],{580:function(e,t,r){"use strict";var s=r(0),o=(r(4),r(9),r(5),r(6),r(1)),a=r(32),i=r(2),n=(r(3),r(10),r(11),r(15));const c=new a.a({esriJobMessageTypeInformative:"informative",esriJobMessageTypeProcessDefinition:"process-definition",esriJobMessageTypeProcessStart:"process-start",esriJobMessageTypeProcessStop:"process-stop",esriJobMessageTypeWarning:"warning",esriJobMessageTypeError:"error",esriJobMessageTypeEmpty:"empty",esriJobMessageTypeAbort:"abort"});let l=class extends n.a{constructor(e){super(e),this.description=null,this.type=null}};Object(s.a)([Object(o.b)({type:String,json:{write:!0}})],l.prototype,"description",void 0),Object(s.a)([Object(o.b)({type:String,json:{read:c.read,write:c.write}})],l.prototype,"type",void 0),l=Object(s.a)([Object(i.a)("esri.tasks.support.GPMessage")],l);var p=l;t.a=p},616:function(e,t,r){"use strict";r.d(t,"a",(function(){return o}));class s{constructor(e={}){this._options=e}toQueryParams(e){if(!e)return null;const t=e.toJSON(),r={};return Object.keys(t).forEach(e=>{const s=this._options[e];if(s){const o="boolean"!=typeof s&&s.name?s.name:e,a="boolean"!=typeof s&&s.getter?s.getter(t):t[e];null!=a&&(r[o]=(e=>{if(!Array.isArray(e))return!1;const[t]=e;return"number"==typeof t||"string"==typeof t})(a)?a.join(","):"object"==typeof a?JSON.stringify(a):a)}else r[e]=t[e]},this),r}}function o(e){return new s(e)}},617:function(e,t,r){"use strict";r.d(t,"a",(function(){return u}));var s=r(0),o=(r(4),r(9),r(52)),a=r(8),i=(r(5),r(6),r(1),r(2)),n=r(14),c=r(3),l=(r(10),r(65)),p=(r(11),r(309));const u=e=>{let t=class extends e{async getServiceDescription(){return this._serviceDescriptionPromise||(this._serviceDescriptionPromise=this._fetchServiceDescription()),this._serviceDescriptionPromise}async _fetchServiceDescription(){if(!this.url||!this.parsedUrl)throw new n.a("network-service:missing-url","Url to Network service is missing");const e=this.url,{data:t}=await Object(l.default)(e,{query:{f:"json"}});t.supportedTravelModes||(t.supportedTravelModes=[]);for(let e=0;e<t.supportedTravelModes.length;e++)t.supportedTravelModes[e].id||(t.supportedTravelModes[e].id=t.supportedTravelModes[e].itemId);const r=t.currentVersion>=10.4?async function(e){try{const{data:{supportedTravelModes:t,defaultTravelMode:r}}=await Object(l.default)(e+("/"===e[e.length-1]?"":"/")+"retrieveTravelModes",{query:{f:"json"}});return{supportedTravelModes:t,defaultTravelMode:r}}catch(e){throw new n.a("network-service:retrieveTravelModes","Could not get to the NAServer's retrieveTravelModes.",{error:e})}}(e):async function(e){const{data:t}=await Object(l.default)(e.substring(0,e.indexOf("/rest/")+6)+"info",{query:{f:"json"}});if(!t||!t.owningSystemUrl)return{supportedTravelModes:[],defaultTravelMode:null};e=t.owningSystemUrl;const{data:r}=await Object(l.default)(e+("/"===e[e.length-1]?"":"/")+"sharing/rest/portals/self",{query:{f:"json"}}),s=Object(o.b)("helperServices.routingUtilities.url",r);if(!s)return{supportedTravelModes:[],defaultTravelMode:null};const a=Object(c.H)(e),i=/\/solveClosestFacility$/.test(a.path)?"Route":/\/solveClosestFacility$/.test(a.path)?"ClosestFacility":"ServiceAreas",n=await Object(l.default)(s+("/"===s[s.length-1]?"":"/")+"GetTravelModes/execute",{query:{f:"json",serviceName:i}}),p=[];let u=null;if(n&&n.data&&n.data.results&&n.data.results.length){const e=n.data.results;for(const t of e)if("supportedTravelModes"===t.paramName){if(t.value&&t.value.features)for(const{attributes:e}of t.value.features)if(e){const t=JSON.parse(e.TravelMode);p.push(t)}}else"defaultTravelMode"===t.paramName&&(u=t.value)}return{supportedTravelModes:p,defaultTravelMode:u}}(e),{defaultTravelMode:s,supportedTravelModes:a}=await r;return t.defaultTravelMode=s,t.supportedTravelModes=a,t}_isInputGeometryZAware(e,t){for(let r=0;r<t.length;r++){const s=e[t[r]];if(s&&s.length)for(const e of s)if(Object(a.h)(e)&&e.hasZ)return!0}return!1}_dropZValuesOffInputGeometry(e,t){for(let r=0;r<t.length;r++){const s=e[t[r]];if(s&&s.length)for(const e of s)e.z=void 0}console.log("The remote Network Analysis service is powered by a network dataset which is not Z-aware.\nZ-coordinates of the input geometry are ignored.")}};return t=Object(s.a)([Object(i.a)("esri.tasks.mixins.NAServiceDescription")],t),t};let d=class extends(u(p.a)){};d=Object(s.a)([Object(i.a)("esri.tasks.mixins.NAServiceDescription")],d)},618:function(e,t,r){"use strict";var s=r(0),o=(r(4),r(9),r(5),r(6),r(1)),a=r(32),i=r(2),n=(r(3),r(10),r(11),r(580));const c=new a.a({0:"informative",1:"process-definition",2:"process-start",3:"process-stop",50:"warning",100:"error",101:"empty",200:"abort"});let l=class extends n.a{constructor(e){super(e),this.type=null}};Object(s.a)([Object(o.b)({type:String,json:{read:c.read,write:c.write}})],l.prototype,"type",void 0),l=Object(s.a)([Object(i.a)("esri.tasks.support.NAMessage")],l);var p=l;t.a=p},704:function(e,t,r){"use strict";var s=r(0),o=(r(4),r(9),r(8)),a=(r(5),r(6),r(1)),i=r(33),n=r(2),c=(r(3),r(10),r(11),r(28)),l=r(29),p=r(36),u=r(87),d=(r(54),r(94)),y=r(261);let f=class extends y.default{constructor(e){super(e),this.extent=null,this.features=null,this.geometryType="polyline",this.routeId=null,this.routeName=null,this.totalDriveTime=null,this.totalLength=null,this.totalTime=null}readFeatures(e,t){(e||[]).forEach(e=>{this._decompressFeatureGeometry(e,t.summary.envelope.spatialReference)});const r=c.a.fromJSON(t.spatialReference);return e.map(e=>{const t=d.a.fromJSON(e),s=e.geometry&&e.geometry.spatialReference;return t.geometry&&!s&&(Object(o.m)(t.geometry).spatialReference=r),t.strings=e.strings,t.events=(e.events||[]).map(t=>{const r=new d.a({geometry:new l.a({x:t.point.x,y:t.point.y,z:t.point.z,hasZ:void 0!==t.point.z,spatialReference:e.geometry&&e.geometry.spatialReference}),attributes:{ETA:t.ETA,arriveTimeUTC:t.arriveTimeUTC}});return r.strings=t.strings,r}),t})}get mergedGeometry(){if(!this.features)return null;const e=this.features.map(({geometry:e})=>Object(o.m)(e)),t=this.get("extent.spatialReference");return this._mergePolylinesToSinglePath(e,t)}get strings(){return this.features.map(({strings:e})=>e)}_decompressFeatureGeometry(e,t){e.geometry=this._decompressGeometry(e.compressedGeometry,t)}_decompressGeometry(e,t){let r=0,s=0,o=0,a=0;const i=[];let n,c,l,p,u,d,y,f,b=0,m=0,h=0;if(u=e.match(/((\+|\-)[^\+\-\|]+|\|)/g),u||(u=[]),0===parseInt(u[b],32)){b=2;const e=parseInt(u[b],32);b++,d=parseInt(u[b],32),b++,1&e&&(m=u.indexOf("|")+1,y=parseInt(u[m],32),m++),2&e&&(h=u.indexOf("|",m)+1,f=parseInt(u[h],32),h++)}else d=parseInt(u[b],32),b++;for(;b<u.length&&"|"!==u[b];){n=parseInt(u[b],32)+r,b++,r=n,c=parseInt(u[b],32)+s,b++,s=c;const e=[n/d,c/d];m&&(p=parseInt(u[m],32)+o,m++,o=p,e.push(p/y)),h&&(l=parseInt(u[h],32)+a,h++,a=l,e.push(l/f)),i.push(e)}return{paths:[i],hasZ:m>0,hasM:h>0,spatialReference:t}}_mergePolylinesToSinglePath(e,t){let r=[];(e||[]).forEach(e=>{e.paths.forEach(e=>{r=r.concat(e)})});const s=[];let o=[0,0];return r.forEach(e=>{e[0]===o[0]&&e[1]===o[1]||(s.push(e),o=e)}),new u.a({paths:[s]},t)}};Object(s.a)([Object(a.b)({type:p.a,json:{read:{source:"summary.envelope"}}})],f.prototype,"extent",void 0),Object(s.a)([Object(a.b)()],f.prototype,"features",void 0),Object(s.a)([Object(i.a)("features")],f.prototype,"readFeatures",null),Object(s.a)([Object(a.b)()],f.prototype,"geometryType",void 0),Object(s.a)([Object(a.b)({readOnly:!0,dependsOn:["features","extent.spatialReference"]})],f.prototype,"mergedGeometry",null),Object(s.a)([Object(a.b)()],f.prototype,"routeId",void 0),Object(s.a)([Object(a.b)()],f.prototype,"routeName",void 0),Object(s.a)([Object(a.b)({value:null,readOnly:!0,dependsOn:["features"]})],f.prototype,"strings",null),Object(s.a)([Object(a.b)({json:{read:{source:"summary.totalDriveTime"}}})],f.prototype,"totalDriveTime",void 0),Object(s.a)([Object(a.b)({json:{read:{source:"summary.totalLength"}}})],f.prototype,"totalLength",void 0),Object(s.a)([Object(a.b)({json:{read:{source:"summary.totalTime"}}})],f.prototype,"totalTime",void 0),f=Object(s.a)([Object(n.a)("esri.tasks.support.DirectionsFeatureSet")],f);var b=f;t.a=b},997:function(e,t,r){"use strict";r.r(t);var s=r(0),o=(r(4),r(9),r(5),r(6),r(1)),a=r(2),i=(r(3),r(10),r(7)),n=r(65),c=(r(11),r(303)),l=r(309),p=r(616),u=r(617),d=r(8),y=r(33),f=r(15),b=r(28),m=r(29),h=r(95),O=r(87),j=(r(54),r(94)),v=r(261),g=r(704),T=r(618);function w(e){return v.default.fromJSON(e).features.map(e=>e.geometry)}let M=class extends f.a{constructor(e){super(e),this.directions=null,this.facilities=null,this.incidents=null,this.messages=null,this.pointBarriers=null,this.polylineBarriers=null,this.polygonBarriers=null,this.routes=null}readFacilities(e){return w(e)}readIncidents(e){return w(e)}readPointBarriers(e,t){return w(t.barriers)}readPolylineBarriers(e){return w(e)}readPolygonBarriers(e){return w(e)}readRoutes(e){return function(e){return e.features.map(t=>{const r=b.a.fromJSON(e.spatialReference),s=j.a.fromJSON(t);return Object(d.h)(s.geometry)&&(s.geometry.spatialReference=r),s})}(e)}};Object(s.a)([Object(o.b)({type:[g.a]})],M.prototype,"directions",void 0),Object(s.a)([Object(o.b)({type:[m.a]})],M.prototype,"facilities",void 0),Object(s.a)([Object(y.a)("facilities")],M.prototype,"readFacilities",null),Object(s.a)([Object(o.b)({type:[m.a]})],M.prototype,"incidents",void 0),Object(s.a)([Object(y.a)("incidents")],M.prototype,"readIncidents",null),Object(s.a)([Object(o.b)({type:[T.a]})],M.prototype,"messages",void 0),Object(s.a)([Object(o.b)({type:[m.a]})],M.prototype,"pointBarriers",void 0),Object(s.a)([Object(y.a)("pointBarriers",["barriers"])],M.prototype,"readPointBarriers",null),Object(s.a)([Object(o.b)({type:[O.a]})],M.prototype,"polylineBarriers",void 0),Object(s.a)([Object(y.a)("polylineBarriers")],M.prototype,"readPolylineBarriers",null),Object(s.a)([Object(o.b)({type:[h.a]})],M.prototype,"polygonBarriers",void 0),Object(s.a)([Object(y.a)("polygonBarriers")],M.prototype,"readPolygonBarriers",null),Object(s.a)([Object(o.b)({type:[j.a]})],M.prototype,"routes",void 0),Object(s.a)([Object(y.a)("routes")],M.prototype,"readRoutes",null),M=Object(s.a)([Object(a.a)("esri.tasks.support.ClosestFacilitySolveResult")],M);var B=M;const S=Object(p.a)({accumulateAttributes:{name:"accumulateAttributeNames"},attributeParameterValues:!0,directionsTimeAttribute:{name:"directionsTimeAttributeName"},impedanceAttribute:{name:"impedanceAttributeName"},facilities:!0,incidents:!0,outSpatialReference:{name:"outSR",getter:e=>e.outSpatialReference.wkid},pointBarriers:{name:"barriers"},polylineBarriers:!0,polygonBarriers:!0,restrictionAttributes:{name:"restrictionAttributeNames"},returnPointBarriers:{name:"returnBarriers"},returnRoutes:{name:"returnCFRoutes"},travelMode:!0});let N=class extends(Object(u.a)(l.a)){constructor(e){super(e),this.url=null}solve(e,t){const r=[],s=[],o={},a={};return e.incidents&&e.incidents.features&&this._collectGeometries(e.incidents.features,s,"incidents.features",o),e.facilities&&e.facilities.features&&this._collectGeometries(e.facilities.features,s,"facilities.features",o),e.pointBarriers&&e.pointBarriers.features&&this._collectGeometries(e.pointBarriers.features,s,"pointBarriers.features",o),e.polylineBarriers&&e.polylineBarriers.features&&this._collectGeometries(e.polylineBarriers.features,s,"polylineBarriers.features",o),e.polygonBarriers&&e.polygonBarriers.features&&this._collectGeometries(e.polygonBarriers.features,s,"polygonBarriers.features",o),Object(c.a)(s).then(e=>{for(const t in o){const s=o[t];r.push(t),a[t]=e.slice(s[0],s[1])}return this._isInputGeometryZAware(a,r)?this.getServiceDescription():Object(i.r)({dontCheck:!0})}).then(s=>{("dontCheck"in s?s.dontCheck:s.hasZ)||this._dropZValuesOffInputGeometry(a,r);for(const t in a)a[t].forEach((r,s)=>{e.get(t)[s].geometry=r});let o={query:{...this.parsedUrl.query,f:"json",...S.toQueryParams(e)}};return(this.requestOptions||t)&&(o={...this.requestOptions,...t,...o}),Object(n.default)(this.parsedUrl.path+"/solveClosestFacility",o)}).then(e=>B.fromJSON(e.data))}_collectGeometries(e,t,r,s){s[r]=[t.length,t.length+e.length],e.forEach(e=>{t.push(e.geometry)})}};Object(s.a)([Object(o.b)()],N.prototype,"url",void 0),N=Object(s.a)([Object(a.a)("esri.tasks.ClosestFacilityTask")],N);var _=N;t.default=_}}]);