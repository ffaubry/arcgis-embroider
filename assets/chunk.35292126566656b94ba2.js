(window.webpackJsonp=window.webpackJsonp||[]).push([[100],{714:function(e,t,i){"use strict";i.d(t,"a",(function(){return l})),i.d(t,"b",(function(){return d})),i.d(t,"c",(function(){return h})),i.d(t,"d",(function(){return c})),i.d(t,"e",(function(){return y}));i(9);var n=i(34),s=i(144);class r{constructor(){this.code=null,this.description=null}}class a{constructor(e){this.error=new r,this.globalId=null,this.objectId=null,this.success=!1,this.uniqueId=null,this.error.description=e}}function l(e){return new a(e)}class u{constructor(e){this.globalId=null,this.success=!0,this.objectId=this.uniqueId=e}}function d(e){return new u(e)}const o=new Set;function c(e,t,i,n,r=!1,a){o.clear();for(const t in n){const u=e.get(t);if(!u)continue;const d=n[t],c=f(u,d);if(c!==d&&a&&a.push({name:"invalid-value-type",message:"attribute value was converted to match the field type",details:{field:u,originalValue:d,sanitizedValue:c}}),o.add(u.name),u&&(r||u.editable)){const e=Object(s.u)(u,c);if(e)return l(Object(s.v)(e,u,c));i[u.name]=c}}for(const e of t)if(!o.has(e.name))return l(`missing required field "${e.name}"`);return null}function f(e,t){let i=t;return"string"==typeof t&&Object(s.q)(e)?i=parseFloat(t):null!=t&&Object(s.r)(e)&&"string"!=typeof t&&(i=String(t)),Object(s.s)(i)}let p;function y(e,t){if(!e||!Object(n.f)(t))return e;if("rings"in e||"paths"in e){if(!p)throw new TypeError("geometry engine not loaded");return p.simplify(t,e)}return e}async function h(e,t){!Object(n.f)(e)||"esriGeometryPolygon"!==t&&"esriGeometryPolyline"!==t||await async function(){return p||(p=await Promise.all([i.e(11),i.e(27)]).then(i.bind(null,889)),p)}()}},909:function(e,t,i){"use strict";i.r(t);var n=i(14),s=i(7),r=i(34),a=i(59),l=i(144),u=i(317),d=i(413),o=i(417),c=i(442),f=i(624),p=i(736),y=i(643),h=i(714);const b=r.a,m={xmin:-180,ymin:-90,xmax:180,ymax:90,spatialReference:r.a},g={hasAttachments:!1,capabilities:"query, editing, create, delete, update",useStandardizedQueries:!0,supportsCoordinatesQuantization:!0,supportsReturningQueryGeometry:!0,advancedQueryCapabilities:{supportsQueryAttachments:!1,supportsStatistics:!0,supportsPercentileStatistics:!0,supportsReturningGeometryCentroid:!0,supportsQueryWithDistance:!0,supportsDistinct:!0,supportsReturningQueryExtent:!0,supportsReturningGeometryProperties:!1,supportsHavingClause:!0,supportsOrderBy:!0,supportsPagination:!0,supportsQueryWithResultType:!1,supportsSqlExpression:!0,supportsDisjointSpatialRel:!0}};function j(e){return Object(a.f)(e)?null!=e.z:!!e.hasZ}function I(e){return Object(a.f)(e)?null!=e.m:!!e.hasM}t.default=class{constructor(){this._queryEngine=null,this._nextObjectId=null}destroy(){this._queryEngine&&this._queryEngine&&this._queryEngine.destroy(),this._queryEngine=this._requiredFields=this._fieldsIndex=this._createDefaultAttributes=null}async load(e){const t=[],{features:i}=e,s=this._inferLayerProperties(i,e.fields),r=e.fields||[],a=null!=e.hasM?e.hasM:s.hasM,d=null!=e.hasZ?e.hasZ:s.hasZ,h=!e.spatialReference&&!s.spatialReference,j=h?b:e.spatialReference||s.spatialReference,I=h?m:null,O=e.geometryType||s.geometryType,F=!O;let _=e.objectIdField||s.objectIdField,E=e.timeInfo;if(!F&&(h&&t.push({name:"feature-layer:spatial-reference-not-found",message:"Spatial reference not provided or found in features. Defaults to WGS84"}),!O))throw new n.a("feature-layer:missing-property","geometryType not set and couldn't be inferred from the provided features");if(!_)throw new n.a("feature-layer:missing-property","objectIdField not set and couldn't be found in the provided fields");if(s.objectIdField&&_!==s.objectIdField&&(t.push({name:"feature-layer:duplicated-oid-field",message:`Provided objectIdField "${_}" doesn't match the field name "${s.objectIdField}", found in the provided fields`}),_=s.objectIdField),_&&!s.objectIdField){let e=null;r.some(t=>t.name===_&&(e=t,!0))?(e.type="esriFieldTypeOID",e.editable=!1,e.nullable=!1):r.unshift({alias:_,name:_,type:"esriFieldTypeOID",editable:!1,nullable:!1})}for(const e of r){if(null==e.name&&(e.name=e.alias),null==e.alias&&(e.alias=e.name),!e.name)throw new n.a("feature-layer:invalid-field-name","field name is missing",{field:e});if(e.name===_&&(e.type="esriFieldTypeOID"),-1===u.a.jsonValues.indexOf(e.type))throw new n.a("feature-layer:invalid-field-type",`invalid type for field "${e.name}"`,{field:e})}const q={};this._requiredFields=[];for(const e of r)if("esriFieldTypeOID"!==e.type&&"esriFieldTypeGlobalID"!==e.type){e.editable=null==e.editable||!!e.editable,e.nullable=null==e.nullable||!!e.nullable;const t=Object(l.o)(e);e.nullable||void 0!==t?q[e.name]=t:this._requiredFields.push(e)}if(this._fieldsIndex=new o.a(r),this._createDefaultAttributes=Object(f.a)(q,_),E){if(E.startTimeField){const e=this._fieldsIndex.get(E.startTimeField);e?(E.startTimeField=e.name,e.type="esriFieldTypeDate"):E.startTimeField=null}if(E.endTimeField){const e=this._fieldsIndex.get(E.endTimeField);e?(E.endTimeField=e.name,e.type="esriFieldTypeDate"):E.endTimeField=null}if(E.trackIdField){const e=this._fieldsIndex.get(E.trackIdField);e?E.trackIdField=e.name:(E.trackIdField=null,t.push({name:"feature-layer:invalid-timeInfo-trackIdField",message:"trackIdField is missing",details:{timeInfo:E}}))}E.startTimeField||E.endTimeField||(t.push({name:"feature-layer:invalid-timeInfo",message:"startTimeField and endTimeField are missing or invalid",details:{timeInfo:E}}),E=null)}const T={warnings:t,featureErrors:[],layerDefinition:{...g,drawingInfo:Object(f.c)(O),templates:Object(f.b)(q),extent:I,geometryType:O,objectIdField:_,fields:r,hasZ:!!d,hasM:!!a,timeInfo:E},assignedObjectIds:{}};if(this._queryEngine=new y.a({fields:r,geometryType:O,hasM:a,hasZ:d,objectIdField:_,spatialReference:j,featureStore:new p.a({geometryType:O,hasM:a,hasZ:d}),timeInfo:E}),!i||!i.length)return this._nextObjectId=1,T;const w=i.reduce((e,t)=>{const i=t.attributes&&t.attributes[_];return null==i||isNaN(i)||!isFinite(i)?e:Math.max(e,i)},0);return this._nextObjectId=1+w,await Object(c.a)(i,j),this._loadInitialFeatures(T,i)}async applyEdits(e){const{spatialReference:t,geometryType:i}=this._queryEngine;return await Object(s.a)([Object(h.c)(t,i),Object(c.a)(e.adds,t),Object(c.a)(e.updates,t)]),this._applyEdits(e)}async queryFeatures(e,t={}){return this._queryEngine.executeQuery(e,t.signal)}async queryFeatureCount(e,t={}){return this._queryEngine.executeQueryForCount(e,t.signal)}async queryObjectIds(e,t={}){return this._queryEngine.executeQueryForIds(e,t.signal)}async queryExtent(e,t={}){return this._queryEngine.executeQueryForExtent(e,t.signal)}_inferLayerProperties(e,t){let i=void 0,n=void 0,s=null,r=null,l=null;for(const t of e){const e=t.geometry;if(e&&(s||(s=Object(a.c)(e)),r||(r=e.spatialReference),null==i&&(i=j(e)),null==n&&(n=I(e)),s&&r&&null!=i&&null!=n))break}if(t&&t.length){let e=null;t.some(t=>{const i="esriFieldTypeOID"===t.type,n=!t.type&&t.name&&"objectid"===t.name.toLowerCase();return e=t,i||n})&&(l=e.name)}return{geometryType:s,spatialReference:r,objectIdField:l,hasM:n,hasZ:i}}_loadInitialFeatures(e,t){const{geometryType:i,hasM:n,hasZ:s,objectIdField:r,spatialReference:l,featureStore:u}=this._queryEngine,o=[];for(const n of t){if(null!=n.uid&&(e.assignedObjectIds[n.uid]=-1),n.geometry&&i!==Object(a.c)(n.geometry)){e.featureErrors.push(Object(h.a)("Incorrect geometry type."));continue}const t=this._createDefaultAttributes(),s=Object(h.d)(this._fieldsIndex,this._requiredFields,t,n.attributes,!0,e.warnings);s?e.featureErrors.push(s):(this._assignObjectId(t,n.attributes,!0),n.attributes=t,null!=n.uid&&(e.assignedObjectIds[n.uid]=n.attributes[r]),n.geometry&&(n.geometry=Object(c.c)(n.geometry,n.geometry.spatialReference,l)),o.push(n))}if(u.addMany(Object(d.c)([],o,i,s,n,r)),e.layerDefinition.extent=this._queryEngine.fullExtent,e.layerDefinition.timeInfo){const{start:t,end:i}=this._queryEngine.timeExtent;e.layerDefinition.timeInfo.timeExtent=[t,i]}return e}_applyEdits(e){const{adds:t,updates:i,deletes:n}=e,s={addResults:[],deleteResults:[],updateResults:[],uidToObjectId:{}};if(t&&t.length&&this._applyAddEdits(s,t),i&&i.length&&this._applyUpdateEdits(s,i),n&&n.length){for(const e of n)s.deleteResults.push(Object(h.b)(e));this._queryEngine.featureStore.removeManyById(n)}return{fullExtent:this._queryEngine.fullExtent,featureEditResults:s}}_applyAddEdits(e,t){const{addResults:i}=e,{geometryType:n,hasM:s,hasZ:r,objectIdField:l,spatialReference:u,featureStore:o}=this._queryEngine,f=[];for(const s of t){if(s.geometry&&n!==Object(a.c)(s.geometry)){i.push(Object(h.a)("Incorrect geometry type."));continue}const t=this._createDefaultAttributes(),r=Object(h.d)(this._fieldsIndex,this._requiredFields,t,s.attributes);if(r)i.push(r);else{if(this._assignObjectId(t,s.attributes),s.attributes=t,null!=s.uid){const t=s.attributes[l];e.uidToObjectId[s.uid]=t}s.geometry&&(s.geometry=Object(c.c)(Object(h.e)(s.geometry,u),s.geometry.spatialReference,u)),f.push(s),i.push(Object(h.b)(s.attributes[l]))}}o.addMany(Object(d.c)([],f,n,r,s,l))}_applyUpdateEdits({updateResults:e},t){const{geometryType:i,hasM:n,hasZ:s,objectIdField:r,spatialReference:l,featureStore:u}=this._queryEngine;for(const o of t){const{attributes:t,geometry:f}=o,p=t&&t[r];if(null==p){e.push(Object(h.a)(`Identifier field ${r} missing`));continue}if(!u.has(p)){e.push(Object(h.a)(`Feature with object id ${p} missing`));continue}const y=Object(d.i)(u.getFeature(p),i,s,n);if(f){if(i!==Object(a.c)(f)){e.push(Object(h.a)("Incorrect geometry type."));continue}y.geometry=Object(c.c)(Object(h.e)(f,l),f.spatialReference,l)}if(t){const i=Object(h.d)(this._fieldsIndex,this._requiredFields,y.attributes,t);if(i){e.push(i);continue}}u.add(Object(d.a)(y,i,s,n,r)),e.push(Object(h.b)(p))}}_assignObjectId(e,t,i=!1){const n=this._queryEngine.objectIdField;i&&t&&isFinite(t[n])?e[n]=t[n]:e[n]=this._nextObjectId++}}}}]);