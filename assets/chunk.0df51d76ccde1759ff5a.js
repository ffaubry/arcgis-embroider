(window.webpackJsonp=window.webpackJsonp||[]).push([[64],{417:function(e,t,r){"use strict";function i(e){return"date"===e.type||"esriFieldTypeDate"===e.type}function a(e){return e.toLowerCase().trim()}t.a=class{constructor(e){if(this.fields=e,this._fieldsMap=new Map,this._dateFieldsSet=new Set,this.dateFields=[],!e)return;const t=[];for(const r of e){const e=r&&r.name;if(e){const n=a(e);this._fieldsMap.set(e,r),this._fieldsMap.set(n,r),t.push(n),i(r)&&(this.dateFields.push(r),this._dateFieldsSet.add(r))}}t.sort(),this.uid=t.join(",")}destroy(){this._fieldsMap.clear()}has(e){return null!=this.get(e)}get(e){return null!=e?this._fieldsMap.get(e)||this._fieldsMap.get(a(e)):void 0}isDateField(e){return this._dateFieldsSet.has(this.get(e))}normalizeFieldName(e){const t=this.get(e);if(t)return t.name}}},423:function(e,t,r){"use strict";var i,a=r(0),n=(r(4),r(9),r(5),r(6),r(1)),s=r(2),o=(r(3),r(10),r(11),r(15)),l=r(146);let c=i=class extends o.a{constructor(e){super(e),this.value=0,this.unit="milliseconds"}toMilliseconds(){return this.value*l.b[this.unit]}clone(){return new i({value:this.value,unit:this.unit})}};Object(a.a)([Object(n.b)({type:Number,json:{write:!0},nonNullable:!0})],c.prototype,"value",void 0),Object(a.a)([Object(n.b)({type:l.d.apiValues,json:{type:l.d.jsonValues,read:l.d.read,write:l.d.write},nonNullable:!0})],c.prototype,"unit",void 0),c=i=Object(a.a)([Object(s.a)("esri.TimeInterval")],c);var u=c;t.a=u},432:function(e,t,r){"use strict";var i,a=r(0),n=(r(4),r(9),r(12)),s=(r(5),r(6),r(1)),o=r(33),l=r(2),c=r(22),u=(r(3),r(10),r(11),r(15)),p=r(146),d=r(212),b=r(423);let h=i=class extends u.a{constructor(e){super(e),this.respectsDaylightSaving=!1,this.timezone=null}readRespectsDaylightSaving(e,t){return void 0!==t.respectsDaylightSaving?t.respectsDaylightSaving:void 0!==t.respectDaylightSaving&&t.respectDaylightSaving}clone(){const{respectsDaylightSaving:e,timezone:t}=this;return new i({respectsDaylightSaving:e,timezone:t})}};Object(a.a)([Object(s.b)({type:Boolean,json:{write:!0}})],h.prototype,"respectsDaylightSaving",void 0),Object(a.a)([Object(o.a)("respectsDaylightSaving",["respectsDaylightSaving","respectDaylightSaving"])],h.prototype,"readRespectsDaylightSaving",null),Object(a.a)([Object(s.b)({type:String,json:{read:{source:"timeZone"},write:{target:"timeZone"}}})],h.prototype,"timezone",void 0),h=i=Object(a.a)([Object(l.a)("esri.layers.support.TimeReference")],h);var m,y=h;let f=m=class extends u.a{constructor(e){super(e),this.cumulative=!1,this.endField=null,this.fullTimeExtent=null,this.hasLiveData=!1,this.interval=null,this.startField=null,this.timeReference=null,this.trackIdField=null,this.useTime=!0}readFullTimeExtent(e,t){if(!t.timeExtent||!Array.isArray(t.timeExtent)||2!==t.timeExtent.length)return null;const r=new Date(t.timeExtent[0]),i=new Date(t.timeExtent[1]);return new d.a({start:r,end:i})}writeFullTimeExtent(e,t){e&&e.start&&e.end?t.timeExtent=[e.start.getTime(),e.end.getTime()]:t.timeExtent=null}readInterval(e,t){return t.timeInterval&&t.timeIntervalUnits?new b.a({value:t.timeInterval,unit:p.d.fromJSON(t.timeIntervalUnits)}):t.defaultTimeInterval&&t.defaultTimeIntervalUnits?new b.a({value:t.defaultTimeInterval,unit:p.d.fromJSON(t.defaultTimeIntervalUnits)}):null}writeInterval(e,t){if(e){const r=e.toJSON();t.timeInterval=r.value,t.timeIntervalUnits=r.unit}else t.timeInterval=null,t.timeIntervalUnits=null}clone(){const{cumulative:e,endField:t,hasLiveData:r,interval:i,startField:a,timeReference:s,fullTimeExtent:o,trackIdField:l,useTime:c}=this;return new m({cumulative:e,endField:t,hasLiveData:r,interval:i,startField:a,timeReference:Object(n.a)(s),fullTimeExtent:Object(n.a)(o),trackIdField:l,useTime:c})}};Object(a.a)([Object(s.b)({type:Boolean,json:{read:{source:"exportOptions.timeDataCumulative"},write:{target:"exportOptions.timeDataCumulative"}}})],f.prototype,"cumulative",void 0),Object(a.a)([Object(s.b)({type:String,json:{read:{source:"endTimeField"},write:{target:"endTimeField",allowNull:!0}}})],f.prototype,"endField",void 0),Object(a.a)([Object(s.b)({type:d.a,json:{write:{enabled:!0,allowNull:!0}}})],f.prototype,"fullTimeExtent",void 0),Object(a.a)([Object(o.a)("fullTimeExtent",["timeExtent"])],f.prototype,"readFullTimeExtent",null),Object(a.a)([Object(c.a)("fullTimeExtent")],f.prototype,"writeFullTimeExtent",null),Object(a.a)([Object(s.b)({type:Boolean,json:{write:!0}})],f.prototype,"hasLiveData",void 0),Object(a.a)([Object(s.b)({type:b.a,json:{write:{enabled:!0,allowNull:!0}}})],f.prototype,"interval",void 0),Object(a.a)([Object(o.a)("interval",["timeInterval","timeIntervalUnits","defaultTimeInterval","defaultTimeIntervalUnits"])],f.prototype,"readInterval",null),Object(a.a)([Object(c.a)("interval")],f.prototype,"writeInterval",null),Object(a.a)([Object(s.b)({type:String,json:{read:{source:"startTimeField"},write:{target:"startTimeField",allowNull:!0}}})],f.prototype,"startField",void 0),Object(a.a)([Object(s.b)({type:y,json:{write:{enabled:!0,allowNull:!0}}})],f.prototype,"timeReference",void 0),Object(a.a)([Object(s.b)({type:String,json:{write:{enabled:!0,allowNull:!0}}})],f.prototype,"trackIdField",void 0),Object(a.a)([Object(s.b)({type:Boolean,json:{read:{source:"exportOptions.useTime"},write:{target:"exportOptions.useTime"}}})],f.prototype,"useTime",void 0),f=m=Object(a.a)([Object(l.a)("esri.layers.support.TimeInfo")],f);var O=f;t.a=O},435:function(e,t,r){"use strict";r.d(t,"a",(function(){return s}));var i=r(0),a=(r(4),r(9),r(5),r(6),r(1)),n=r(2);r(3),r(10),r(11);const s=e=>{let t=class extends e{constructor(){super(...arguments),this.blendMode="normal",this.effect=null}};return Object(i.a)([Object(a.b)({type:["average","color-burn","color-dodge","color","darken","destination-atop","destination-in","destination-out","destination-over","difference","exclusion","hard-light","hue","invert","lighten","lighter","luminosity","minus","multiply","normal","overlay","plus","reflect","saturation","screen","soft-light","source-atop","source-in","source-out","vivid-light","xor"],nonNullable:!0,json:{read:!1,write:!1,origins:{"web-map":{default:"normal",read:!0,write:!0}}}})],t.prototype,"blendMode",void 0),Object(i.a)([Object(a.b)({type:String})],t.prototype,"effect",void 0),t=Object(i.a)([Object(n.a)("esri.layers.mixins.BlendLayer")],t),t}},456:function(e,t,r){"use strict";r.d(t,"a",(function(){return s}));var i=r(0),a=(r(4),r(9),r(5),r(6),r(1)),n=r(2);r(3),r(10),r(11);const s=e=>{let t=class extends e{constructor(){super(...arguments),this.refreshInterval=0}refresh(){this.emit("refresh")}};return Object(i.a)([Object(a.b)({type:Number,cast:e=>e>=.1?e:e<=0?0:.1,json:{write:!0,origins:{"web-document":{write:!0}}}})],t.prototype,"refreshInterval",void 0),t=Object(i.a)([Object(n.a)("esri.layers.mixins.RefreshableLayer")],t),t}},459:function(e,t,r){"use strict";r.d(t,"a",(function(){return d}));var i=r(0),a=(r(4),r(9),r(5),r(6),r(1)),n=r(33),s=r(2),o=(r(3),r(10),r(11),r(144)),l=r(146),c=r(212),u=r(423),p=r(432);const d=e=>{let t=class extends e{constructor(){super(...arguments),this.timeExtent=null,this.timeOffset=null,this.useViewTime=!0}readOffset(e,t){const r=t.timeInfo.exportOptions;if(!r)return null;const i=r.timeOffset,a=l.d.fromJSON(r.timeOffsetUnits);return i&&a?new u.a({value:i,unit:a}):null}set timeInfo(e){Object(o.k)(e,this.fields),this._set("timeInfo",e)}};return Object(i.a)([Object(a.b)({type:c.a,json:{write:!1}})],t.prototype,"timeExtent",void 0),Object(i.a)([Object(a.b)({type:u.a})],t.prototype,"timeOffset",void 0),Object(i.a)([Object(n.a)("service","timeOffset",["timeInfo.exportOptions"])],t.prototype,"readOffset",null),Object(i.a)([Object(a.b)({value:null,type:p.a,json:{write:!0,origins:{"web-document":{read:!1,write:!1}}}})],t.prototype,"timeInfo",null),Object(i.a)([Object(a.b)({type:Boolean,json:{read:{source:"timeAnimation"},write:{target:"timeAnimation"},origins:{"web-scene":{read:!1,write:!1}}}})],t.prototype,"useViewTime",void 0),t=Object(i.a)([Object(s.a)("esri.layers.mixins.TemporalLayer")],t),t}},462:function(e,t,r){"use strict";r.d(t,"a",(function(){return l}));var i=r(0),a=(r(4),r(9),r(5)),n=(r(6),r(1)),s=r(2),o=(r(3),r(10),r(11),r(302));const l=e=>{let t=class extends e{get title(){if(this._get("title")&&"defaults"!==this.originOf("title"))return this._get("title");if(this.url){const e=Object(o.e)(this.url);if(e&&e.title)return e.title}return this._get("title")||""}set title(e){this._set("title",e)}set url(e){this._set("url",Object(o.f)(e,a.a.getLogger(this.declaredClass)))}};return Object(i.a)([Object(n.b)({dependsOn:["url"]})],t.prototype,"title",null),Object(i.a)([Object(n.b)({type:String})],t.prototype,"url",null),t=Object(i.a)([Object(s.a)("esri.layers.mixins.ArcGISService")],t),t}},514:function(e,t,r){"use strict";r.d(t,"a",(function(){return a})),r.d(t,"b",(function(){return s})),r.d(t,"c",(function(){return n}));var i=r(3);function a(e,t){let r={query:e};return t&&(r={...t,...r}),r}function n(e){return"string"==typeof e?Object(i.H)(e):e}function s(e,t,r){const i={};for(const a in e){if("declaredClass"===a)continue;const n=e[a];if(null!=n&&"function"!=typeof n)if(Array.isArray(n)){i[a]=[];for(let e=0;e<n.length;e++)i[a][e]=s(n[e])}else if("object"==typeof n)if(n.toJSON){const e=n.toJSON(r&&r[a]);i[a]=t?e:JSON.stringify(e)}else i[a]=t?n:JSON.stringify(n);else i[a]=n}return i}},664:function(e,t,r){"use strict";var i,a=r(0),n=(r(4),r(9),r(12)),s=(r(5),r(6)),o=r(1),l=r(2),c=(r(3),r(10),r(11),r(15));let u=i=class extends c.a{constructor(e){super(e),this.variableName=null,this.dimensionName=null,this.values=[],this.isSlice=!1}clone(){return new i({variableName:this.variableName,dimensionName:this.dimensionName,values:Object(n.a)(this.values),isSlice:this.isSlice})}};Object(a.a)([Object(o.b)({type:String,json:{write:!0}})],u.prototype,"variableName",void 0),Object(a.a)([Object(o.b)({type:String,json:{write:!0}})],u.prototype,"dimensionName",void 0),Object(a.a)([Object(o.b)({type:s.p.array(s.p.oneOf([s.p.native(Number),s.p.array(s.p.native(Number))])),json:{write:!0}})],u.prototype,"values",void 0),Object(a.a)([Object(o.b)({type:Boolean,json:{write:!0}})],u.prototype,"isSlice",void 0),u=i=Object(a.a)([Object(l.a)("esri.layers.support.DimensionalDefinition")],u);var p=u;t.a=p},683:function(e,t,r){"use strict";r.r(t);var i,a=r(0),n=(r(4),r(9),r(8)),s=r(5),o=r(6),l=r(1),c=r(2),u=r(22),p=r(3),d=(r(10),r(7)),b=(r(11),r(300)),h=r(215),m=r(419),y=r(462),f=r(435),O=r(412),j=r(429),g=r(425),v=r(456),w=r(437),R=r(459),x=r(526),I=r(12),S=r(25),_=r(32),T=r(33),N=r(14),D=r(65),F=r(28),P=r(29),M=r(36),J=r(95),V=(r(54),r(56)),C=r(94),k=r(658),A=r(218),E=r(417),z=r(261),L=r(183),U=r(316),q=r(664),B=r(627),Q=r(722),H=r(38),G=r(15);const W=Object(_.b)()({MT_FIRST:"first",MT_LAST:"last",MT_MIN:"min",MT_MAX:"max",MT_MEAN:"mean",MT_BLEND:"blend",MT_SUM:"sum"}),X=Object(_.b)()({esriMosaicNone:"none",esriMosaicCenter:"center",esriMosaicNadir:"nadir",esriMosaicViewpoint:"viewpoint",esriMosaicAttribute:"attribute",esriMosaicLockRaster:"lock-raster",esriMosaicNorthwest:"northwest",esriMosaicSeamline:"seamline"});let Y=i=class extends G.a{constructor(e){super(e),this.ascending=!0,this.itemRenderingRule=null,this.lockRasterIds=null,this.method=null,this.multidimensionalDefinition=null,this.objectIds=null,this.operation=null,this.sortField=null,this.sortValue=null,this.viewpoint=null,this.where=null}readAscending(e,t){return null!=t.ascending?t.ascending:null==t.sortAscending||t.sortAscending}readMethod(e,t){return function(e){let t;switch(e?e.toLowerCase().replace("esrimosaic",""):""){case"byattribute":case"attribute":t="esriMosaicAttribute";break;case"lockraster":t="esriMosaicLockRaster";break;case"center":t="esriMosaicCenter";break;case"northwest":t="esriMosaicNorthwest";break;case"nadir":t="esriMosaicNadir";break;case"viewpoint":t="esriMosaicViewpoint";break;case"seamline":t="esriMosaicSeamline";break;case"none":default:t="esriMosaicNone"}return X.fromJSON(t)}(t.mosaicMethod||t.defaultMosaicMethod)}readOperation(e,t){const r=t.mosaicOperation,i=t.mosaicOperator&&t.mosaicOperator.toLowerCase(),a=r||(i?W.toJSON(i):null);return W.fromJSON(a)||"first"}castSortValue(e){return null==e||"string"==typeof e||"number"==typeof e?e:""+e}clone(){return new i({ascending:this.ascending,itemRenderingRule:Object(I.a)(this.itemRenderingRule),lockRasterIds:Object(I.a)(this.lockRasterIds),method:this.method,multidimensionalDefinition:Object(I.a)(this.multidimensionalDefinition),objectIds:Object(I.a)(this.objectIds),operation:this.operation,sortField:this.sortField,sortValue:this.sortValue,viewpoint:Object(I.a)(this.viewpoint),where:this.where})}};Object(a.a)([Object(l.b)({type:Boolean,json:{write:!0}})],Y.prototype,"ascending",void 0),Object(a.a)([Object(T.a)("ascending",["ascending","sortAscending"])],Y.prototype,"readAscending",null),Object(a.a)([Object(l.b)({type:B.a,json:{write:!0}})],Y.prototype,"itemRenderingRule",void 0),Object(a.a)([Object(l.b)({type:[Number],json:{write:{overridePolicy(){return{enabled:"lock-raster"===this.method}}}}})],Y.prototype,"lockRasterIds",void 0),Object(a.a)([Object(l.b)({type:String,json:{type:X.jsonValues,write:{target:"mosaicMethod",writer:X.write}}})],Y.prototype,"method",void 0),Object(a.a)([Object(T.a)("method",["mosaicMethod","defaultMosaicMethod"])],Y.prototype,"readMethod",null),Object(a.a)([Object(l.b)({type:[q.a],json:{write:!0}})],Y.prototype,"multidimensionalDefinition",void 0),Object(a.a)([Object(l.b)({type:[Number],json:{read:{source:"fids"},write:{target:"fids"}}})],Y.prototype,"objectIds",void 0),Object(a.a)([Object(l.b)({json:{type:W.jsonValues,read:{reader:W.read},write:{target:"mosaicOperation",writer:W.write}}})],Y.prototype,"operation",void 0),Object(a.a)([Object(T.a)("operation",["mosaicOperation","mosaicOperator"])],Y.prototype,"readOperation",null),Object(a.a)([Object(l.b)({type:String,json:{write:{overridePolicy(){return{enabled:"attribute"===this.method}}}}})],Y.prototype,"sortField",void 0),Object(a.a)([Object(l.b)({type:[String,Number],json:{write:{allowNull:!0,overridePolicy(){return{enabled:"attribute"===this.method,allowNull:!0}}}}})],Y.prototype,"sortValue",void 0),Object(a.a)([Object(H.a)("sortValue")],Y.prototype,"castSortValue",null),Object(a.a)([Object(l.b)({type:P.a,json:{write:!0}})],Y.prototype,"viewpoint",void 0),Object(a.a)([Object(l.b)({type:String,json:{write:!0}})],Y.prototype,"where",void 0),Y=i=Object(a.a)([Object(c.a)("esri.layers.support.MosaicRule")],Y);var $=Y;const K=new _.a({RSP_NearestNeighbor:"nearest",RSP_BilinearInterpolation:"bilinear",RSP_CubicConvolution:"cubic",RSP_Majority:"majority"}),Z=new _.a({esriNoDataMatchAny:"any",esriNoDataMatchAll:"all"});let ee=class extends G.a{constructor(){super(...arguments),this.layer=null,this.adjustAspectRatio=void 0,this.bandIds=void 0,this.compression=void 0,this.compressionQuality=void 0,this.compressionTolerance=.01,this.format=null,this.interpolation=null,this.noData=null,this.noDataInterpretation=void 0,this.pixelType=void 0,this.lercVersion=2}writeAdjustAspectRatio(e,t,r){this.layer.version<10.3||(t[r]=e)}writeCompressionQuality(e,t,r){this.format&&this.format.toLowerCase().indexOf("jpg")>-1&&null!=e&&(t[r]=e)}writeCompressionTolerance(e,t,r){"lerc"===this.format&&null!=e&&(t[r]=e)}writeLercVersion(e,t,r){"lerc"===this.format&&this.layer.version>=10.5&&(t[r]=e)}get version(){const e=this.layer;return e.bandIds,e.format,e.compressionQuality,e.compressionTolerance,e.interpolation,e.noData,e.noDataInterpretation,e.mosaicRule,e.renderingRule,e.adjustAspectRatio,e.pixelFilter,e.renderer,e.definitionExpression,(this._get("version")||0)+1}set version(e){this._set("version",e)}get mosaicRule(){const e=this.layer;let t=e.mosaicRule;const r=e.definitionExpression;return t?r&&r!==t.where&&(t=t.clone(),t.where=r):r&&(t=new $({where:r})),t}get renderingRule(){const e=this.layer;let t=e.renderingRule;const r=e.pixelFilter,i=!e.format||e.format.indexOf("jpg")>-1||e.format.indexOf("png")>-1;return t=this._addResampleRasterFunction(t),i&&!r&&(t=this.combineRendererWithRenderingRule()),t}combineRendererWithRenderingRule(){var e;const t=this.layer,{rasterInfo:r,renderingRule:i,renderer:a}=t;return a&&Object(Q.c)(a)?Object(Q.a)(Object(Q.b)(a,{rasterAttributeTable:r.attributeTable,pixelType:r.pixelType,dataType:r.dataType,bandProperties:null==(e=r.keyProperties)?void 0:e.BandProperties,convertColorRampToColormap:t.version<10.6}),i):i}_addResampleRasterFunction(e){var t;let r=null;if("vector-field"===(null==(t=this.layer.renderer)?void 0:t.type)){const e={},t=this.layer.renderingRule;if(!t||"Resample"!==t.functionName){const t="esriImageServiceDataTypeVector-UV"===this.layer.serviceDataType?7:10;e.rasterFunction="Resample",e.rasterFunctionArguments={ResamplingType:t,InputCellSize:{x:this.layer.pixelSizeX,y:this.layer.pixelSizeY}}}r=B.a.fromJSON(e)}return Object(Q.a)(r,e)}};Object(a.a)([Object(l.b)()],ee.prototype,"layer",void 0),Object(a.a)([Object(l.b)({json:{write:!0}})],ee.prototype,"adjustAspectRatio",void 0),Object(a.a)([Object(u.a)("adjustAspectRatio")],ee.prototype,"writeAdjustAspectRatio",null),Object(a.a)([Object(l.b)({json:{write:!0}}),Object(S.a)("layer.bandIds")],ee.prototype,"bandIds",void 0),Object(a.a)([Object(l.b)({json:{write:!0}})],ee.prototype,"compression",void 0),Object(a.a)([Object(l.b)({json:{write:!0}}),Object(S.a)("layer.compressionQuality")],ee.prototype,"compressionQuality",void 0),Object(a.a)([Object(u.a)("compressionQuality")],ee.prototype,"writeCompressionQuality",null),Object(a.a)([Object(l.b)({json:{write:!0}}),Object(S.a)("layer.compressionTolerance")],ee.prototype,"compressionTolerance",void 0),Object(a.a)([Object(u.a)("compressionTolerance")],ee.prototype,"writeCompressionTolerance",null),Object(a.a)([Object(l.b)({json:{write:!0}}),Object(S.a)("layer.format")],ee.prototype,"format",void 0),Object(a.a)([Object(l.b)({type:String,json:{read:{reader:K.read},write:{writer:K.write}}}),Object(S.a)("layer.interpolation")],ee.prototype,"interpolation",void 0),Object(a.a)([Object(l.b)({json:{write:!0}}),Object(S.a)("layer.noData")],ee.prototype,"noData",void 0),Object(a.a)([Object(l.b)({type:String,json:{read:{reader:Z.read},write:{writer:Z.write}}}),Object(S.a)("layer.noDataInterpretation")],ee.prototype,"noDataInterpretation",void 0),Object(a.a)([Object(l.b)({json:{write:!0}})],ee.prototype,"pixelType",void 0),Object(a.a)([Object(l.b)({json:{write:!0}})],ee.prototype,"lercVersion",void 0),Object(a.a)([Object(u.a)("lercVersion")],ee.prototype,"writeLercVersion",null),Object(a.a)([Object(l.b)({type:Number,dependsOn:["layer.adjustAspectRatio","layer.bandIds","layer.format","layer.compressionQuality","layer.compressionTolerance","layer.definitionExpression","layer.interpolation","layer.noData","layer.noDataInterpretation","layer.mosaicRule","layer.renderingRule","layer.pixelFilter","layer.renderer","lercVersion","pixelType"]})],ee.prototype,"version",null),Object(a.a)([Object(l.b)({dependsOn:["layer.mosaicRule","layer.definitionExpression"],json:{write:!0}})],ee.prototype,"mosaicRule",null),Object(a.a)([Object(l.b)({dependsOn:["layer.renderingRule","layer.renderer","layer.rasterInfo","layer.format"],json:{write:!0}})],ee.prototype,"renderingRule",null),ee=Object(a.a)([Object(c.a)("esri.layers.mixins.ExportImageServiceParameters")],ee);var te=r(562),re=r(593),ie=r(727),ae=r(734),ne=r(735),se=r(738),oe=r(309),le=r(303),ce=r(514);let ue=class extends G.a{constructor(){super(...arguments),this.catalogItemVisibilities=null,this.catalogItems=null,this.location=null,this.name=null,this.objectId=null,this.processedValues=null,this.properties=null,this.value=null}};Object(a.a)([Object(l.b)({json:{write:!0}})],ue.prototype,"catalogItemVisibilities",void 0),Object(a.a)([Object(l.b)({type:z.default,json:{write:!0}})],ue.prototype,"catalogItems",void 0),Object(a.a)([Object(l.b)({type:P.a,json:{write:!0}})],ue.prototype,"location",void 0),Object(a.a)([Object(l.b)({json:{write:!0}})],ue.prototype,"name",void 0),Object(a.a)([Object(l.b)({json:{write:!0}})],ue.prototype,"objectId",void 0),Object(a.a)([Object(l.b)({json:{write:!0}})],ue.prototype,"processedValues",void 0),Object(a.a)([Object(l.b)({json:{write:!0}})],ue.prototype,"properties",void 0),Object(a.a)([Object(l.b)({json:{write:!0}})],ue.prototype,"value",void 0),ue=Object(a.a)([Object(c.a)("esri.tasks.support.ImageServiceIdentifyResult")],ue);var pe=ue;let de=class extends oe.a{execute(e,t){return async function(e,t,r){const i=Object(ce.c)(e),a=t.geometry?[t.geometry]:[];return Object(le.a)(a).then(e=>{const a=t.toJSON(),s=e&&e[0];Object(n.h)(s)&&(a.geometry=JSON.stringify(s.toJSON()));const o=Object(ce.b)({...i.query,f:"json",...a}),l=Object(ce.a)(o,r);return Object(D.default)(i.path+"/identify",l)}).then(e=>pe.fromJSON(e.data))}(this.url,e,t)}};de=Object(a.a)([Object(c.a)("esri.tasks.ImageServiceIdentifyTask")],de);var be=de,he=r(59),me=r(212);let ye=class extends G.a{constructor(){super(...arguments),this.geometry=null,this.renderingRules=null,this.pixelSize=null,this.returnGeometry=!0,this.returnCatalogItems=!0,this.returnPixelValues=!0,this.maxItemCount=null,this.timeExtent=null,this.raster=void 0,this.viewId=void 0}writeGeometry(e,t,r){null!=e&&(t.geometryType=Object(he.c)(e),t[r]=JSON.stringify(e.toJSON()))}set mosaicRule(e){let t=e;t&&t.mosaicMethod&&(t=$.fromJSON({...t.toJSON(),mosaicMethod:t.mosaicMethod,mosaicOperation:t.mosaicOperation})),this._set("mosaicRule",t)}writeMosaicRule(e,t,r){null!=e&&(t[r]=JSON.stringify(e.toJSON()))}set renderingRule(e){let t=e;t&&t.rasterFunction&&(t=B.a.fromJSON({...t.toJSON(),rasterFunction:t.rasterFunction,rasterFunctionArguments:t.rasterFunctionArguments})),this._set("renderingRule",t)}writeRenderingRule(e,t,r){null!=e&&(t[r]=JSON.stringify(e.toJSON()))}writeRenderingRules(e,t,r){null!=e&&(t[r]=JSON.stringify(e.map(e=>e.toJSON())))}writePixelSize(e,t,r){null!=e&&(t[r]=JSON.stringify(e.toJSON()))}writeTimeExtent(e,t,r){if(null!=e){const i=e.start?e.start.getTime():null,a=e.end?e.end.getTime():null;t[r]=null!=i?null!=a?`${i},${a}`:""+i:null}}};Object(a.a)([Object(l.b)({json:{write:!0}})],ye.prototype,"geometry",void 0),Object(a.a)([Object(u.a)("geometry")],ye.prototype,"writeGeometry",null),Object(a.a)([Object(l.b)({type:$,json:{write:!0}})],ye.prototype,"mosaicRule",null),Object(a.a)([Object(u.a)("mosaicRule")],ye.prototype,"writeMosaicRule",null),Object(a.a)([Object(l.b)({type:B.a,json:{write:!0}})],ye.prototype,"renderingRule",null),Object(a.a)([Object(u.a)("renderingRule")],ye.prototype,"writeRenderingRule",null),Object(a.a)([Object(l.b)({type:[B.a],json:{write:!0}})],ye.prototype,"renderingRules",void 0),Object(a.a)([Object(u.a)("renderingRules")],ye.prototype,"writeRenderingRules",null),Object(a.a)([Object(l.b)({type:P.a,json:{write:!0}})],ye.prototype,"pixelSize",void 0),Object(a.a)([Object(u.a)("pixelSize")],ye.prototype,"writePixelSize",null),Object(a.a)([Object(l.b)({type:Boolean,json:{write:!0}})],ye.prototype,"returnGeometry",void 0),Object(a.a)([Object(l.b)({type:Boolean,json:{write:!0}})],ye.prototype,"returnCatalogItems",void 0),Object(a.a)([Object(l.b)({type:Boolean,json:{write:!0}})],ye.prototype,"returnPixelValues",void 0),Object(a.a)([Object(l.b)({type:Number,json:{write:!0}})],ye.prototype,"maxItemCount",void 0),Object(a.a)([Object(l.b)({type:me.a,json:{write:{target:"time"}}})],ye.prototype,"timeExtent",void 0),Object(a.a)([Object(u.a)("timeExtent")],ye.prototype,"writeTimeExtent",null),Object(a.a)([Object(l.b)({json:{write:!0}})],ye.prototype,"raster",void 0),Object(a.a)([Object(l.b)({json:{write:!0}})],ye.prototype,"viewId",void 0),ye=Object(a.a)([Object(c.a)("esri.tasks.support.ImageServiceIdentifyParameters")],ye);var fe=ye;const Oe=s.a.getLogger("esri.layers.mixins.ArcGISImageService"),je=Object(_.b)()({RSP_NearestNeighbor:"nearest",RSP_BilinearInterpolation:"bilinear",RSP_CubicConvolution:"cubic",RSP_Majority:"majority"}),ge=Object(_.b)()({esriNoDataMatchAny:"any",esriNoDataMatchAll:"all"}),ve=Object(_.b)()({U1:"u1",U2:"u2",U4:"u4",U8:"u8",S8:"s8",U16:"u16",S16:"s16",U32:"u32",S32:"s32",F32:"f32",F64:"f64",C64:"c64",C128:"c128",UNKNOWN:"unknown"}),we=Object(V.a)(["png","png8","png24","png32","jpg","bmp","gif","jpgpng","lerc","tiff"]),Re=Object(l.a)(o.i,{min:0,max:255}),xe=e=>{let t=class extends e{constructor(){super(...arguments),this._functionRasterInfos={},this._rasterJobHandler={instance:null,refCount:0,connectionPromise:null},this._symbolizer=null,this._defaultServiceMosaicRule=null,this.rasterAttributeTableFieldPrefix="Raster.",this.adjustAspectRatio=null,this.bandCount=null,this.bandIds=void 0,this.capabilities=null,this.compressionQuality=void 0,this.compressionTolerance=.01,this.copyright=null,this.definitionExpression=null,this.exportImageServiceParameters=null,this.rasterInfo=null,this.fields=null,this.fullExtent=null,this.hasMultidimensions=!1,this.imageMaxHeight=4100,this.imageMaxWidth=4100,this.interpolation=void 0,this.minScale=0,this.maxScale=0,this.multidimensionalInfo=null,this.noData=null,this.noDataInterpretation=void 0,this.objectIdField=null,this.pixelSizeX=null,this.pixelSizeY=null,this.pixelFilter=null,this.raster=void 0,this.viewId=void 0,this.renderer=null,this.rasterAttributeTable=null,this.rasterFunctionInfos=null,this.serviceDataType=null,this.spatialReference=null,this.pixelType=null,this.serviceRasterInfo=null,this.sourceJSON=null,this.url=null,this.version=null}initialize(){this._set("exportImageServiceParameters",new ee({layer:this}))}readDefaultServiceMosaicRule(e,t){return $.fromJSON(t)}get rasterFunctionNamesIndex(){const e=new Map;return!this.rasterFunctionInfos||this.rasterFunctionInfos.length<1||this.rasterFunctionInfos.forEach(t=>{e.set(t.name.toLowerCase().replace(/ /gi,"_"),t.name)}),e}get queryTask(){return new U.a({url:this.url})}readBandIds(e,t){if(Array.isArray(e)&&e.length>0&&e.every(e=>"number"==typeof e))return e}readCapabilities(e,t){return this._readCapabilities(t)}writeCompressionQuality(e,t,r){null!=e&&"lerc"!==this.format&&(t[r]=e)}writeCompressionTolerance(e,t,r){"lerc"===this.format&&null!=e&&(t[r]=e)}get fieldsIndex(){return this.fields?new E.a(this.fields):null}set format(e){e&&we.has(e.toLowerCase())&&this._set("format",e.toLowerCase())}readFormat(e,t){return"esriImageServiceDataTypeVector-UV"===t.serviceDataType||"esriImageServiceDataTypeVector-MagDir"===t.serviceDataType||null!=this.pixelFilter?"lerc":"jpgpng"}readMinScale(e,t){return null!=t.minLOD&&null!=t.maxLOD?e:0}readMaxScale(e,t){return null!=t.minLOD&&null!=t.maxLOD?e:0}set mosaicRule(e){let t=e;t&&t.mosaicMethod&&(t=$.fromJSON({...t.toJSON(),mosaicMethod:t.mosaicMethod,mosaicOperation:t.mosaicOperation})),this._set("mosaicRule",t)}readMosaicRule(e,t){return $.fromJSON(e||t.mosaicRule||t)}writeMosaicRule(e,t,r){let i=this.mosaicRule;const a=this.definitionExpression;i?a&&a!==i.where&&(i=i.clone(),i.where=a):a&&(i=new $({where:a})),this._isValidCustomizedMosaicRule(i)&&(t[r]=i.toJSON())}writeNoData(e,t,r){null!=e&&"number"==typeof e&&(t[r]=Re(e))}readObjectIdField(e,t){if(!e){const r=t.fields.filter(e=>"esriFieldTypeOID"===e.type||"oid"===e.type);e=r&&r[0]&&r[0].name}return e}get parsedUrl(){return this.url?Object(p.H)(this.url):null}readRenderer(e,t,r){const i=t&&t.layerDefinition&&t.layerDefinition.drawingInfo&&t.layerDefinition.drawingInfo.renderer,a=Object(k.b)(i,r)||void 0;if(null!=a)return Object(Q.c)(a)||Oe.warn("ArcGISImageService","Imagery layer doesn't support given renderer type."),a}get rasterFields(){const e=this.rasterAttributeTableFieldPrefix||"Raster.",t=new A.a({name:"Raster.ItemPixelValue",alias:"Item Pixel Value",domain:null,editable:!1,length:50,type:"string"}),r=new A.a({name:"Raster.ServicePixelValue",alias:"Service Pixel Value",domain:null,editable:!1,length:50,type:"string"}),i=new A.a({name:"Raster.ServicePixelValue.Raw",alias:"Raw Service Pixel Value",domain:null,editable:!1,length:50,type:"string"});let a=this.fields?Object(I.a)(this.fields):[];a.push(r),this.capabilities.operations.supportsQuery&&this.fields&&this.fields.length>0&&a.push(t),this.version>=10.4&&this.rasterFunctionInfos&&this.rasterFunctionInfos.some(e=>"none"===e.name.toLowerCase())&&a.push(i),this.rasterFunctionInfos&&this.rasterFunctionInfos.filter(e=>"none"!==e.name.toLowerCase()).forEach(e=>{a.push(new A.a({name:"Raster.ServicePixelValue."+e.name,alias:e.name,domain:null,editable:!1,length:50,type:"string"}))}),null==this.pixelFilter||"esriImageServiceDataTypeVector-UV"!==this.serviceDataType&&"esriImageServiceDataTypeVector-MagDir"!==this.serviceDataType||(a.push(new A.a({name:"Raster.Magnitude",alias:"Magnitude",domain:null,editable:!1,type:"double"})),a.push(new A.a({name:"Raster.Direction",alias:"Direction",domain:null,editable:!1,type:"double"})));const n=this.rasterInfo.attributeTable&&this.rasterInfo.attributeTable.fields||null;if(n&&n.length>0){const t=n.filter(e=>"esriFieldTypeOID"!==e.type&&"value"!==e.name.toLowerCase()).map(t=>{const r=Object(I.a)(t);return r.name=e+t.name,r});a=a.concat(t)}return a}set renderingRule(e){let t=e;t&&t.rasterFunction&&(t=B.a.fromJSON({...t.toJSON(),rasterFunction:t.rasterFunction,rasterFunctionArguments:t.rasterFunctionArguments})),this._set("renderingRule",t)}readRenderingRule(e,t){const r=t.rasterFunctionInfos;return t.renderingRule||r&&r.length&&"None"!==r[0].name?B.a.fromJSON(t.renderingRule||{rasterFunctionInfos:t.rasterFunctionInfos}):null}writeRenderingRule(e,t,r){this._isRFTJson(e)||(t[r]=e.toJSON())}readSpatialReference(e,t){const r=e||t.extent.spatialReference;return r?F.a.fromJSON(r):null}readPixelType(e){return ve.fromJSON(e)||e}writePixelType(e,t,r){(Object(n.g)(this.serviceRasterInfo)||this.pixelType!==this.serviceRasterInfo.pixelType)&&(t[r]=ve.toJSON(e))}readVersion(e,t){let r=t.currentVersion;return r||(r=t.hasOwnProperty("fields")||t.hasOwnProperty("timeInfo")?10:9.3),r}applyFilter(e){let t=e;return this.pixelFilter&&(t=this._clonePixelData(e),this.pixelFilter(t)),t}async applyRenderer(e,t){let r=e;if(!this._isPicture()&&this.renderer&&this._symbolizer&&!this.pixelFilter){const i=JSON.stringify(this._cachedRendererJson)!==JSON.stringify(this.renderer.toJSON()),a=this._rasterJobHandler.instance,{bandIds:n}=this;if(a){i&&(this._symbolizer.bind(),await a.updateSymbolizer(this._symbolizer,t),this._cachedRendererJson=this.renderer.toJSON());const s=await a.symbolize({bandIds:n,...e},t);r={extent:e.extent,pixelBlock:s}}else r={extent:e.extent,pixelBlock:this._symbolizer.symbolize({bandIds:n,...e})}}return r}destroy(){this._shutdownJobHandler()}increaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount++}decreaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount--,this._rasterJobHandler.refCount<=0&&this._shutdownJobHandler()}fetchImage(e,t,r,i={}){if(null==e||null==t||null==r)return Object(d.h)(new N.a("imagery-layer:fetch-image","Insufficient parameters for requesting an image. A valid extent, width and height values are required."));const a=this.renderer||this._symbolizer?this.generateRasterInfo(this.renderingRule,{signal:i.signal}):null;return Object(d.w)(a).then(a=>{a&&(this.rasterInfo=a);const n={imageServiceParameters:this.getExportImageServiceParameters(e,t,r,i.timeExtent),imageProps:{extent:e,width:t,height:r,format:this.format},requestAsImageElement:i.requestAsImageElement&&!this.pixelFilter||!1,signal:i.signal};return this._requestArrayBuffer(n)})}fetchKeyProperties(e){const t=e&&e.renderingRule&&e.renderingRule.toJSON();return Object(D.default)(this.parsedUrl.path+"/keyProperties",{query:this._getQueryParams({renderingRule:this.version>=10.3&&t?JSON.stringify(t):null})}).then(e=>e.data)}fetchRasterAttributeTable(e){const t=e&&e.renderingRule&&e.renderingRule.toJSON();return this.version<10.1?Object(d.h)(new N.a("#fetchRasterAttributeTable()","Failed to get rasterAttributeTable")):Object(D.default)(this.parsedUrl.path+"/rasterAttributeTable",{query:this._getQueryParams({renderingRule:this.version>=10.3&&t?JSON.stringify(t):null})}).then(e=>z.default.fromJSON(e.data))}async getCatalogItemRasterInfo(e,t){const r=Object(D.default)(this.parsedUrl.path+"/"+e+"/info",{query:this._getQueryParams(),...t}).then(e=>e.data),i=Object(D.default)(this.parsedUrl.path+"/"+e+"/info/keyProperties",{query:this._getQueryParams(),...t}).then(e=>e.data).catch(()=>{}),a=await Object(d.a)([r,i]);if(!a[0])return;const n=M.a.fromJSON(a[0].extent),s=a[0].statistics?a[0].statistics.map(e=>({min:e[0],max:e[1],avg:e[2],stddev:e[3]})):null;return new re.a({bandCount:a[0].bandCount,extent:n,spatialReference:n.sr,pixelSize:new P.a({x:a[0].pixelSizeX,y:a[0].pixelSizeY,spatialReference:n.sr}),pixelType:a[0].pixelType.toLowerCase(),statistics:s,histograms:a[0].histograms,keyProperties:a[1]||{}})}async getCatalogItemICSInfo(e,t){const{data:r}=await Object(D.default)(this.parsedUrl.path+"/"+e+"/info/ics",{query:this._getQueryParams(),...t}),i=r&&r.ics;if(!i)return;let a=null;try{a=(await Object(D.default)(this.parsedUrl.path+"/"+e+"/info",{query:this._getQueryParams(),...t})).data.extent}catch{}if(!a||!a.spatialReference)return{ics:i,icsToPixelTransform:null,icsExtent:null,northDirection:null};const n=this.version>=10.7?Object(D.default)(this.parsedUrl.path+"/"+e+"/info/icstopixel",{query:this._getQueryParams(),...t}).then(e=>e.data).catch(()=>({})):{},s=a.spatialReference,o={geometries:JSON.stringify({geometryType:"esriGeometryEnvelope",geometries:[a]}),inSR:s.wkid||JSON.stringify(s),outSR:"0:"+e},l=Object(D.default)(this.parsedUrl.path+"/project",{query:this._getQueryParams(o),...t}).then(e=>e.data).catch(()=>({})),c=(a.xmin+a.xmax)/2,u=(a.ymax-a.ymin)/6,p=a.ymin+u,b=[];for(let e=0;e<5;e++)b.push({x:c,y:p+u*e});const h={geometries:JSON.stringify({geometryType:"esriGeometryPoint",geometries:b}),inSR:s.wkid||JSON.stringify(s),outSR:"0:"+e},m=Object(D.default)(this.parsedUrl.path+"/project",{query:this._getQueryParams(h),...t}).then(e=>e.data).catch(()=>({})),y=await Object(d.a)([n,l,m]);let f=y[0].ipxf;if(null==f){var O,j,g;const e=null==(O=i.geodataXform)?void 0:O.xf_0;"topup"===(null==e||null==(j=e.name)?void 0:j.toLowerCase())&&6===(null==e||null==(g=e.coefficients)?void 0:g.length)&&(f={affine:{name:"ics [sensor: Frame] to pixel (column, row) transformation",coefficients:e.coefficients,cellsizeRatio:0,type:"GeometricXform"}})}const v=M.a.fromJSON(y[1]&&y[1].geometries&&y[1].geometries[0]);v&&(v.spatialReference=new F.a({wkid:0,imageCoordinateSystem:i}));const w=y[2].geometries?y[2].geometries.filter(e=>null!=e&&null!=e.x&&null!=e.y&&"NaN"!==e.x&&"NaN"!==e.y):[],R=w.length;if(R<3)return{ics:i,icsToPixelTransform:f,icsExtent:v,northDirection:null};let x=0,I=0,S=0,_=0;for(let e=0;e<R;e++)x+=w[e].x,I+=w[e].y,S+=w[e].x*w[e].x,_+=w[e].x*w[e].y;const T=(R*_-x*I)/(R*S-x*x);let N=0;const P=w[4].x>w[0].x,J=w[4].y>w[0].y;return T===1/0?N=J?90:270:0===T?N=P?0:180:T>0?N=P?180*Math.atan(T)/Math.PI:180*Math.atan(T)/Math.PI+180:T<0&&(N=J?180+180*Math.atan(T)/Math.PI:360+180*Math.atan(T)/Math.PI),{ics:i,icsToPixelTransform:f,icsExtent:v,northDirection:N}}async generateRasterInfo(e,t){if((!e||"none"===e.functionName.toLowerCase())&&Object(n.h)(this.serviceRasterInfo))return this.serviceRasterInfo;const r=function(e){if(!e)return null;const t=JSON.stringify(e).match(/"rasterFunction":"(.*?")/gi),r=null==t?void 0:t.map(e=>e.replace('"rasterFunction":"',"").replace('"',""));return r?r.join("/"):null}(e);if(this._functionRasterInfos[r])return this._functionRasterInfos[r];const i=this._generateRasterInfo(e,t);this._functionRasterInfos[r]=i;try{return await i}catch{return this._functionRasterInfos[r]=null,null}}getExportImageServiceParameters(e,t,r,i){const a=(e=e.clone().shiftCentralMeridian()).spatialReference;let s;if(a.imageCoordinateSystem){const{id:e,referenceServiceName:t}=a.imageCoordinateSystem;s=null!=e?t?this.parsedUrl.path.toLowerCase().indexOf("/"+t.toLowerCase()+"/")>-1?"0:"+e:JSON.stringify({icsid:e,icsns:t}):"0:"+e:JSON.stringify({ics:a.imageCoordinateSystem})}else s=a.wkid||JSON.stringify(a.toJSON());Object(n.h)(this.serviceRasterInfo)&&this.pixelType!==this.serviceRasterInfo.pixelType&&(this.exportImageServiceParameters.pixelType=this.pixelType);const o=this.exportImageServiceParameters.toJSON(),{bandIds:l,noData:c,mosaicRule:u,renderingRule:p}=o;l instanceof Array&&l.length>0&&(o.bandIds=l.join(",")),c instanceof Array&&c.length>0&&(o.noData=c.join(","));const d=this.timeInfo;u&&u.multidimensionalDefinition&&i&&d&&d.startField&&(u.multidimensionalDefinition=u.multidimensionalDefinition.filter(e=>e.dimensionName!==d.startField)),o.mosaicRule=u&&JSON.stringify(u),o.renderingRule=p&&JSON.stringify(p);const b={};if(i){const{start:e,end:t}=i.toJSON();e&&t&&e===t?b.time=""+e:null==e&&null==t||(b.time=`${null==e?"null":e},${null==t?"null":t}`)}return{bbox:e.xmin+","+e.ymin+","+e.xmax+","+e.ymax,bboxSR:s,imageSR:s,size:t+","+r,...o,...b}}queryRasters(e){return this.queryTask.execute(e)}queryVisibleRasters(e,t){if(!e)return Object(d.h)(new N.a("imagery-layer: query-visible-rasters","missing query parameter"));const{pixelSize:r,returnDomainValues:i,returnTopmostRaster:a,showNoDataRecords:n}=t||{pixelSize:null,returnDomainValues:!1,returnTopmostRaster:!1,showNoDataRecords:!1};let s=!1,o=null,l=null;const c="raster.servicepixelvalue",u=this.rasterFunctionNamesIndex;if(e.outFields&&(s=e.outFields.some(e=>-1===e.toLowerCase().indexOf(c)),this.version>=10.4)){const t=e.outFields.filter(e=>e.toLowerCase().indexOf(c)>-1&&e.length>c.length).map(e=>{const t=e.slice(c.length+1);return[this._updateRenderingRulesFunctionName(t,u),t]});o=t.map(e=>new B.a({functionName:e[0]})),l=t.map(e=>e[1]),0===o.length?this.renderingRule?(o.push(this.renderingRule),l.push(this.renderingRule.functionName)):o=null:this.renderingRule&&!o.some(e=>e.functionName===this.renderingRule.functionName)&&(o.push(this.renderingRule),l.push(this.renderingRule.functionName))}const p=!e.outSpatialReference||e.outSpatialReference.equals(this.spatialReference),b=this._getQueryParams({geometry:e.geometry,timeExtent:e.timeExtent,mosaicRule:this.exportImageServiceParameters.mosaicRule,renderingRule:this.version<10.4?this.renderingRule:null,renderingRules:o,pixelSize:r,returnCatalogItems:s,returnGeometry:p,maxItemCount:a?1:null});delete b.f;const h=new fe(b),m=new be({url:this.url}),y=this.generateRasterInfo(this.renderingRule);return Object(d.f)(t=>{y.then(()=>{m.execute(h).then(r=>{const a=e.outFields;if(s&&!p&&r.catalogItems&&r.catalogItems.features&&r.catalogItems.features.length>0){const s=this.objectIdField||"ObjectId",o=r.catalogItems.features,c=o.map(e=>e.attributes&&e.attributes[s]),u=new L.a({objectIds:c,returnGeometry:!0,outSpatialReference:e.outSpatialReference,outFields:[s]});return this.queryRasters(u).then(c=>{c&&c.features&&c.features.length>0&&c.features.forEach(t=>{o.forEach(r=>{r.attributes[s]===t.attributes[s]&&(r.geometry=new J.a(t.geometry),r.geometry.spatialReference=e.outSpatialReference)})}),t(this._processVisibleRastersResponse(r,{returnDomainValues:i,templateRRFunctionNames:l,showNoDataRecords:n,templateFields:a}))}).catch(()=>{throw new N.a("imagery-layer:query-visible-rasters","encountered error when querying visible rasters geometry")})}t(this._processVisibleRastersResponse(r,{returnDomainValues:i,templateRRFunctionNames:l,showNoDataRecords:n,templateFields:a}))}).catch(()=>{throw new N.a("imagery-layer:query-visible-rasters","encountered error when querying visible rasters")})})})}async fetchVariableStatisticsHistograms(e,t){const r=Object(D.default)(this.parsedUrl.path+"/statistics",{query:this._getQueryParams({variable:e}),signal:t}).then(e=>{var t;return null==(t=e.data)?void 0:t.statistics}),i=Object(D.default)(this.parsedUrl.path+"/histograms",{query:this._getQueryParams({variable:e}),signal:t}).then(e=>{var t;return null==(t=e.data)?void 0:t.histograms}),a=await Object(d.a)([r,i]);return a[0]&&a[0].forEach(e=>{e.avg=e.mean,e.stddev=e.standardDeviation}),{statistics:a[0]||null,histograms:a[1]||null}}async _fetchService(e){var t;let r=this.sourceJSON;if(!r){const{data:t,ssl:i}=await Object(D.default)(this.parsedUrl.path,{query:this._getQueryParams(),signal:e});r=t,this.sourceJSON=r,i&&(this.url=this.url.replace(/^http:/i,"https:"))}if((null==(t=r.capabilities)?void 0:t.toLowerCase().split(",").map(e=>e.trim()).indexOf("tilesonly"))>-1)throw new N.a("imagery-layer:fetch-metadata","use ImageryTileLayer to open tiles-only image services");this.read(r,{origin:"service",url:this.parsedUrl}),Object(n.h)(this.serviceRasterInfo)&&!this.rasterInfo&&(this.rasterInfo=this.serviceRasterInfo);const i=Object(n.h)(this.serviceRasterInfo)?Object(d.r)(this.serviceRasterInfo):this._fetchAuxiliaryRasterInfo({serviceInfo:r,signal:e}).then(e=>(this._set("serviceRasterInfo",e),e)),a=this.renderingRule&&"none"!==this.renderingRule.functionName.toLowerCase()?this.generateRasterInfo(this.renderingRule,{signal:e}):null;return Object(d.a)([i,a]).then(e=>{e[1]?this._set("rasterInfo",e[1]):this._set("rasterInfo",e[0]),this._configDefaultRenderer(),this.watch("renderer",()=>this._configDefaultRenderer()),this.watch("renderingRule",e=>{(this.renderer||this._symbolizer||this.popupEnabled&&this.popupTemplate)&&this.generateRasterInfo(e).then(e=>{e&&(this.rasterInfo=e)})});const t=Object(n.h)(this.serviceRasterInfo)&&this.serviceRasterInfo.multidimensionalInfo;t&&this._updateMultidimensionalDefinition(t)})}async _initJobHandler(){if(null!=this._rasterJobHandler.connectionPromise)return this._rasterJobHandler.connectionPromise;const e=new ie.a;this._rasterJobHandler.connectionPromise=e.initialize().then(()=>{this._rasterJobHandler.instance=e},()=>null),await this._rasterJobHandler.connectionPromise}_shutdownJobHandler(){this._rasterJobHandler.instance&&this._rasterJobHandler.instance.destroy(),this._rasterJobHandler.instance=null,this._rasterJobHandler.connectionPromise=null,this._rasterJobHandler.refCount=0}_isPicture(){return!this.format||this.format.indexOf("jpg")>-1||this.format.indexOf("png")>-1}_configDefaultRenderer(){if(!this._isPicture()&&!this.pixelFilter){if(!this.bandIds&&this.rasterInfo.bandCount>=3){const e=Object(ne.b)(this.rasterInfo);!e||3===this.rasterInfo.bandCount&&0===e[0]&&1===e[1]&&2===e[2]||(this.bandIds=e)}var e,t;this.renderer||(this.renderer=Object(ne.a)(this.rasterInfo,{bandIds:this.bandIds,variableName:this.renderingRule?null:null==(e=this.mosaicRule)||null==(t=e.multidimensionalDefinition)?void 0:t[0].variableName})),this._symbolizer?(this._symbolizer.renderer=this.renderer,this._symbolizer.rasterInfo=this.rasterInfo):this._symbolizer=new se.a({renderer:this.renderer,rasterInfo:this.rasterInfo}),this._symbolizer.bind()||(this._symbolizer=null)}}_clonePixelData(e){return null==e?e:{extent:e.extent&&e.extent.clone(),pixelBlock:e.pixelBlock&&e.pixelBlock.clone()}}_getQueryParams(e){const{raster:t,viewId:r}=this;return{raster:t,viewId:r,f:"json",...e}}_decodePixelBlock(e,t,r){return this._rasterJobHandler.instance?this._rasterJobHandler.instance.decode({data:e,options:t}):Object(ae.a)(e,t,r)}async _fetchMultidimensionalInfo(e){var t;const r=await Object(D.default)(this.parsedUrl.path+"/multidimensionalInfo",{query:this._getQueryParams(),signal:e}).then(e=>{var t;return null==(t=e.data)?void 0:t.multidimensionalInfo});return(null==(t=r.variables)?void 0:t.length)&&r.variables.forEach(e=>{var t;(null==(t=e.statistics)?void 0:t.length)&&e.statistics.forEach(e=>{e.avg=e.mean,e.stddev=e.standardDeviation})}),r}_fetchAuxiliaryRasterInfo(e){const t=e&&e.serviceInfo;if(!t)return Object(d.h)(new N.a("imagery-layer:fetch-metadata","valid serviceInfo is required"));const r=e.renderingRule?JSON.stringify(e.renderingRule.toJSON()):null,i=e.signal,a=!!(t.hasRasterAttributeTable&&this.version>=10.1)&&Object(D.default)(this.parsedUrl.path+"/rasterAttributeTable",{query:this._getQueryParams({renderingRule:this.version>=10.1?r:null}),signal:i}).then(e=>z.default.fromJSON(e.data)).catch(()=>null),n=!!(t.hasColormap&&this.version>=10.1)&&Object(D.default)(this.parsedUrl.path+"/colormap",{query:this._getQueryParams({renderingRule:this.version>=10.6?r:null}),signal:i}).then(e=>{var t;return null==(t=e.data)?void 0:t.colormap}),s=!!(t.hasHistograms&&this.version>=10.1)&&Object(D.default)(this.parsedUrl.path+"/histograms",{query:this._getQueryParams({renderingRule:this.version>=10.1?r:null}),signal:i}).then(e=>{var t;return null==(t=e.data)?void 0:t.histograms}),o=this.version>=10.3&&Object(D.default)(this.parsedUrl.path+"/keyProperties",{query:this._getQueryParams({renderingRule:r}),signal:i}).then(e=>e.data).catch(()=>{}),l=!!(t.hasMultidimensions&&this.version>=10.3)&&this._fetchMultidimensionalInfo();return Object(d.a)([a,n,s,o,l]).then(e=>{let r=null;if(t.minValues&&t.minValues.length===t.bandCount){r=[];for(let e=0;e<t.minValues.length;e++)r.push({min:t.minValues[e],max:t.maxValues[e],avg:t.meanValues[e],stddev:t.stdvValues[e]})}const i=Math.ceil((t.extent.xmax-t.extent.xmin)/t.pixelSizeX-.1),a=Math.ceil((t.extent.ymax-t.extent.ymin)/t.pixelSizeY-.1),n=F.a.fromJSON(t.spatialReference||t.extent.spatialReference);return new re.a({width:i,height:a,bandCount:t.bandCount,extent:M.a.fromJSON(t.extent),spatialReference:n,pixelSize:new P.a({x:t.pixelSizeX,y:t.pixelSizeY,spatialReference:n}),pixelType:t.pixelType.toLowerCase(),statistics:r,attributeTable:e[0]||null,colormap:e[1]||null,histograms:e[2]||null,keyProperties:e[3]||{},multidimensionalInfo:e[4]||null})})}_requestArrayBuffer(e){const{imageProps:t,requestAsImageElement:r,signal:i}=e;if(r&&!this.pixelFilter&&t.format&&t.format.indexOf("png")>-1)return Object(D.default)(this.parsedUrl.path+"/exportImage",{responseType:"image",query:this._getQueryParams({f:"image",...e.imageServiceParameters}),signal:i}).then(e=>({imageElement:e.data,params:t}));const a=this._initJobHandler(),n=Object(D.default)(this.parsedUrl.path+"/exportImage",{responseType:"array-buffer",query:this._getQueryParams({f:"image",...e.imageServiceParameters}),signal:i});return Object(d.a)([n,a]).then(e=>{const r=e[0].data,a=t.format||"jpgpng";let n=a;if("bsq"!==n&&"bip"!==n&&(n=Object(ae.b)(r)),!n)throw new N.a("imagery-layer:fetch-image","unsupported format signature "+String.fromCharCode.apply(null,new Uint8Array(r)));const s="gif"===a||"bmp"===a||a.indexOf("png")>-1&&("png"===n||"jpg"===n),o={signal:i};return s?Object(ae.a)(r,{useCanvas:!0,...t},o).then(e=>({pixelData:{pixelBlock:e,extent:t.extent},params:t})):this._decodePixelBlock(r,{width:t.width,height:t.height,planes:null,pixelType:null,noDataValue:null,format:a},o).then(e=>({pixelData:{pixelBlock:e,extent:t.extent},params:t}))})}async _generateRasterInfo(e,t){const{data:r}=await Object(D.default)(this.parsedUrl.path,{query:this._getQueryParams({renderingRule:e}),...t});return await this._fetchAuxiliaryRasterInfo({serviceInfo:r,renderingRule:e,...t})}_isValidCustomizedMosaicRule(e){return e&&JSON.stringify(e.toJSON())!==JSON.stringify(this._defaultServiceMosaicRule&&this._defaultServiceMosaicRule.toJSON())}_updateMultidimensionalDefinition(e){if(this._isValidCustomizedMosaicRule(this.mosaicRule))return;const t=e.variables[0].dimensions,r=[];for(const e in t)if(t.hasOwnProperty(e)){const i=t[e],a=i.extent;let n=!0,s=[a[0]];i.hasRanges&&!0===i.hasRanges?(n=!1,s=[i.values[0]]):"stdz"===i.name.toLowerCase()&&Math.abs(a[1])<=Math.abs(a[0])&&(s=[a[1]]),r.push(new q.a({variableName:"",dimensionName:t[e].name,isSlice:n,values:s}))}if(r.length>0){this.mosaicRule=this.mosaicRule||new $;const e=this.mosaicRule.multidimensionalDefinition;(!e||e&&e.length<=0)&&(this.mosaicRule.multidimensionalDefinition=r)}}_formatAttributeValue(e,t){if("string"==typeof e){const r=this.popupTemplate&&this.popupTemplate.fieldInfos,i=this._getFieldInfo(r,t),a=i&&i.format;if(a){let t,r;return e.trim().indexOf(",")>-1?(t=",",r=t+" ",this._formatDelimitedString(e,t,r,a)):e.trim().indexOf(" ")>-1?(t=r=" ",this._formatDelimitedString(e,t,r,a)):this._formatNumberFromString(e,a)}}return e}_getFieldInfo(e,t){if(!e||!e.length||!t)return;const r=t.toLowerCase();let i=void 0;return e.some(e=>!(!e.fieldName||e.fieldName.toLowerCase()!==r&&e.fieldName.toLowerCase()!==r.replace(/ /g,"_")||(i=e,0))),i}_formatDelimitedString(e,t,r,i){return e&&t&&r&&i?e.trim().split(t).map(e=>this._formatNumberFromString(e,i)).join(r):e}_formatNumberFromString(e,t){if(!e||!t)return e;const r=Number(e);return isNaN(r)?e:t.format(r)}_processVisibleRastersResponse(e,t){t=t||{};const r=e.value,{templateRRFunctionNames:i,showNoDataRecords:a,returnDomainValues:s,templateFields:o}=t,l=e.processedValues;let c=e.catalogItems&&e.catalogItems.features,u=e.properties&&e.properties.Values&&e.properties.Values.map(e=>e.replace(/ /gi,", "))||[];const p=this.objectIdField||"ObjectId",d="string"==typeof r&&r.toLowerCase().indexOf("nodata")>-1,b=[];if(r&&!c&&!d){const e={};e[p]=0,u=[r],c=[new C.a(this.fullExtent,null,e)]}if(!c)return[];let h,m,y;this._updateResponseFieldNames(c,o);for(let e=0;e<c.length;e++){if(h=c[e],null!=r&&!d){if(m=u[e],y=this.renderingRule&&l&&l.length>0&&i&&i.length>0&&i.indexOf(this.renderingRule.functionName)>-1?l[i.indexOf(this.renderingRule.functionName)]:r,"nodata"===m.toLowerCase()&&!a)continue;const t="Raster.ItemPixelValue",s="Raster.ServicePixelValue";h.attributes[t]=this._formatAttributeValue(m,t),h.attributes[s]=this._formatAttributeValue(y,s),this._updateFeatureWithMagDirValues(h,m);const o=this.fields&&this.fields.length>0;let c=this.renderingRule&&Object(n.h)(this.serviceRasterInfo)&&this.serviceRasterInfo.attributeTable?o?m:r:y;this.renderingRule||(c=o?m:r),this._updateFeatureWithRasterAttributeTableValues(h,c)}if(h.sourceLayer=this,s&&this._updateFeatureWithDomainValues(h),i&&l&&i.length===l.length)for(let e=0;e<i.length;e++){const t="Raster.ServicePixelValue."+i[e];h.attributes[t]=this._formatAttributeValue(l[e],t)}b.push(c[e])}return b}_updateFeatureWithRasterAttributeTableValues(e,t){const r=this.rasterInfo&&this.rasterInfo.attributeTable||Object(n.h)(this.serviceRasterInfo)&&this.serviceRasterInfo.attributeTable,i=r&&r.features;if(!i)return;const a=r.fields,s=a.map(e=>e.name).filter(e=>"value"===e.toLowerCase()),o=s&&s[0];if(!o)return;const l=i.filter(e=>e.attributes[o]===(null!=t?parseInt(t,10):null));l&&l[0]&&a.forEach(t=>{const r=this.rasterAttributeTableFieldPrefix+t.name;e.attributes[r]=this._formatAttributeValue(l[0].attributes[t.name],r)})}_updateFeatureWithMagDirValues(e,t){if(!this.pixelFilter||"esriImageServiceDataTypeVector-UV"!==this.serviceDataType&&"esriImageServiceDataTypeVector-MagDir"!==this.serviceDataType)return;const r=t.replace(" ",",").split(",").map(e=>parseFloat(e)),i=r.map(e=>[e]),a=r.map(e=>({minValue:e,maxValue:e,noDataValue:null})),n=new te.a({height:1,width:1,pixelType:"f32",pixels:i,statistics:a});this.pixelFilter({pixelBlock:n,extent:new M.a(0,0,0,0,this.spatialReference)}),e.attributes["Raster.Magnitude"]=n.pixels[0][0],e.attributes["Raster.Direction"]=n.pixels[1][0]}_updateFeatureWithDomainValues(e){const t=this.fields&&this.fields.filter(e=>e.domain&&"coded-value"===e.domain.type);null!=t&&t.forEach(t=>{const r=e.attributes[t.name];if(null!=r){const i=t.domain.codedValues.filter(e=>e.code===r)[0];i&&(e.attributes[t.name]=i.name)}})}_updateResponseFieldNames(e,t){if(!t||t.length<1)return;const r=this.fieldsIndex;r&&e.forEach(e=>{if(e&&e.attributes)for(const i of t)if(r.has(i)){const t=r.get(i).name;t!==i&&(e.attributes[i]=e.attributes[t],delete e.attributes[t])}})}_updateRenderingRulesFunctionName(e,t){if(!e||e.length<1)return;if("Raw"===e)return e.replace("Raw","None");const r=e.toLowerCase().replace(/ /gi,"_");return t.has(r)?t.get(r):e}_isRFTJson(e){return e.name&&e.arguments&&e.function&&e.hasOwnProperty("functionType")}_readCapabilities(e){const t=e.capabilities?e.capabilities.toLowerCase().split(",").map(e=>e.trim()):["image","catalog"],{currentVersion:r,advancedQueryCapabilities:i,maxRecordCount:a}=e,n=t.indexOf("image")>-1,s="esriImageServiceDataTypeElevation"===e.serviceDataType,o=!!(e.spatialReference||e.extent&&e.extent.spatialReference);return{operations:{supportsComputeHistograms:n,supportsExportImage:n,supportsIdentify:n,supportsMeasure:t.indexOf("mensuration")>-1&&o,supportsDownload:t.indexOf("download")>-1,supportsQuery:t.indexOf("catalog")>-1&&e.fields&&e.fields.length>0,supportsGetSamples:r>=10.2&&n,supportsProject:r>=10.3&&n,supportsComputeStatisticsHistograms:r>=10.4&&n,supportsQueryBoundary:r>=10.6&&n,supportsCalculateVolume:r>=10.7&&s,supportsComputePixelLocation:r>=10.7&&t.indexOf("catalog")>-1},query:{supportsStatistics:!(!i||!i.supportsStatistics),supportsOrderBy:!(!i||!i.supportsOrderBy),supportsDistinct:!(!i||!i.supportsDistinct),supportsPagination:!(!i||!i.supportsPagination),supportsStandardizedQueriesOnly:!(!i||!i.useStandardizedQueries),maxRecordCount:a}}}};return Object(a.a)([Object(l.b)()],t.prototype,"_functionRasterInfos",void 0),Object(a.a)([Object(l.b)()],t.prototype,"_rasterJobHandler",void 0),Object(a.a)([Object(l.b)()],t.prototype,"_symbolizer",void 0),Object(a.a)([Object(l.b)()],t.prototype,"_defaultServiceMosaicRule",void 0),Object(a.a)([Object(T.a)("_defaultServiceMosaicRule",["defaultMosaicMethod"])],t.prototype,"readDefaultServiceMosaicRule",null),Object(a.a)([Object(l.b)()],t.prototype,"_cachedRendererJson",void 0),Object(a.a)([Object(l.b)()],t.prototype,"rasterAttributeTableFieldPrefix",void 0),Object(a.a)([Object(l.b)({readOnly:!0,dependsOn:["rasterFunctionInfos"]})],t.prototype,"rasterFunctionNamesIndex",null),Object(a.a)([Object(l.b)({readOnly:!0,dependsOn:["url"]})],t.prototype,"queryTask",null),Object(a.a)([Object(l.b)()],t.prototype,"adjustAspectRatio",void 0),Object(a.a)([Object(l.b)({readOnly:!0}),Object(S.a)("serviceRasterInfo.bandCount")],t.prototype,"bandCount",void 0),Object(a.a)([Object(l.b)({type:[o.a],json:{write:!0}})],t.prototype,"bandIds",void 0),Object(a.a)([Object(T.a)("bandIds")],t.prototype,"readBandIds",null),Object(a.a)([Object(l.b)({readOnly:!0,json:{read:!1}})],t.prototype,"capabilities",void 0),Object(a.a)([Object(T.a)("service","capabilities",["capabilities","currentVersion","serviceDataType"])],t.prototype,"readCapabilities",null),Object(a.a)([Object(l.b)({type:Number})],t.prototype,"compressionQuality",void 0),Object(a.a)([Object(u.a)("compressionQuality")],t.prototype,"writeCompressionQuality",null),Object(a.a)([Object(l.b)({type:Number})],t.prototype,"compressionTolerance",void 0),Object(a.a)([Object(u.a)("compressionTolerance")],t.prototype,"writeCompressionTolerance",null),Object(a.a)([Object(l.b)({json:{read:{source:"copyrightText"}}})],t.prototype,"copyright",void 0),Object(a.a)([Object(l.b)({type:String,json:{read:{source:"layerDefinition.definitionExpression"},write:{target:"layerDefinition.definitionExpression"}}})],t.prototype,"definitionExpression",void 0),Object(a.a)([Object(l.b)({readOnly:!0,constructOnly:!0})],t.prototype,"exportImageServiceParameters",void 0),Object(a.a)([Object(l.b)()],t.prototype,"rasterInfo",void 0),Object(a.a)([Object(l.b)({readOnly:!0,type:[A.a]})],t.prototype,"fields",void 0),Object(a.a)([Object(l.b)({readOnly:!0,dependsOn:["fields"]})],t.prototype,"fieldsIndex",null),Object(a.a)([Object(l.b)({type:["png","png8","png24","png32","jpg","bmp","gif","jpgpng","lerc","tiff"],json:{write:!0}})],t.prototype,"format",null),Object(a.a)([Object(T.a)("service","format",["serviceDataType"])],t.prototype,"readFormat",null),Object(a.a)([Object(l.b)({type:M.a})],t.prototype,"fullExtent",void 0),Object(a.a)([Object(l.b)({readOnly:!0})],t.prototype,"hasMultidimensions",void 0),Object(a.a)([Object(l.b)({json:{read:{source:"maxImageHeight"}}})],t.prototype,"imageMaxHeight",void 0),Object(a.a)([Object(l.b)({json:{read:{source:"maxImageWidth"}}})],t.prototype,"imageMaxWidth",void 0),Object(a.a)([Object(l.b)({type:String,json:{type:je.jsonValues,read:je.read,write:je.write}})],t.prototype,"interpolation",void 0),Object(a.a)([Object(l.b)()],t.prototype,"minScale",void 0),Object(a.a)([Object(T.a)("service","minScale")],t.prototype,"readMinScale",null),Object(a.a)([Object(l.b)()],t.prototype,"maxScale",void 0),Object(a.a)([Object(T.a)("service","maxScale")],t.prototype,"readMaxScale",null),Object(a.a)([Object(l.b)({type:$})],t.prototype,"mosaicRule",null),Object(a.a)([Object(T.a)("mosaicRule",["mosaicRule","defaultMosaicMethod"])],t.prototype,"readMosaicRule",null),Object(a.a)([Object(u.a)("mosaicRule")],t.prototype,"writeMosaicRule",null),Object(a.a)([Object(l.b)({readOnly:!0}),Object(S.a)("serviceRasterInfo.multidimensionalInfo")],t.prototype,"multidimensionalInfo",void 0),Object(a.a)([Object(l.b)({json:{type:o.a}})],t.prototype,"noData",void 0),Object(a.a)([Object(u.a)("noData")],t.prototype,"writeNoData",null),Object(a.a)([Object(l.b)({type:String,json:{type:ge.jsonValues,read:ge.read,write:ge.write}})],t.prototype,"noDataInterpretation",void 0),Object(a.a)([Object(l.b)({type:String,readOnly:!0,json:{read:{source:["fields"]}}})],t.prototype,"objectIdField",void 0),Object(a.a)([Object(T.a)("objectIdField")],t.prototype,"readObjectIdField",null),Object(a.a)([Object(l.b)({readOnly:!0,dependsOn:["url"]})],t.prototype,"parsedUrl",null),Object(a.a)([Object(l.b)({readOnly:!0}),Object(S.a)("serviceRasterInfo.pixelSize.x")],t.prototype,"pixelSizeX",void 0),Object(a.a)([Object(l.b)({readOnly:!0}),Object(S.a)("serviceRasterInfo.pixelSize.y")],t.prototype,"pixelSizeY",void 0),Object(a.a)([Object(l.b)({type:Function})],t.prototype,"pixelFilter",void 0),Object(a.a)([Object(l.b)()],t.prototype,"raster",void 0),Object(a.a)([Object(l.b)()],t.prototype,"viewId",void 0),Object(a.a)([Object(l.b)({types:k.a,json:{read:{source:"layerDefinition.drawingInfo.renderer"},write:{target:"layerDefinition.drawingInfo.renderer"}}})],t.prototype,"renderer",void 0),Object(a.a)([Object(T.a)("renderer")],t.prototype,"readRenderer",null),Object(a.a)([Object(l.b)(O.f)],t.prototype,"opacity",void 0),Object(a.a)([Object(l.b)({readOnly:!0}),Object(S.a)("serviceRasterInfo.attributeTable")],t.prototype,"rasterAttributeTable",void 0),Object(a.a)([Object(l.b)({readOnly:!0,dependsOn:["fields","rasterInfo","capabilities"]})],t.prototype,"rasterFields",null),Object(a.a)([Object(l.b)({readOnly:!0})],t.prototype,"rasterFunctionInfos",void 0),Object(a.a)([Object(l.b)({type:B.a})],t.prototype,"renderingRule",null),Object(a.a)([Object(T.a)("renderingRule",["renderingRule","rasterFunctionInfos"])],t.prototype,"readRenderingRule",null),Object(a.a)([Object(u.a)("renderingRule")],t.prototype,"writeRenderingRule",null),Object(a.a)([Object(l.b)()],t.prototype,"serviceDataType",void 0),Object(a.a)([Object(l.b)({readOnly:!0,type:F.a})],t.prototype,"spatialReference",void 0),Object(a.a)([Object(T.a)("spatialReference",["spatialReference","extent"])],t.prototype,"readSpatialReference",null),Object(a.a)([Object(l.b)({json:{type:ve.jsonValues}})],t.prototype,"pixelType",void 0),Object(a.a)([Object(T.a)("pixelType")],t.prototype,"readPixelType",null),Object(a.a)([Object(u.a)("pixelType")],t.prototype,"writePixelType",null),Object(a.a)([Object(l.b)({constructOnly:!0,type:re.a})],t.prototype,"serviceRasterInfo",void 0),Object(a.a)([Object(l.b)()],t.prototype,"sourceJSON",void 0),Object(a.a)([Object(l.b)(O.j)],t.prototype,"url",void 0),Object(a.a)([Object(l.b)({readOnly:!0})],t.prototype,"version",void 0),Object(a.a)([Object(T.a)("version",["currentVersion","fields","timeInfo"])],t.prototype,"readVersion",null),t=Object(a.a)([Object(c.a)("esri.layers.mixins.ArcGISImageService")],t),t};let Ie=class extends(Object(f.a)(Object(R.a)(Object(v.a)(Object(w.a)(Object(j.a)(Object(g.a)(xe(Object(y.a)(Object(m.a)(h.a)))))))))){constructor(...e){super(...e),this.legendEnabled=!0,this.isReference=null,this.operationalLayerType="ArcGISImageServiceLayer",this.popupEnabled=!0,this.popupTemplate=null,this.type="imagery"}normalizeCtorArgs(e,t){return"string"==typeof e?{url:e,...t}:e}load(e){const t=Object(n.h)(e)?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Image Service"]},e).then(()=>this._fetchService(t),()=>this._fetchService(t))),Object(d.r)(this)}writeOperationalLayerType(e,t,r){var i;const a="vector-field"===(null==(i=this.renderer)?void 0:i.type);t[r]=a?"ArcGISImageServiceVectorLayer":"ArcGISImageServiceLayer"}get defaultPopupTemplate(){return this.createPopupTemplate()}createPopupTemplate(e){const t=this.rasterFields,r=this.title,i=new Set;let a=!1,n=!1;this.capabilities&&(a=this.capabilities.operations.supportsQuery&&this.fields&&this.fields.length>0,n=a&&("esriImageServiceDataTypeVector-UV"===this.serviceDataType||"esriImageServiceDataTypeVector-MagDir"===this.serviceDataType));const s=new Set;a&&(s.add("raster.itempixelvalue"),n&&s.add("raster.magnitude").add("raster.direction"));for(const e of t){const t=e.name.toLowerCase();s.has(t)||t.indexOf("raster.servicepixelvalue.")>-1||i.add(e.name)}return Object(x.a)({fields:t,title:r},{...e,visibleFieldNames:i})}redraw(){this.emit("redraw")}};Object(a.a)([Object(l.b)(O.d)],Ie.prototype,"legendEnabled",void 0),Object(a.a)([Object(l.b)({type:["show","hide"]})],Ie.prototype,"listMode",void 0),Object(a.a)([Object(l.b)({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],Ie.prototype,"isReference",void 0),Object(a.a)([Object(l.b)({type:["ArcGISImageServiceLayer"],json:{origins:{"web-map":{type:["ArcGISImageServiceLayer","ArcGISImageServiceVectorLayer"],read:!1,write:{target:"layerType",ignoreOrigin:!0}}}}})],Ie.prototype,"operationalLayerType",void 0),Object(a.a)([Object(u.a)("web-map","operationalLayerType")],Ie.prototype,"writeOperationalLayerType",null),Object(a.a)([Object(l.b)(O.g)],Ie.prototype,"popupEnabled",void 0),Object(a.a)([Object(l.b)({type:b.a,json:{read:{source:"popupInfo"},write:{target:"popupInfo"}}})],Ie.prototype,"popupTemplate",void 0),Object(a.a)([Object(l.b)({readOnly:!0,dependsOn:["fields","title"]})],Ie.prototype,"defaultPopupTemplate",null),Object(a.a)([Object(l.b)({readOnly:!0,json:{read:!1}})],Ie.prototype,"type",void 0),Ie=Object(a.a)([Object(c.a)("esri.layers.ImageryLayer")],Ie);var Se=Ie;t.default=Se},727:function(e,t,r){"use strict";var i=r(14),a=r(7),n=r(307),s=r(562);t.a=class{constructor(){this._workerThread=null,this._destroyed=!1}async initialize(){const e=await Object(n.b)("RasterWorker");this._destroyed?e.close():this._workerThread=e}destroy(){this._destroyed=!0,this._workerThread&&(this._workerThread.close(),this._workerThread=null)}async decode(e,t){if(!this._workerThread)throw new i.a("raster-jobhandler:no-connection","no available worker connection");const r=await this._workerThread.invoke("decode",e,t);return r?new s.a(r):null}async symbolize(e,t){if(!this._workerThread)throw new i.a("raster-jobhandler:no-connection","no available worker connection");const r={extent:e.extent&&e.extent.toJSON(),pixelBlock:e.pixelBlock.toJSON(),simpleStretchParams:e.simpleStretchParams,bandIds:e.bandIds},a=await this._workerThread.invoke("symbolize",r,t);return a?new s.a(a):null}async updateSymbolizer(e,t){if(!this._workerThread)throw new i.a("raster-jobhandler:no-connection","no available worker connection");const r=e&&e.renderer&&"raster-stretch"===e.renderer.type&&e.renderer.histograms;await Object(a.a)(this._workerThread.broadcast("updateSymbolizer",{symbolizerJSON:e.toJSON(),histograms:r},t))}async stretch(e,t){if(!this._workerThread)throw new i.a("raster-jobhandler:no-connection","no available worker connection");if(!e||!e.pixelBlock)return null;const r={srcPixelBlock:e.pixelBlock.toJSON(),stretchParams:e.stretchParams},a=await this._workerThread.invoke("stretch",r,t);return a?new s.a(a):null}async mosaicAndTransform(e,t){if(!this._workerThread)throw new i.a("raster-jobhandler:no-connection","no available worker connection");if(!(e&&e.srcPixelBlocks&&e.srcPixelBlocks.length>0))return null;const r={...e,srcPixelBlocks:e.srcPixelBlocks.map(e=>e?e.toJSON():null)},a=await this._workerThread.invoke("mosaicAndTransform",r,t);return a?new s.a(a):null}}}}]);