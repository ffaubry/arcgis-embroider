(window.webpackJsonp=window.webpackJsonp||[]).push([[69],{435:function(e,t,i){"use strict";i.d(t,"a",(function(){return s}));var n=i(0),r=(i(4),i(9),i(5),i(6),i(1)),a=i(2);i(3),i(10),i(11);const s=e=>{let t=class extends e{constructor(){super(...arguments),this.blendMode="normal",this.effect=null}};return Object(n.a)([Object(r.b)({type:["average","color-burn","color-dodge","color","darken","destination-atop","destination-in","destination-out","destination-over","difference","exclusion","hard-light","hue","invert","lighten","lighter","luminosity","minus","multiply","normal","overlay","plus","reflect","saturation","screen","soft-light","source-atop","source-in","source-out","vivid-light","xor"],nonNullable:!0,json:{read:!1,write:!1,origins:{"web-map":{default:"normal",read:!0,write:!0}}}})],t.prototype,"blendMode",void 0),Object(n.a)([Object(r.b)({type:String})],t.prototype,"effect",void 0),t=Object(n.a)([Object(a.a)("esri.layers.mixins.BlendLayer")],t),t}},456:function(e,t,i){"use strict";i.d(t,"a",(function(){return s}));var n=i(0),r=(i(4),i(9),i(5),i(6),i(1)),a=i(2);i(3),i(10),i(11);const s=e=>{let t=class extends e{constructor(){super(...arguments),this.refreshInterval=0}refresh(){this.emit("refresh")}};return Object(n.a)([Object(r.b)({type:Number,cast:e=>e>=.1?e:e<=0?0:.1,json:{write:!0,origins:{"web-document":{write:!0}}}})],t.prototype,"refreshInterval",void 0),t=Object(n.a)([Object(a.a)("esri.layers.mixins.RefreshableLayer")],t),t}},519:function(e,t,i){"use strict";var n=i(520);t.a=class{constructor(e,t){this._storage=new n.c,this._storage.maxSize=e,t&&this._storage.registerRemoveFunc("",t)}put(e,t,i){this._storage.put(e,t,i,1)}pop(e){return this._storage.pop(e)}get(e){return this._storage.get(e)}clear(){this._storage.clearAll()}destroy(){this._storage.clearAll()}get maxSize(){return this._storage.maxSize}set maxSize(e){this._storage.maxSize=e}}},566:function(e,t,i){"use strict";i.d(t,"a",(function(){return I}));var n=i(0),r=(i(4),i(9),i(5)),a=i(1),s=i(38),o=i(2),l=i(14),c=i(3),h=(i(10),i(7)),u=i(65),d=(i(11),i(153)),f=i(60),p=i(18),m=i(43),b=i(16),y=i(519),g=i(12),x=i(82);class w{constructor(){this.location={left:0,top:0,width:0,height:0},this._allAvailability="unknown",this.byteSize=40}getAvailability(e,t){if("unknown"!==this._allAvailability)return this._allAvailability;const i=(e-this.location.top)*this.location.width+(t-this.location.left),n=i%8,r=i>>3,a=this._tileAvailabilityBitSet;return r<0||r>a.length?"unknown":a[r]&1<<n?"available":"unavailable"}_updateFromData(e){const t=this.location.width,i=this.location.height;let n=!0,r=!0;const a=Math.ceil(t*i/8),s=new Uint8Array(a);let o=0;for(let t=0;t<e.length;t++){const i=t%8;e[t]?(r=!1,s[o]|=1<<i):n=!1,7===i&&++o}r?this._allAvailability="unavailable":n?this._allAvailability="available":(this._allAvailability="unknown",this._tileAvailabilityBitSet=s,this.byteSize+=s.length)}static fromDefinition(e,t){const i=e.service.request||u.default,{row:n,col:r,width:a,height:s}=e,o={query:{f:"json"}};return t=t?{...o,...t}:o,i(function(e){let t;if("vector-tile"===e.service.type)t=`${e.service.url}/tilemap/${e.level}/${e.row}/${e.col}/${e.width}/${e.height}`;else{const i=e.service.tileServers;t=`${i&&i.length?i[e.row%i.length]:e.service.url}/tilemap/${e.level}/${e.row}/${e.col}/${e.width}/${e.height}`}const i=e.service.query;return i&&(t=`${t}?${i}`),t}(e),t).then(e=>e.data).catch(e=>{if(e&&e.details&&422===e.details.httpStatus)return{location:{top:n,left:r,width:a,height:s},valid:!0,data:Object(x.b)(a*s,0)};throw e}).then(e=>{if(e.location&&(e.location.top!==n||e.location.left!==r||e.location.width!==a||e.location.height!==s))throw new l.a("tilemap:location-mismatch","Tilemap response for different location than requested",{response:e,definition:{top:n,left:r,width:a,height:s}});return w.fromJSON(e)})}static fromJSON(e){w.validateJSON(e);const t=new w;return t.location=Object.freeze(Object(g.a)(e.location)),t._updateFromData(e.data),Object.freeze(t)}static validateJSON(e){if(!e||!e.location)throw new l.a("tilemap:missing-location","Location missing from tilemap response");if(!1===e.valid)throw new l.a("tilemap:invalid","Tilemap response was marked as invalid");if(!e.data)throw new l.a("tilemap:missing-data","Data missing from tilemap response");if(!Array.isArray(e.data))throw new l.a("tilemap:data-mismatch","Data must be an array of numbers");if(e.data.length!==e.location.width*e.location.height)throw new l.a("tilemap:data-mismatch","Number of data items does not match width/height of tilemap")}}function v(e){return`${e.level}/${e.row}/${e.col}/${e.width}/${e.height}`}var O;const j=r.a.getLogger("esri.layers.support.TilemapCache");let I=O=class extends p.a{constructor(e){super(e),this._handles=new m.a,this._pendingTilemapRequests={},this._availableLevels={},this.levels=5,this.cacheByteSize=2097152,this.request=u.default,this._prefetchingEnabled=!0}initialize(){this._tilemapCache=new y.a(this.cacheByteSize),this._handles.add([this.watch(["layer.parsedUrl","layer.tileServers?"],()=>this._initializeTilemapDefinition()),Object(b.a)(this,"layer.tileInfo.lods",e=>this._initializeAvailableLevels(e),!0)]),this._initializeTilemapDefinition()}destroy(){this._handles&&(this._handles.destroy(),this._handles=null)}castLevels(e){return e<=2?(j.error("Minimum levels for Tilemap is 3, but got ",e),3):e}get size(){return 1<<this.levels}fetchTilemap(e,t,i,n){if(!this._availableLevels[e])return Object(h.h)(new l.a("tilemap-cache:level-unavailable",`Level ${e} is unavailable in the service`));const r=this._tmpTilemapDefinition,a=this._tilemapFromCache(e,t,i,r);if(a)return Object(h.r)(a);const s=n&&n.signal;return n={...n,signal:null},Object(h.f)((e,t)=>{Object(h.o)(s,()=>t(Object(h.d)()));const i=v(r);let a=this._pendingTilemapRequests[i];if(!a){a=w.fromDefinition(r,n).then(e=>(this._tilemapCache.put(i,e,e.byteSize),e));const e=()=>delete this._pendingTilemapRequests[i];this._pendingTilemapRequests[i]=a,a.then(e,e)}a.then(e,t)})}getAvailability(e,t,i){if(!this._availableLevels[e])return"unavailable";const n=this._tilemapFromCache(e,t,i,this._tmpTilemapDefinition);return n?n.getAvailability(t,i):"unknown"}getAvailabilityUpsample(e,t,i,n){n.level=e,n.row=t,n.col=i;const r=this.layer.tileInfo;for(r.updateTileInfo(n);;){const e=this.getAvailability(n.level,n.row,n.col);if("unavailable"!==e)return e;if(!r.upsampleTile(n))return"unavailable"}}fetchAvailability(e,t,i,n){return this._availableLevels[e]?this.fetchTilemap(e,t,i,n).catch(e=>e).then(n=>{if(n instanceof w){const r=n.getAvailability(t,i);return"unavailable"===r?Object(h.h)(new l.a("tile-map:tile-unavailable","Tile is not available",{level:e,row:t,col:i})):r}if(Object(h.b)(n))throw n;return"unknown"}):Object(h.h)(new l.a("tilemap-cache:level-unavailable",`Level ${e} is unavailable in the service`))}fetchAvailabilityUpsample(e,t,i,n,r){n.level=e,n.row=t,n.col=i;const a=this.layer.tileInfo;a.updateTileInfo(n);const s=this.fetchAvailability(e,t,i,r).catch(e=>{if(Object(h.b)(e))throw e;if(a.upsampleTile(n))return this.fetchAvailabilityUpsample(n.level,n.row,n.col,n);throw e});return this._fetchAvailabilityUpsamplePrefetch(n.id,e,t,i,r,s),s}async _fetchAvailabilityUpsamplePrefetch(e,t,i,n,r,a){if(!this._prefetchingEnabled)return;const s="prefetch-"+e;if(this._handles.has(s))return;const o=Object(h.c)();a.then(()=>o.abort(),()=>o.abort());let l=!1;const c={remove(){l||(l=!0,o.abort())}};this._handles.add(c,s);try{await Object(f.c)(10,o.signal)}catch{}if(l||(l=!0,this._handles.remove(s)),Object(h.e)(o))return;const u={id:e,level:t,row:i,col:n},d={...r,signal:o.signal},p=this.layer.tileInfo;for(let e=0;O._prefetches.length<O._maxPrefetch&&p.upsampleTile(u);++e){const e=this.fetchAvailability(u.level,u.row,u.col,d);O._prefetches.push(e);const t=()=>{O._prefetches.removeUnordered(e)};e.then(t,t)}}_initializeTilemapDefinition(){if(!this.layer.parsedUrl)return;const e=this.layer.parsedUrl,t=e.query;this._tilemapCache.clear(),this._tmpTilemapDefinition={service:{url:e.path,query:t?Object(c.B)(t):null,tileServers:this.layer.tileServers,request:this.request,type:this.layer.type},width:this.size,height:this.size,level:0,row:0,col:0}}_tilemapFromCache(e,t,i,n){n.level=e,n.row=t-t%this.size,n.col=i-i%this.size;const r=v(n);return this._tilemapCache.get(r)}_initializeAvailableLevels(e){this._availableLevels={},e&&e.forEach(e=>this._availableLevels[e.level]=!0)}get test(){const e=this;return{get prefetchingEnabled(){return e._prefetchingEnabled},set prefetchingEnabled(t){e._prefetchingEnabled=t},hasTilemap:(t,i,n)=>!!e._tilemapFromCache(t,i,n,e._tmpTilemapDefinition)}}};I._maxPrefetch=4,I._prefetches=new d.a({initialSize:O._maxPrefetch}),Object(n.a)([Object(a.b)({constructOnly:!0,type:Number})],I.prototype,"levels",void 0),Object(n.a)([Object(s.a)("levels")],I.prototype,"castLevels",null),Object(n.a)([Object(a.b)({readOnly:!0,dependsOn:["levels"],type:Number})],I.prototype,"size",null),Object(n.a)([Object(a.b)({constructOnly:!0,type:Number})],I.prototype,"cacheByteSize",void 0),Object(n.a)([Object(a.b)({constructOnly:!0})],I.prototype,"layer",void 0),Object(n.a)([Object(a.b)({constructOnly:!0})],I.prototype,"request",void 0),I=O=Object(n.a)([Object(o.a)("esri.layers.support.TilemapCache")],I)},581:function(e,t,i){"use strict";i.d(t,"a",(function(){return a})),i.d(t,"b",(function(){return r}));var n=i(304);const r={type:n.a,json:{origins:{service:{read:{source:["tileInfo","minScale","maxScale","minLOD","maxLOD"],reader:a}}}}};function a(e,t,i,r){if(!e)return null;const{minScale:a,maxScale:s,minLOD:o,maxLOD:l}=t;if(null!=o&&null!=l)return r&&r.ignoreMinMaxLOD?n.a.fromJSON(e):n.a.fromJSON({...e,lods:e.lods.filter(({level:e})=>null!=e&&e>=o&&e<=l)});if(0!==a&&0!==s){const t=e=>Math.round(1e4*e)/1e4,i=a?t(a):1/0,r=s?t(s):-1/0;return n.a.fromJSON({...e,lods:e.lods.filter(e=>{const n=t(e.scale);return n<=i&&n>=r})})}return n.a.fromJSON(e)}},604:function(e,t,i){"use strict";i.d(t,"a",(function(){return g})),i.d(t,"b",(function(){return b})),i.d(t,"c",(function(){return u})),i.d(t,"d",(function(){return m})),i.d(t,"e",(function(){return p})),i.d(t,"f",(function(){return d})),i.d(t,"g",(function(){return y}));var n=i(14),r=i(34),a=i(30),s=i(29),o=i(36),l=(i(54),i(50)),c=i(262);const h=function(e,t){const i=(e.isWGS84||e.isWebMercator)&&(t.isWGS84||t.isWebMercator);return!(e.equals(t)||i)};async function u(){if(Object(c.a)()||!Object(c.b)())return null;await Object(c.c)()}function d(e,t,i,r=null){if(e.spatialReference.equals(t))return e;const s=h(e.spatialReference,t);if(s&&!Object(c.a)())throw new n.a("rasterprojectionhelper-projectResolution","projection engine is not loaded");const l=i.center,u=new o.a({xmin:l.x-e.x/2,xmax:l.x+e.x/2,ymin:l.y-e.y/2,ymax:l.y+e.y/2,spatialReference:e.spatialReference}),d=s?Object(c.d)(u,t,r):Object(a.d)(u,t);return null==d?null:{x:d.xmax-d.xmin,y:d.ymax-d.ymin}}function f(e,t=.01){return Object(l.c)(e)?t/Object(l.c)(e):0}function p(e,t,i=null,s=!0){const o=e.spatialReference;if(o.equals(t))return e;const l=h(o,t);if(l&&!Object(c.a)())throw new n.a("rasterprojectionhelper-projectResolution","projection engine is not loaded");const u=l?Object(c.d)(e,t,i):Object(a.d)(e,t);if(u&&s&&t.isGeographic){var d,p;const[t,i]=o.isWebMercator?Object(r.d)(o).origin:null!=(d=null==(p=Object(r.d)(o))?void 0:p.valid)?d:[],n=f(o);n&&null!=t&&null!=i&&(Math.abs(e.x-t)<n&&Math.abs(180-u.x)<5e-4?u.x-=360:Math.abs(e.x-i)<n&&Math.abs(180+u.x)<5e-4&&(u.x+=360))}return u}function m(e,t,i=null,o=!0){var l,u,d,m;const b=e.spatialReference;if(b.equals(t))return e;const y=h(b,t);if(y&&!Object(c.a)())throw new n.a("rasterprojectionhelper-projectExtent","projection engine is not loaded");const g=y?Object(c.d)(e,t,i):Object(a.d)(e,t);let[x,w]=null!=(l=null==(u=Object(r.d)(b))?void 0:u.origin)?l:[];if(g&&o&&b.isWebMercator&&t.isGeographic&&null!=x&&null!=w){const n=.001,r=1e3;if(Math.abs(e.xmin-x)<n&&Math.abs(w-e.xmax)>r&&Math.abs(180-g.xmax)<5e-4){g.xmin=-180;const n=[];n.push(new s.a(e.xmax,e.ymin,b)),n.push(new s.a(e.xmax,(e.ymin+e.ymax)/2,b)),n.push(new s.a(e.xmax,e.ymax,b));const r=n.map(e=>p(e,t,i)).filter(e=>!isNaN(null==e?void 0:e.x)).map(e=>e.x);g.xmax=Math.max.apply(null,r)}if(Math.abs(e.xmax-w)<n&&Math.abs(x-e.xmin)>r&&Math.abs(180+g.xmin)<5e-4){g.xmax=180;const n=[];n.push(new s.a(e.xmin,e.ymin,b)),n.push(new s.a(e.xmin,(e.ymin+e.ymax)/2,b)),n.push(new s.a(e.xmin,e.ymax,b));const r=n.map(e=>p(e,t,i)).filter(e=>!isNaN(null==e?void 0:e.x)).map(e=>e.x);g.xmin=Math.min.apply(null,r)}}[x,w]=t.isWebMercator?Object(r.d)(t).origin:null!=(d=null==(m=Object(r.d)(t))?void 0:m.valid)?d:[];const v=f(t);return v&&null!=x&&null!=w&&(Math.abs(g.xmin-x)<v&&(g.xmin=x),Math.abs(g.xmax-w)<v&&(g.xmax=w)),g}function b(e,t,i,a=null,o=!1,l=[32,32]){var u,d;if(h(e.spatialReference,t.spatialReference)&&!Object(c.a)())throw new n.a("rasterprojectionhelper-projectResolution","projection engine is not loaded");if(!(e&&t&&i))return null;const{xmin:f,ymin:m,xmax:b,ymax:y}=e,g=e.spatialReference,x=t.spatialReference,[w,v]=null!=(u=null==(d=Object(r.d)(g))?void 0:d.valid)?u:[],O={x:l[0]*i.x,y:l[1]*i.y},j={cols:Math.ceil((b-f)/O.x-.1)+1,rows:Math.ceil((y-m)/O.y-.1)+1},I=O.x,_=O.y;let S,T;const R=[];let M,k=!1;for(let e=0;e<j.cols;e++){const i=[];for(let n=0;n<j.rows;n++)S=new s.a({x:f+I*e,y:y-_*n,spatialReference:g}),T=p(S,x,a),i.push(T),e>0&&o&&T&&M[n]&&null!=w&&T.x<M[n].x&&(T.x+=v-w),T?(R.push((T.x-t.xmin)/(t.xmax-t.xmin)),R.push((t.ymax-T.y)/(t.ymax-t.ymin))):(R.push(NaN),R.push(NaN),k=!0);M=i}const C=function(e,t){const i=(e[0]+e[4]+e[4*t.cols]+e[4*t.cols+4])/4,n=(e[1]+e[5]+e[4*t.rows+1]+e[4*t.rows+5])/4;return[Math.abs(i-e[2*t.rows+2]),Math.abs(n-e[2*t.rows+3])]}(R,j),z=new Float32Array((j.cols-1)*(j.rows-1)*2*6),F=new Float32Array([-0,-1,1,-1,1,-0,1,-0,-0]),B=new Float32Array([-1,1,0,0,-1,1,1,0,0]);for(let e=0;e<j.cols-1;e++){for(let t=0;t<j.rows-1;t++){let i=e*j.rows*2+2*t;const n=R[i],r=R[i+1],a=R[i+2],s=R[i+3];i+=2*j.rows;const o=R[i],l=R[i+1],c=R[i+2],h=R[i+3];let u=0,d=12*(t*(j.cols-1)+e);for(let e=0;e<3;e++)z[d++]=F[u++]*n+F[u++]*a+F[u++]*c;u=0;for(let e=0;e<3;e++)z[d++]=F[u++]*r+F[u++]*s+F[u++]*h;u=0;for(let e=0;e<3;e++)z[d++]=B[u++]*n+B[u++]*o+B[u++]*c;u=0;for(let e=0;e<3;e++)z[d++]=B[u++]*r+B[u++]*l+B[u++]*h}if(k)for(let e=0;e<z.length;e++)isNaN(z[e])&&(z[e]=-1)}return{offsets:R,error:C,coefficients:z,spacing:l,size:[j.cols-1,j.rows-1]}}function y(e,t,i){const n=Math.log(e.x/t.pixelSize.x)/Math.LN2,r=Math.log(e.y/t.pixelSize.y)/Math.LN2,a=t.storageInfo.maximumPyramidLevel||0;let o="down"===i?Math.floor(Math.min(n,r)):"up"===i?Math.ceil(Math.max(n,r)):Math.round((n+r)/2),l=!1;o<0?o=0:o>a&&(l=o>a+3,o=a);const c=Math.pow(2,o);return{pyramidLevel:o,pyramidResolution:new s.a({x:c*t.pixelSize.x,y:c*t.pixelSize.y,spatialReference:t.spatialReference}),excessiveReading:l}}function g(e,t,i=512,n=!0){const{extent:r,spatialReference:a,pixelSize:o}=e,c=d(new s.a({x:o.x,y:o.y,spatialReference:a}),t,r);if(null==c)return{projectedPixelSize:null,scales:null,srcResolutions:null};const h=(c.x+c.y)/2,u=Object(l.c)(t),f=h*u*96*39.37,p=t.isGeographic?512/i*295828763.7958547:512/i*591657527.591555;let b=!1;if(n&&(t.isGeographic||t.isWebMercator)){const e=m(r,t);b=e.xmin*e.xmax<0}let y,g=f;if(b){g=p;const e=g/(96*u*39.37);y=d(new s.a({x:e,y:e,spatialReference:t}),a,r)}else{y={x:o.x,y:o.y};const t=Math.ceil(Math.log(Math.min(e.width,e.height)/32)/Math.LN2);let i=0;for(;g<.5005*p&&i<t;)i++,g*=2,y.x*=2,y.y*=2;Math.max(g,p)/Math.min(g,p)<=1.001&&(g=p)}const x=[],w=[],v=Math.min(70.5310735,f)/1.001;for(;g>=v;)x.push(g),w.push({x:y.x,y:y.y}),g/=2,y.x/=2,y.y/=2;return{projectedPixelSize:c,scales:x,srcResolutions:w}}},664:function(e,t,i){"use strict";var n,r=i(0),a=(i(4),i(9),i(12)),s=(i(5),i(6)),o=i(1),l=i(2),c=(i(3),i(10),i(11),i(15));let h=n=class extends c.a{constructor(e){super(e),this.variableName=null,this.dimensionName=null,this.values=[],this.isSlice=!1}clone(){return new n({variableName:this.variableName,dimensionName:this.dimensionName,values:Object(a.a)(this.values),isSlice:this.isSlice})}};Object(r.a)([Object(o.b)({type:String,json:{write:!0}})],h.prototype,"variableName",void 0),Object(r.a)([Object(o.b)({type:String,json:{write:!0}})],h.prototype,"dimensionName",void 0),Object(r.a)([Object(o.b)({type:s.p.array(s.p.oneOf([s.p.native(Number),s.p.array(s.p.native(Number))])),json:{write:!0}})],h.prototype,"values",void 0),Object(r.a)([Object(o.b)({type:Boolean,json:{write:!0}})],h.prototype,"isSlice",void 0),h=n=Object(r.a)([Object(l.a)("esri.layers.support.DimensionalDefinition")],h);var u=h;t.a=u},682:function(e,t,i){"use strict";i.r(t);var n=i(0),r=(i(4),i(9),i(8)),a=i(5),s=i(6),o=i(1),l=i(32),c=i(19),h=i(33),u=i(2),d=i(14),f=i(3),p=(i(10),i(7)),m=(i(11),i(300)),b=i(215),y=i(419),g=i(658),x=i(218),w=i(435),v=i(412),O=i(429),j=i(425),I=i(456),_=i(437),S=i(526),T=i(25),R=i(65),M=i(34),k=i(28),C=i(36),z=(i(54),i(302)),F=i(304),B=i(664),D=i(727),N=i(735),L=i(738);const P=a.a.getLogger("esri.layers.mixins.ImageryTileMixin"),A=e=>{let t=class extends e{constructor(){super(...arguments),this._rasterJobHandler={instance:null,refCount:0,connectionPromise:null},this.bandIds=null,this.copyright=null,this.fullExtent=null,this.interpolation="nearest",this.raster=null,this.rasterInfo=null,this.sourceJSON=null,this.spatialReference=null,this.tileInfo=null,this.symbolizer=null}set multidimensionalDefinition(e){this.raster&&(this._sliceId=this.raster.getSliceIndex(e)),this._set("multidimensionalDefinition",e)}set url(e){this._set("url",Object(z.f)(e,P))}set renderer(e){this._set("renderer",e),this.updateRenderer()}async updateRenderer(){if(!this.loaded)return;if(JSON.stringify(this._cachedRendererJson)===JSON.stringify(this.renderer))return;const e=this._rasterJobHandler.instance;e&&(this.symbolizer.renderer=this.renderer,this.symbolizer.bind(),await e.updateSymbolizer(this.symbolizer),this._cachedRendererJson=this.renderer.toJSON())}async applyRenderer(e,t){const i=e&&e.pixelBlock;if(!(i&&i.pixels&&i.pixels.length>0))return null;let n;this.updateRenderer();const r=this._rasterJobHandler.instance,{bandIds:a}=this;return n=r?await r.symbolize({...e,simpleStretchParams:t,bandIds:a}):this.symbolizer.symbolize({...e,simpleStretchParams:t,bandIds:a}),n}getTileUrl(e,t,i){return"RasterTileServer"===this.raster.datasetFormat?`${this.url}/tile/${e}/${t}/${i}`:""}getCompatibleTileInfo(e,t){if(!this.loaded)return null;const i=Object(M.d)(e);return F.a.create({size:256,spatialReference:e,origin:i?{x:i.origin[0],y:i.origin[1]}:{x:t.xmin,y:t.ymax}})}getCompatibleFullExtent(e){return this.loaded?(this._compatibleFullExtent&&this._compatibleFullExtent.spatialReference.equals(e)||(this._compatibleFullExtent=this.raster.computeExtent(e)),this._compatibleFullExtent):null}async fetchTile(e,t,i,n={}){if(n.requestAsImageElement){const r=this.getTileUrl(e,t,i);return Object(R.default)(r,{responseType:"image",query:{sliceId:this._sliceId,_ts:n.timestamp},signal:n.signal}).then(e=>e.data)}if(await this._initJobHandler(),this.multidimensionalDefinition){const e=this._sliceId;n={multidimensionalDefinition:this.multidimensionalDefinition,sliceId:e,...n}}return"raster-shaded-relief"===this.renderer.type&&(n={buffer:{cols:1,rows:1},...n}),this.raster.fetchTile(e,t,i,n)}async fetchPixels(e,t,i,n){if(await this._initJobHandler(),this.multidimensionalDefinition){const e=this._sliceId;n={multidimensionalDefinition:this.multidimensionalDefinition,sliceId:e,...n}}return this.raster.fetchPixels(e,t,i,n)}identify(e,t={}){return this.multidimensionalDefinition&&!t.multidimensionalDefinition&&(t={...t,multidimensionalDefinition:this.multidimensionalDefinition}),this.raster.identify(e,t)}increaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount++}decreaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount--,this._rasterJobHandler.refCount<=0&&this._shutdownJobHandler()}_configDefaultSettings(){this._configDefaultInterpolation(),this._configDefaultSlice(),this._configDefaultRenderer()}_initJobHandler(){if(null!=this._rasterJobHandler.connectionPromise)return this._rasterJobHandler.connectionPromise;const e=new D.a;return this._rasterJobHandler.connectionPromise=e.initialize().then(()=>{this._rasterJobHandler.instance=e,this.raster.rasterJobHandler=e,this.renderer&&this.updateRenderer()}).catch(()=>null),this._rasterJobHandler.connectionPromise}_shutdownJobHandler(){this._rasterJobHandler.instance&&this._rasterJobHandler.instance.destroy(),this._rasterJobHandler.instance=null,this._rasterJobHandler.connectionPromise=null,this._rasterJobHandler.refCount=0,this.raster.rasterJobHandler=null}_configDefaultInterpolation(){if(null==this.interpolation){var e;const t=Object(N.c)(this.rasterInfo,this.raster.tileType,null==(e=this.sourceJSON)?void 0:e.defaultResamplingMethod);this._set("interpolation",t)}}_configDefaultSlice(){const{multidimensionalInfo:e}=this.raster.rasterInfo;if(Object(r.h)(e)){if(!this.multidimensionalDefinition){const t=e.variables[0],i=[];t.dimensions.forEach(e=>{i.push(new B.a({variableName:t.name,dimensionName:e.name,values:e.hasRegularIntervals?e.extent[0]:e.values[0],isSlice:!0}))}),this.multidimensionalDefinition=i}this._sliceId=this.raster.getSliceIndex(this.multidimensionalDefinition)}}_configDefaultRenderer(){const e=this.raster.rasterInfo;var t;this.bandIds||(this.bandIds=Object(N.b)(e)),this.renderer||(this.renderer=Object(N.a)(e,{bandIds:this.bandIds,variableName:null==(t=this.multidimensionalDefinition)?void 0:t[0].variableName})),this.symbolizer?(this.symbolizer.renderer=this.renderer,this.symbolizer.rasterInfo=e):this.symbolizer=new L.a({renderer:this.renderer,rasterInfo:e}),this.symbolizer.bind()||P.warn("imagery-tile-mixin","The given renderer is not supported by the layer.")}};return Object(n.a)([Object(o.b)()],t.prototype,"_cachedRendererJson",void 0),Object(n.a)([Object(o.b)()],t.prototype,"_sliceId",void 0),Object(n.a)([Object(o.b)()],t.prototype,"_compatibleFullExtent",void 0),Object(n.a)([Object(o.b)()],t.prototype,"_rasterJobHandler",void 0),Object(n.a)([Object(o.b)()],t.prototype,"bandIds",void 0),Object(n.a)([Object(o.b)()],t.prototype,"copyright",void 0),Object(n.a)([Object(o.b)({type:C.a}),Object(T.a)("rasterInfo.extent")],t.prototype,"fullExtent",void 0),Object(n.a)([Object(o.b)()],t.prototype,"interpolation",void 0),Object(n.a)([Object(o.b)({type:[B.a]})],t.prototype,"multidimensionalDefinition",null),Object(n.a)([Object(o.b)()],t.prototype,"raster",void 0),Object(n.a)([Object(o.b)({readOnly:!0}),Object(T.a)("raster.rasterInfo")],t.prototype,"rasterInfo",void 0),Object(n.a)([Object(o.b)()],t.prototype,"sourceJSON",void 0),Object(n.a)([Object(o.b)({type:k.a}),Object(T.a)("rasterInfo.spatialReference")],t.prototype,"spatialReference",void 0),Object(n.a)([Object(o.b)({type:F.a,dependsOn:["rasterInfo"]}),Object(T.a)("rasterInfo.storageInfo.tileInfo")],t.prototype,"tileInfo",void 0),Object(n.a)([Object(o.b)(v.j)],t.prototype,"url",null),Object(n.a)([Object(o.b)({types:g.a})],t.prototype,"renderer",null),Object(n.a)([Object(o.b)()],t.prototype,"symbolizer",void 0),t=Object(n.a)([Object(u.a)("esri.layers.ImageryTileMixin")],t),t};var H=i(125),J=i(29),E=i(261),q=i(593),U=i(15);let $=class extends U.a{constructor(){super(...arguments),this.blockWidth=void 0,this.blockHeight=void 0,this.compression=null,this.origin=null,this.firstPyramidLevel=null,this.maximumPyramidLevel=null,this.pyramidScalingFactor=2,this.pyramidBlockWidth=null,this.pyramidBlockHeight=null,this.isVirtualTileInfo=!1,this.tileInfo=null,this.blockBoundary=null}};Object(n.a)([Object(o.b)({type:Number,json:{write:!0}})],$.prototype,"blockWidth",void 0),Object(n.a)([Object(o.b)({type:Number,json:{write:!0}})],$.prototype,"blockHeight",void 0),Object(n.a)([Object(o.b)({type:String,json:{write:!0}})],$.prototype,"compression",void 0),Object(n.a)([Object(o.b)({type:J.a,json:{write:!0}})],$.prototype,"origin",void 0),Object(n.a)([Object(o.b)({type:Number,json:{write:!0}})],$.prototype,"firstPyramidLevel",void 0),Object(n.a)([Object(o.b)({type:Number,json:{write:!0}})],$.prototype,"maximumPyramidLevel",void 0),Object(n.a)([Object(o.b)()],$.prototype,"pyramidScalingFactor",void 0),Object(n.a)([Object(o.b)({type:Number,json:{write:!0}})],$.prototype,"pyramidBlockWidth",void 0),Object(n.a)([Object(o.b)({type:Number,json:{write:!0}})],$.prototype,"pyramidBlockHeight",void 0),Object(n.a)([Object(o.b)({type:Boolean,json:{write:!0}})],$.prototype,"isVirtualTileInfo",void 0),Object(n.a)([Object(o.b)({json:{write:!0}})],$.prototype,"tileInfo",void 0),Object(n.a)([Object(o.b)()],$.prototype,"blockBoundary",void 0),$=Object(n.a)([Object(u.a)("esri.layers.support.RasterStorageInfo")],$);var W=$,G=i(39),V=(i(126),i(133)),Y=i(734),X=i(573),K=i(604),Q=i(737);let Z=class extends(Object(V.b)(U.a)){constructor(){super(...arguments),this.rasterJobHandler=null,this.datasetName=null,this.datasetFormat=null,this.rasterInfo=null,this.ioConfig={sampling:"closest"}}async init(){const e=Object(K.c)();this.addResolvingPromise(e),await this.when()}normalizeCtorArgs(e){return e&&e.ioConfig&&(e={...e,ioConfig:{resolution:null,bandIds:null,sampling:"closest",tileInfo:F.a.create(),...e.ioConfig}}),e}set url(e){this._set("url",Object(z.f)(e,a.a.getLogger(this.declaredClass)))}async open(e){throw new d.a("BaseRaster:open-not-implemented","open() is not implemented")}async fetchTile(e,t,i,n={}){var a;const{tileInfo:s}=n,o=s.lodAt(e),l=new J.a({x:o.resolution,y:o.resolution,spatialReference:s.spatialReference}),c=this.getTileExtent(l,t,i,s);return(null==(a=n.multidimensionalDefinition)?void 0:a.length)&&Object(r.h)(this.rasterInfo.multidimensionalInfo)&&null==n.sliceId&&(n={...n,sliceId:this.getSliceIndex(n.multidimensionalDefinition)||0}),this.fetchPixels(c,s.size[0],s.size[1],n)}async identify(e,t={}){const{spatialReference:i,extent:n}=this.rasterInfo,{datumTransformation:a}=t,s=Object(K.e)(e,i,a);if(!n.intersects(s))return{location:s,value:null};let o=0;if(t.srcResolution)o=Object(K.g)(t.srcResolution,this.rasterInfo,this.ioConfig.sampling).pyramidLevel;else if(o=await this.computeBestPyramidLevelForLocation(e,t),null==o)return{location:s,value:null};const l=this.identifyPixelLocation(s,o,null);if(null===l)return{location:s,value:null};const{row:c,col:h,rowOffset:u,colOffset:d}=l,f=Object(Q.d)(this.url,t.sliceId),p=`${o}/${c}/${h}`;let m=Object(Q.c)(f,null,p);Object(r.h)(m)||(m=this.fetchRawTile(o,c,h,t),Object(Q.e)(f,null,p,m));const b=await m;if(!(b&&b.pixels&&b.pixels.length>0))return{location:s,value:null};const y=u*this.rasterInfo.storageInfo.blockHeight+d;return{location:s,value:!b.mask||b.mask[y]?b.pixels.map(e=>e[y]):null,pyramidLevel:o}}async fetchPixels(e,t,i,n={}){const r=e.clone().normalize();e=r[0];const a=this.rasterInfo.spatialReference,s=!e.spatialReference.equals(a),{datumTransformation:o}=n,l=new J.a({x:(e.xmax-e.xmin)/t,y:(e.ymax-e.ymin)/i,spatialReference:e.spatialReference}),c=n.srcResolution||(s?Object(K.f)(l,a,e,o):l);if(!c)return null;const{pyramidLevel:h,pyramidResolution:u,excessiveReading:d}=Object(K.g)(c,this.rasterInfo,this.ioConfig.sampling);if(d)return null;const f=this.rasterInfo.storageInfo,p=s?Object(K.d)(e,a,o):e;if(null==p)return null;const m={x:Math.floor((p.xmin-f.origin.x)/u.x+.1),y:Math.floor((f.origin.y-p.ymax)/u.y+.1)},b=Math.ceil((p.xmax-p.xmin)/u.x-.1),y=Math.ceil((p.ymax-p.ymin)/u.y-.1);if(b/t>8||y/i>8)return null;const g=await this.fetchRawPixels(h,m,{width:b,height:y},n);if(!g)return null;const x=h>0?f.pyramidBlockWidth:f.blockWidth,w=h>0?f.pyramidBlockHeight:f.blockHeight;if(!s&&1===g.pixelBlocks.length&&x===t&&w===i&&c.x===l.x&&c.y===l.y)return{extent:e,srcExtent:p,pixelBlock:g.pixelBlocks[0],transformGrid:null};const v=Object(K.b)(e,g.extent,l,o);let O;const j=!n.requestRawData,I={rows:v.spacing[0],cols:v.spacing[1]},{pixelBlocks:_,mosaicSize:S,isPartiallyFilled:T}=g;if(this.rasterJobHandler)O=await this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:_,srcMosaicSize:S,destDimension:j?{width:t,height:i}:null,coefs:j?v.coefficients:null,sampleSpacing:j?I:null,interpolation:n.interpolation},n);else{const e=Object(X.h)(_,S);O=j?Object(X.a)(e,{width:t,height:i},v.coefficients,I,n.interpolation):e}return{srcExtent:p,pixelBlock:O,transformGrid:v,extent:e,isPartiallyFilled:T}}async fetchRawPixels(e,t,i,n){const{origin:r,blockBoundary:a}=this.rasterInfo.storageInfo,s=e>0?this.rasterInfo.storageInfo.pyramidBlockWidth:this.rasterInfo.storageInfo.blockWidth,o=e>0?this.rasterInfo.storageInfo.pyramidBlockHeight:this.rasterInfo.storageInfo.blockHeight;let{x:l,y:c}=t,{width:h,height:u}=i;n.buffer&&(l-=n.buffer.cols,c-=n.buffer.rows,h+=2*n.buffer.cols,u+=2*n.buffer.rows);const d=Math.floor(l/s),f=Math.floor(c/o),m=Math.floor((l+h-1)/s),b=Math.floor((c+u-1)/o),{pixelSize:y,spatialReference:g}=this.rasterInfo,x=a[e];if(!x)return null;const{minRow:w,minCol:v,maxCol:O,maxRow:j}=x;if(b<w||m<v||f>j||d>O)return null;const I=[];let _,S=!1;for(let t=f;t<=b;t++)for(let i=d;i<=m;i++)t>=w&&i>=v&&j>=t&&O>=i?(_=this._fetchRawTile(e,t,i,n),this.ioConfig.allowPartialFill&&(_=Object(p.f)(e=>{_.then(t=>e(t)).catch(()=>{S=!0,e(null)})})),I.push(_)):I.push(null);if(0===I.length)return null;const T=await Object(p.a)(I),R={height:(b-f+1)*s,width:(m-d+1)*o},M=y.x*Math.pow(2,e),k=y.y*Math.pow(2,e);return{extent:new C.a({xmin:r.x+d*s*M,xmax:r.x+(m+1)*s*M,ymin:r.y-(b+1)*o*k,ymax:r.y-f*o*k,spatialReference:g}),pixelBlocks:T,mosaicSize:R,isPartiallyFilled:S}}async fetchRawTile(e,t,i,n){throw new d.a("BaseRaster:read-not-implemented","fetchRawTile() is not implemented")}computeExtent(e){return Object(K.d)(this.rasterInfo.extent,e)}decodePixelBlock(e,t){return this.rasterJobHandler?this.rasterJobHandler.decode({data:e,options:t}):Object(Y.a)(e,t)}async request(e,t,i){var n,r;const{customFetchParameters:a}=this.ioConfig,{range:s,query:o,headers:l}=t;i=null!=(n=null!=(r=i)?r:t.retryCount)?n:this.ioConfig.retryCount;const c=s?{Range:`bytes=${s.from}-${s.to}`}:null;try{return await Object(R.default)(e,{...t,query:{...o,...a},headers:{...l,...c}})}catch(n){if(i>0)return i--,this.request(e,t,i);throw n}}getSliceIndex(e){const{multidimensionalInfo:t}=this.rasterInfo;if(!Object(r.h)(t)||!(null==e?void 0:e.length))return null;let i=0;const n=e[0].variableName;for(let r=0;r<t.variables.length;r++){const a=t.variables[r],s=a.dimensions;if(a.name!==n){i+=s.map(e=>this._getDimensionValuesCount(e)).reduce((e,t)=>e+t);break}const o=s.map(e=>this._getDimensionValuesCount(e)),l=s.length;for(let t=0;t<l;t++){const n=e.filter(e=>e.dimensionName===s[t].name)[0];if(null==n)return null;const r=Array.isArray(n.values[0])?n.values[0][0]:n.values[0],a=this._getIndexFromDimensions(r,s[t]);if(-1===a)return null;o.shift(),i+=t===l-1?a:a*o.reduce((e,t)=>e+t)}}return i}updateTileInfo(){const{storageInfo:e,spatialReference:t,pixelSize:i}=this.rasterInfo;if(!e.tileInfo){const n=[],r=e.maximumPyramidLevel||0;let a=Math.max(i.x,i.y),s=1/.0254*96*a;for(let e=0;e<=r;e++)n.push({level:r-e,resolution:a,scale:s}),a*=2,s*=2;e.tileInfo=new F.a({origin:e.origin,size:[e.blockWidth,e.blockHeight],spatialReference:t,lods:n}),e.isVirtualTileInfo=!0}}createRemoteDatasetStorageInfo(e,t=512,i=512){const{width:n,height:r,extent:a,pixelSize:s,spatialReference:o}=e,l=new J.a({x:a.xmin,y:a.ymax,spatialReference:o}),c=Math.max(0,Math.round(Math.log(Math.max(n,r))/Math.LN2-8)),h=this._computeBlockBoundary(a,s,c,512,512);e.storageInfo=new W({blockWidth:t,blockHeight:i,pyramidBlockWidth:t,pyramidBlockHeight:i,origin:l,firstPyramidLevel:1,maximumPyramidLevel:c,blockBoundary:h})}async computeBestPyramidLevelForLocation(e,t={}){return 0}identifyPixelLocation(e,t,i){const{spatialReference:n,pixelSize:r,extent:a}=this.rasterInfo,{blockWidth:s,blockHeight:o,maximumPyramidLevel:l,pyramidScalingFactor:c,origin:h}=this.rasterInfo.storageInfo,u=Object(K.e)(e,n,i);if(!a.intersects(u))return null;if(t<0||t>l)return null;const d=Math.pow(c,t),f=d*r.x,p=d*r.y,m=(h.y-u.y)/p/o,b=(u.x-h.x)/f/s,y=Math.min(o-1,Math.floor((m-Math.floor(m))*o)),g=Math.min(s-1,Math.floor((b-Math.floor(b))*s));return{pyramidLevel:t,row:Math.floor(m),col:Math.floor(b),rowOffset:y,colOffset:g,srcLocation:u}}getTileExtent(e,t,i,n){const{origin:r,spatialReference:a}=n,s=n.size[0],o=n.size[1],l=r.x+i*s*e.x,c=l+s*e.x,h=r.y-t*o*e.y,u=h-o*e.y;return new C.a({xmin:l,xmax:c,ymin:u,ymax:h,spatialReference:a})}_computeBlockBoundary(e,t,i,n,r){let{x:a,y:s}=t;const o=e.xmin,l=e.ymax,c=[{minCol:Math.floor((e.xmin-o+.1*a)/n/a),maxCol:Math.floor((e.xmax-o-.1*a)/n/a),minRow:Math.floor((l-e.ymax+.1*s)/r/s),maxRow:Math.floor((l-e.ymin-.1*s)/r/s)}];if(i>0)for(let t=0;t<i;t++)a*=2,s*=2,c.push({minCol:Math.floor((e.xmin-o+.1*a)/n/a),maxCol:Math.floor((e.xmax-o-.1*a)/n/a),minRow:Math.floor((l-e.ymax+.1*s)/r/a),maxRow:Math.floor((l-e.ymin-.1*s)/r/a)});return c}_fetchRawTile(e,t,i,n){const a=this.rasterInfo.storageInfo.blockBoundary[e];if(!a)return Object(p.r)(null);const{minRow:s,minCol:o,maxCol:l,maxRow:c}=a;if(t<s||i<o||t>c||i>l)return Object(p.r)(null);const h=Object(Q.d)(this.url,n.sliceId),u=`${e}/${t}/${i}`;let d=Object(Q.c)(h,n.registryId,u);if(!Object(r.h)(d)){const r=Object(p.c)();d=this.fetchRawTile(e,t,i,{...n,signal:r.signal}),Object(Q.e)(h,n.registryId,u,d,r),d.catch(()=>{Object(Q.b)(h,n.registryId,u)})}return n.signal&&Object(p.o)(n,()=>{Object(Q.a)(h,n.registryId,u)}),d}_getIndexFromDimensions(e,t){const{extent:i,interval:n,unit:r,values:a}=t;if(null==a?void 0:a.length)return Array.isArray(a[0])?Object(G.b)(a,t=>t[0]<=e&&t[1]>=e):a.indexOf(e);if(e>i[1])return-1;const s=i[0];let o=-1;if("ISO8601"===r){var l;switch((null==(l=t.intervalUnit)?void 0:l.toLowerCase())||"seconds"){case"seconds":o=Math.round((e-s)/1e3/n);break;case"minutes":o=Math.round((e-s)/6e4/n);break;case"hours":o=Math.round((e-s)/36e5/n);break;case"days":o=Math.round((e-s)/864e5/n);break;case"years":o=Math.round((new Date(e).getUTCFullYear()-new Date(s).getUTCFullYear())/n);break;case"decades":o=Math.round((new Date(e).getUTCFullYear()-new Date(s).getUTCFullYear())/10/n)}return o}return Math.round((e-s)/n)}_getDimensionValuesCount(e){const{extent:t,interval:i,unit:n,values:r}=e;let a=(null==r?void 0:r.length)||0;if(a)return a;const s=t[0];if(0===a&&"ISO8601"===n){var o;switch((null==(o=e.intervalUnit)?void 0:o.toLowerCase())||"seconds"){case"seconds":a=Math.round((t[1]-t[0])/1e3/i);break;case"minutes":a=Math.round((t[1]-t[0])/6e4/i);break;case"hours":a=Math.round((t[1]-t[0])/36e5/i);break;case"days":a=Math.round((t[1]-t[0])/864e5/i);break;case"years":a=Math.round((new Date(t[1]).getUTCFullYear()-new Date(s).getUTCFullYear())/i);break;case"decades":a=Math.round((new Date(t[1]).getUTCFullYear()-new Date(s).getUTCFullYear())/10/i)}return a}return Math.round((t[1]-t[0])/i)}};Object(n.a)([Object(o.b)(v.j)],Z.prototype,"url",null),Object(n.a)([Object(o.b)({type:String,json:{write:!0}})],Z.prototype,"datasetName",void 0),Object(n.a)([Object(o.b)({type:String,json:{write:!0}})],Z.prototype,"datasetFormat",void 0),Object(n.a)([Object(o.b)()],Z.prototype,"rasterInfo",void 0),Object(n.a)([Object(o.b)()],Z.prototype,"ioConfig",void 0),Object(n.a)([Object(o.b)()],Z.prototype,"sourceJSON",void 0),Z=Object(n.a)([Object(u.a)("esri.layers.support.rasterDatasets.BaseRaster")],Z);var ee=Z,te=i(753);const ie=new Map;ie.set("int16","esriFieldTypeSmallInteger"),ie.set("int32","esriFieldTypeInteger"),ie.set("int64","esriFieldTypeInteger"),ie.set("float32","esriFieldTypeSingle"),ie.set("float64","esriFieldTypeDouble"),ie.set("text","esriFieldTypeString");let ne=class extends ee{constructor(){super(...arguments),this.storageInfo=null,this.datasetFormat="CRF"}async open(e){await this.init();const{data:t}=await this.request(this.url+"/conf.json",{signal:null==e?void 0:e.signal});if(!this._validateHeader(t))throw new d.a("cloudraster:open","Invalid or unsupported conf.json.");this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1);const{storageInfo:i,rasterInfo:n}=this._parseHeader(t);if("thematic"===n.dataType){const e=await this._fetchAuxiliaryInformation();n.attributeTable=e}this._set("storageInfo",i),this._set("rasterInfo",n),this.ioConfig.retryCount=this.ioConfig.retryCount||0}async fetchRawTile(e,t,i,n={}){const r=this.rasterInfo.storageInfo.maximumPyramidLevel-e;if(r<0)return null;const a=this._buildCacheFilePath(r,t,i,n.multidimensionalDefinition),s=this._getIndexRecordFromBundle(t,i),o=await this.request(a,{range:{from:0,to:this.storageInfo.headerSize-1},responseType:"array-buffer",signal:n.signal});if(!o)return null;const l=new Uint8Array(o.data),c=this._getTileEndAndContentType(l,s);if(0===c.recordSize)return null;const h=await this.request(a,{range:{from:c.position,to:c.position+c.recordSize},responseType:"array-buffer",signal:n.signal});return h?this.decodePixelBlock(h.data,{width:this.rasterInfo.storageInfo.tileInfo.size[0],height:this.rasterInfo.storageInfo.tileInfo.size[1],planes:null,pixelType:null}):null}_validateHeader(e){return e&&"RasterInfo"===e.type&&!["origin","extent","geodataXform","LODInfos","blockWidth","blockHeight","bandCount","pixelType","pixelSizeX","pixelSizeY","format","packetSize"].some(t=>!e[t])}_parseHeader(e){var t;const i=["u1","u2","u4","u8","s8","u16","s16","u32","s32","f32","f64"][e.pixelType],{bandCount:n,histograms:r,colormap:a,blockWidth:s,blockHeight:o,firstPyramidLevel:l,maximumPyramidLevel:c}=e,h=e.statistics&&e.statistics.map(e=>({min:e.min,max:e.max,avg:e.mean,stddev:e.standardDeviation,median:e.median,mode:e.mode})),u=new k.a(e.extent.spatialReference||e.geodataXform.spatialReference),d=new C.a({xmin:e.extent.xmin,ymin:e.extent.ymin,xmax:e.extent.xmax,ymax:e.extent.ymax,spatialReference:u}),f=new J.a({x:e.pixelSizeX,y:e.pixelSizeY,spatialReference:u}),p=null!=(t=e.properties)?t:{},m=e.format.toLowerCase().replace("cache/",""),b=new J.a(e.origin.x,e.origin.y,u);let y,g,x,w;if(a&&a.colors)for(y=[],g=0;g<a.colors.length;g++)x=a.colors[g],w=a.values?a.values[g]:g,y.push([w,255&x,x<<16>>>24,x<<8>>>24,x>>>24]);const v=e.LODInfos,O=[];for(g=0;g<v.levels.length;g++)O.push({level:v.levels[g],resolution:v.resolutions[g],scale:96/.0254*v.resolutions[g]});const j=new F.a({dpi:96,lods:O,format:m,origin:b,size:[s,o],spatialReference:u}),I={recordSize:8,packetSize:e.packetSize,headerSize:e.packetSize*e.packetSize*8+64},_=Math.round((d.xmax-d.xmin)/f.x),S=Math.round((d.ymax-d.ymin)/f.y),T=[{maxCol:Math.ceil(_/s)-1,maxRow:Math.ceil(S/o)-1,minCol:0,minRow:0}];let R=2;if(c>0)for(g=0;g<c;g++)T.push({maxCol:Math.ceil(_/R/s)-1,maxRow:Math.ceil(S/R/o)-1,minCol:0,minRow:0}),R*=2;const M=e.mdInfo;return{storageInfo:I,rasterInfo:new q.a({width:_,height:S,pixelType:i,bandCount:n,extent:d,spatialReference:u,pixelSize:f,keyProperties:p,statistics:h,histograms:r,multidimensionalInfo:M,colormap:y,storageInfo:new W({blockWidth:s,blockHeight:o,pyramidBlockWidth:s,pyramidBlockHeight:o,origin:b,tileInfo:j,firstPyramidLevel:l,maximumPyramidLevel:c,blockBoundary:T})})}}async _fetchAuxiliaryInformation(e){const t=this.request(this.url+"/conf.vat.json",{signal:e}).then(e=>e.data).catch(()=>null),i=this.request(this.url+"/conf.vat.dbf",{responseType:"array-buffer",signal:e}).then(e=>e.data).catch(()=>null),n=await Object(p.a)([t,i]);let r;if(n[0]){let e=n[0].fields;const t=n[0].values;if(e&&t){e=e.map(e=>({type:"OID"===e.name?"esriFieldTypeOID":ie.get(e.type),name:e.name,alias:e.alias||e.name}));const i=t.map(e=>({attributes:e}));e&&t&&(r={fields:e,features:i})}}return!r&&n[1]&&(r=class{static get supportedVersions(){return[5]}static parse(e){const t=new DataView(e),i=3&t.getUint8(0);if(3!==i)return{header:{version:i},recordSet:null};const n=t.getUint32(4,!0),r=t.getUint16(8,!0),a=t.getUint16(10,!0),s={version:i,recordCount:n,headerByteCount:r,recordByteCount:a};let o=32;const l=[],c=[];let h;if(3===i){for(;13!==t.getUint8(o);)h=String.fromCharCode(t.getUint8(o+11)).trim(),l.push({name:Object(te.a)(new Uint8Array(e,o,11)),type:h,typeName:["String","Date","Double","Boolean","String","Integer"][["C","D","F","L","M","N"].indexOf(h)],length:t.getUint8(o+16)}),o+=32;if(o+=1,l.length>0)for(;c.length<n&&e.byteLength-o>a;){const i=[];32===t.getUint8(o)?(o+=1,l.forEach(t=>{if("C"===t.type)i.push(Object(te.a)(new Uint8Array(e,o,t.length)).trim());else if("N"===t.type)i.push(parseInt(String.fromCharCode.apply(null,new Uint8Array(e,o,t.length)).trim(),10));else if("F"===t.type)i.push(parseFloat(String.fromCharCode.apply(null,new Uint8Array(e,o,t.length)).trim()));else if("D"===t.type){const n=String.fromCharCode.apply(null,new Uint8Array(e,o,t.length)).trim();i.push(new Date(parseInt(n.substring(0,4),10),parseInt(n.substring(4,6),10)-1,parseInt(n.substring(6,8),10)))}o+=t.length}),c.push(i)):o+=a}}const u=function(e){const t=e.fields,i=e.records,n=t.some(e=>"oid"===e.name.toLowerCase())?"OBJECTID":"OID",r=[{name:n,type:"esriFieldTypeOID",alias:"OID"}].concat(t.map(e=>({name:e.name,type:"esriFieldType"+e.typeName,alias:e.name}))),a=r.map(e=>e.name),s=[];let o=0,l=0;return i.forEach(e=>{const t={};for(t[n]=o++,l=1;l<a.length;l++)t[a[l]]=e[l-1];s.push({attributes:t})}),{displayFieldName:"",fields:r,features:s}}({fields:l,records:c});return{header:s,fields:l,records:c,recordSet:u}}}.parse(n[1]).recordSet),E.default.fromJSON(r)}_buildCacheFilePath(e,t,i,n){const a=this.storageInfo.packetSize,s=Math.floor(t/a)*a,o=Math.floor(i/a)*a,l="R"+this._toHexString4(s)+"C"+this._toHexString4(o);let c="L";c+=e>=10?e.toString():"0"+e.toString();const{multidimensionalInfo:h}=this.rasterInfo,u=null==n?void 0:n[0];if(!Object(r.h)(h)||!u)return`${this.url}/_alllayers/${c}/${l}.bundle`;let d=h.variables.filter(e=>e.name===u.variableName)[0].dimensions[0].values.indexOf(u.values[0]).toString(16);const f=4-d.length;for(let e=0;e<f;e++)d="0"+d;return d="S"+d,`${this.url}/_alllayers/${u.variableName}/${d}/${c}/${l}.bundle`}_getIndexRecordFromBundle(e,t){const i=this.storageInfo.packetSize,n=i*(e%i)+t%i;if(n<0)throw"Invalid level / row / col";return 20+n*this.storageInfo.recordSize+44}_getTileEndAndContentType(e,t){const i=e.subarray(t,t+8);let n,r=0;for(n=0;n<5;n++)r|=(255&i[n])<<8*n;const a=0xffffffffff&r;for(r=0,n=5;n<8;n++)r|=(255&i[n])<<8*(n-5);return{position:a,recordSize:0xffffffffff&r}}_toHexString4(e){let t=e.toString(16);if(4!==t.length){let e=4-t.length;for(;e-- >0;)t="0"+t}return t}};Object(n.a)([Object(o.b)({readOnly:!0})],ne.prototype,"storageInfo",void 0),Object(n.a)([Object(o.b)({type:String,json:{write:!0}})],ne.prototype,"datasetFormat",void 0),ne=Object(n.a)([Object(u.a)("esri.layers.support.rasterDatasets.CloudRaster")],ne);var re=ne,ae=i(581),se=i(566);let oe=class extends ee{constructor(){super(...arguments),this._levelOffset=0,this._slices=null,this._tilemapCache=null,this.datasetFormat="RasterTileServer"}async open(e){await this.init();const t=e&&e.signal,i=this.sourceJSON?{data:this.sourceJSON}:await this.request(this.url,{query:{f:"json"},signal:t});i.ssl&&(this.url=this.url.replace(/^http:/i,"https:"));const n=i.data;this.sourceJSON=n;if(this.tileType=n.cacheType,null==this.tileType&&(["jpg","jpeg","png","png8","png24","png32","mixed"].indexOf(n.tileInfo.format.toLowerCase())>-1?this.tileType="Map":"lerc"===n.tileInfo.format.toLowerCase()?this.tileType="Elevation":this.tileType="Raster"),!n)throw new d.a("imageserverraster:open","cannot initialize tiled image service, missing service info");if(!n.tileInfo)throw new d.a("imageserverraster:open","use ImageryLayer to open non-tiled image services");this.datasetName=n.name.slice(n.name.indexOf("/")+1);const a=await this._fetchRasterInfo({signal:t});if(!Object(r.h)(a))throw new d.a("image-server-raster:open","cannot initialize image service");{const e="Map"===this.tileType?Object(ae.a)(n.tileInfo,n):F.a.fromJSON(n.tileInfo),{extent:t,pixelSize:i}=a,r=.5/a.width*i.x;let s,o;const l=e.lodAt(Math.max.apply(null,e.lods.map(e=>e.level)));"Map"!==this.tileType&&0!==n.maxScale&&("Raster"===this.tileType?(s=e.lods.filter(e=>e.resolution===i.x)[0],s||(s=e.lods.filter(e=>e.resolution>i.x).sort((e,t)=>e.resolution>t.resolution?1:-1)[0])):(s=e.lods.filter(e=>Math.abs(e.scale-n.maxScale)<r)[0],s||(s=e.lods.filter(e=>e.scale>n.maxScale).sort((e,t)=>e.scale>t.scale?1:-1)[0])),i.x=i.y=s.resolution,a.width=Math.ceil((t.xmax-t.xmin)/i.x-.1),a.height=Math.ceil((t.ymax-t.ymin)/i.y-.1)),s||(s=l);const c=e.lodAt(Math.min.apply(null,e.lods.map(e=>e.level)));"Map"===this.tileType?this._levelOffset=e.lods[0].level:0!==n.minScale&&"Elevation"===this.tileType&&(o=e.lods.filter(e=>Math.abs(e.scale-n.minScale)<r)[0],this._levelOffset=o.level-c.level),o||(o=c);const h=Math.max(i.x,i.y);(Math.abs(i.x-i.y)>r||!e.lods.some(e=>Math.abs(e.resolution-h)<r))&&(i.x=i.y=s.resolution,a.width=Math.ceil((t.xmax-t.xmin)/i.x-.1),a.height=Math.ceil((t.ymax-t.ymin)/i.y-.1));const u=s.level-o.level,[d,f]=e.size,p=e.origin;let{x:m,y:b}=i;const y=[{minCol:Math.floor((t.xmin-p.x+.1*m)/d/m),maxCol:Math.floor((t.xmax-p.x-.1*m)/d/m),minRow:Math.floor((p.y-t.ymax+.1*b)/f/b),maxRow:Math.floor((p.y-t.ymin-.1*b)/f/b)}];if(u>0)for(let e=0;e<u;e++)m*=2,b*=2,y.push({minCol:Math.floor((t.xmin-p.x+.1*m)/d/m),maxCol:Math.floor((t.xmax-p.x-.1*m)/d/m),minRow:Math.floor((p.y-t.ymax+.1*b)/f/m),maxRow:Math.floor((p.y-t.ymin-.1*b)/f/m)});a.storageInfo=new W({blockWidth:e.size[0],blockHeight:e.size[1],pyramidBlockWidth:e.size[0],pyramidBlockHeight:e.size[1],compression:e.format,origin:e.origin,firstPyramidLevel:1,maximumPyramidLevel:u,tileInfo:e,blockBoundary:y}),this._set("rasterInfo",a)}if(n.capabilities.toLowerCase().indexOf("tilemap")>-1){const e={tileInfo:a.storageInfo.tileInfo,parsedUrl:Object(f.H)(this.url),url:this.url,tileServers:[],type:"tile"};this._tilemapCache=new se.a({layer:e})}}async fetchRawTile(e,t,i,n={}){const{storageInfo:r,extent:a,pixelSize:s}=this.rasterInfo,o=r.maximumPyramidLevel-e+this._levelOffset,l=`${this.url}/tile/${o}/${t}/${i}`,c=this._slices?{sliceId:n.sliceId||0}:null,{data:h}=await this.request(l,{query:c,responseType:"array-buffer",signal:n.signal});if(!h)return null;const u=await this.decodePixelBlock(h,{width:r.tileInfo.size[0],height:r.tileInfo.size[1],planes:null,pixelType:null,isPoint:"Elevation"===this.tileType}),d=r.blockBoundary[e];if("jpg"!==r.compression||i>d.minCol&&i<d.maxCol&&t>d.minRow&&t<d.maxRow)return u;const{origin:f,blockWidth:p,blockHeight:m}=r,b=Math.pow(2,e),y=Math.round((a.xmin-f.x)/(s.x*b))%p,g=Math.round((a.xmax-f.x)/(s.x*b))%p,x=Math.round((f.y-a.ymax)/(s.x*b))%m,w=Math.round((f.y-a.ymin)/(s.x*b))%m,v=i===d.minCol?y:0,O=t===d.minRow?x:0,j=i===d.maxCol?g:p,I=t===d.maxRow?w:m;return Object(X.k)(u,{x:v,y:O},{width:j-v,height:I-O}),u}getSliceIndex(e){if(!(null==e?void 0:e.length)||!this._slices)return null;const t=e;for(let e=0;e<this._slices.length;e++){const i=this._slices[e].multidimensionalDefinition;if(i.length===t.length&&!i.some(e=>{const i=t.filter(t=>e.variableName===t.variableName&&t.dimensionName===e.dimensionName)[0];return!i||(Array.isArray(e.values[0])?e.values[0][0]:e.values[0])!==(Array.isArray(i.values[0])?i.values[0][0]:i.values[0])}))return e}return null}async fetchVariableStatisticsHistograms(e,t){const i=this.request(this.url+"/statistics",{query:{variable:e,f:"json"},signal:t}).then(e=>{var t;return null==(t=e.data)?void 0:t.statistics}),n=this.request(this.url+"/histograms",{query:{variable:e,f:"json"},signal:t}).then(e=>{var t;return null==(t=e.data)?void 0:t.histograms}),r=await Object(p.a)([i,n]);return r[0]&&r[0].forEach(e=>{e.avg=e.mean,e.stddev=e.standardDeviation}),{statistics:r[0]||null,histograms:r[1]||null}}async computeBestPyramidLevelForLocation(e,t={}){if(!this._tilemapCache)return 0;let i=this.identifyPixelLocation(e,0,t.datumTransformation);if(null===i)return null;let n=0;const{maximumPyramidLevel:r}=this.rasterInfo.storageInfo;let a=r-n+this._levelOffset;const s=i.srcLocation;for(;a>=0;){try{if("available"===await this._tilemapCache.fetchAvailability(a,i.row,i.col,t))break}catch{}if(a--,n++,i=this.identifyPixelLocation(s,n,t.datumTransformation),null===i)return null}return-1===a||null==i?null:n}async _fetchRasterInfo(e){const t=this.sourceJSON,i=Math.ceil((t.extent.xmax-t.extent.xmin)/t.pixelSizeX-.1),n=Math.ceil((t.extent.ymax-t.extent.ymin)/t.pixelSizeY-.1),r=k.a.fromJSON(t.spatialReference||t.extent.spatialReference);if("Map"===this.tileType)return new q.a({width:i,height:n,bandCount:3,extent:C.a.fromJSON(t.extent),spatialReference:r,pixelSize:new J.a({x:t.pixelSizeX,y:t.pixelSizeY,spatialReference:r}),pixelType:"u8",statistics:null,keyProperties:{DataType:"processed"}});const{slice:a,signal:s}=e,o=!!t.hasRasterAttributeTable&&this.request(this.url+"/rasterAttributeTable",{query:{slice:a,f:"json"},signal:s}).then(e=>E.default.fromJSON(e.data)).catch(()=>null),l=!!t.hasColormap&&this.request(this.url+"/colormap",{query:{slice:a,f:"json"},signal:s}).then(e=>{var t;return null==(t=e.data)?void 0:t.colormap}),c=!!t.hasHistograms&&this.request(this.url+"/histograms",{query:{slice:a,f:"json"},signal:s}).then(e=>{var t;return null==(t=e.data)?void 0:t.histograms}),h=this.request(this.url+"/keyProperties",{query:{f:"json"},signal:s}).then(e=>e.data).catch(()=>{}),u=!!t.hasMultidimensions&&this._fetchMultidimensionalInfo(),d=!!t.hasMultidimensions&&this.request(this.url+"/slices",{query:{f:"json"},signal:s}).then(e=>e.data&&e.data.slices).catch(()=>{});return Object(p.a)([o,l,c,h,u,d]).then(e=>{let a=null;if(t.minValues&&t.minValues.length===t.bandCount){a=[];for(let e=0;e<t.minValues.length;e++)a.push({min:t.minValues[e],max:t.maxValues[e],avg:t.meanValues[e],stddev:t.stdvValues[e]})}return this._slices=e[5]||null,new q.a({width:i,height:n,bandCount:t.bandCount,extent:C.a.fromJSON(t.extent),spatialReference:r,pixelSize:new J.a({x:t.pixelSizeX,y:t.pixelSizeY,spatialReference:r}),pixelType:t.pixelType.toLowerCase(),statistics:a,attributeTable:e[0]||null,colormap:e[1]||null,histograms:e[2]||null,keyProperties:e[3]||{},multidimensionalInfo:e[4]||null})})}async _fetchMultidimensionalInfo(e){var t;const i=await this.request(this.url+"/multidimensionalInfo",{query:{f:"json"},signal:e}).then(e=>{var t;return null==(t=e.data)?void 0:t.multidimensionalInfo});return(null==(t=i.variables)?void 0:t.length)&&i.variables.forEach(e=>{var t;(null==(t=e.statistics)?void 0:t.length)&&e.statistics.forEach(e=>{e.avg=e.mean,e.stddev=e.standardDeviation})}),i}};Object(n.a)([Object(o.b)({type:String,json:{write:!0}})],oe.prototype,"datasetFormat",void 0),Object(n.a)([Object(o.b)()],oe.prototype,"tileType",void 0),oe=Object(n.a)([Object(u.a)("esri.layers.support.rasterDatasets.ImageServerRaster")],oe);var le=oe,ce=i(562);function he(e,t){if(!e||!t)return[];let i,n=t;if(t.indexOf("/")>-1?(n=t.slice(0,t.indexOf("/")),t=t.slice(t.indexOf("/")+1)):t="",i=t?ue(e,n).getElementsByTagNameNS("*",t):e.getElementsByTagNameNS("*",n),!i||0===i.length)return[];const r=[];for(let e=0;e<i.length;e++)r.push(i[e]||i.item[e]);return r}function ue(e,t){if(!e||!t)return null;let i=t;t.indexOf("/")>-1?(i=t.slice(0,t.indexOf("/")),t=t.slice(t.indexOf("/")+1)):t="";const n=he(e,i);return n.length>0?t?ue(n[0],t):n[0]:null}function de(e,t=null){const i=t?ue(e,t):e;let n;return i?(n=i.textContent||i.nodeValue,n?n.trim():null):null}const fe=(()=>{const e=new ArrayBuffer(4),t=new Uint8Array(e);return new Uint32Array(e)[0]=1,1===t[0]})(),pe=new Map;pe.set("Int8","s8"),pe.set("UInt8","u8"),pe.set("Int16","s16"),pe.set("UInt16","u16"),pe.set("Int32","s32"),pe.set("UInt32","u32"),pe.set("Float32","f32"),pe.set("Float64","f32"),pe.set("Double64","f32");const me=new Map;me.set("lerc",".lrc"),me.set("none",".til"),me.set("deflate",".pzp"),me.set("jpeg",".jzp");let be=class extends ee{constructor(){super(...arguments),this._files=null,this._storageIndex=null,this.datasetFormat="MRF"}async open(e){await this.init(),this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1);const t=e?Object(r.m)(e.signal):null,i=await this.request(this.url,{responseType:"xml",signal:t}),{rasterInfo:n,files:a}=this._parseHeader(i.data);this._set("rasterInfo",n),this._files=a;const s=await this.request(a.index,{responseType:"array-buffer",signal:t});this._storageIndex=this._parseIndex(s.data);let o,l,c=0,h=-1;const{blockWidth:u,blockHeight:d,compression:f}=this.rasterInfo.storageInfo,p=this.rasterInfo.storageInfo.pyramidScalingFactor,{width:m,height:b,bandCount:y}=this.rasterInfo,g=[],x="none"===f?1:y;for(;c<this._storageIndex.length;)h++,o=Math.ceil(m/u/Math.pow(p,h)),l=Math.ceil(b/d/Math.pow(p,h)),c+=o*l*x*4,g.push({maxRow:l,maxCol:o,minCol:0,minRow:0});this.rasterInfo.storageInfo.blockBoundary=g,h>0&&(this.rasterInfo.storageInfo.firstPyramidLevel=1,this.rasterInfo.storageInfo.maximumPyramidLevel=h),this.updateTileInfo()}async fetchRawTile(e,t,i,n={}){const{blockWidth:r,blockHeight:a,blockBoundary:s,compression:o}=this.rasterInfo.storageInfo,l=s[e];if(!l||l.maxRow<t||l.maxCol<i||l.minRow>t||l.minCol>i)return null;const{bandCount:c,pixelType:h}=this.rasterInfo,{ranges:u,actualTileWidth:d,actualTileHeight:f}=this._getTileLocation(e,t,i);if(!u||0===u.length)return null;if(0===u[0].from&&0===u[0].to){const e=new Uint8Array(r*a);return new ce.a({width:r,height:a,pixels:null,mask:e,validPixelCount:0})}const{bandIds:m}=this.ioConfig,b="none"===o?1:c,y=[];let g=0;for(g=0;g<b;g++)(!m||m.indexOf[g]>-1)&&y.push(this.request(this._files.data,{range:{from:u[g].from,to:u[g].to},responseType:"array-buffer",signal:n.signal}));const x=await Object(p.a)(y),w=x.map(e=>e.data.byteLength).reduce((e,t)=>e+t),v=new Uint8Array(w);let O=0;for(g=0;g<b;g++)v.set(new Uint8Array(x[g].data),O),O+=x[g].data.byteLength;const j="lerc"===this.rasterInfo.storageInfo.compression?"lerc":"bip",I=await this.decodePixelBlock(v.buffer,{width:r,height:a,format:j,pixelType:h});let _=0,S=0;if(d!==r||f!==a){let e=I.mask;if(e)for(g=0;g<a;g++)if(S=g*r,g<f)for(_=d;_<r;_++)e[S+_]=0;else for(_=0;_<r;_++)e[S+_]=0;else for(e=new Uint8Array(r*a),I.mask=e,g=0;g<f;g++)for(S=g*r,_=0;_<d;_++)e[S+_]=1}return I}_parseIndex(e){if(e.byteLength%16>0)throw"invalid array buffer must be multiples of 16";let t,i,n,r,a,s;if(fe){for(i=new Uint8Array(e),r=new ArrayBuffer(e.byteLength),n=new Uint8Array(r),a=0;a<e.byteLength/4;a++)for(s=0;s<4;s++)n[4*a+s]=i[4*a+3-s];t=new Uint32Array(r)}else t=new Uint32Array(e);return t}_getTileLocation(e,t,i){const{blockWidth:n,blockHeight:r,pyramidScalingFactor:a,compression:s}=this.rasterInfo.storageInfo,{width:o,height:l,bandCount:c}=this.rasterInfo,h="none"===s?1:c;let u,d,f,p=0,m=0;for(f=0;f<e;f++)m=Math.pow(a,f),u=Math.ceil(o/n/m),d=Math.ceil(l/r/m),p+=u*d;m=Math.pow(a,e),u=Math.ceil(o/n/m),d=Math.ceil(l/r/m),p+=t*u+i,p*=4*h;const b=this._storageIndex.subarray(p,p+4*h);let y=0,g=0;const x=[];for(let e=0;e<h;e++)y=b[4*e+0]*Math.pow(2,32)+b[4*e+1],g=y+b[4*e+2]*Math.pow(2,32)+b[4*e+3],x.push({from:y,to:g});return{ranges:x,actualTileWidth:i<u-1?n:Math.ceil(o/m)-n*(u-1),actualTileHeight:t<d-1?r:Math.ceil(l/m)-r*(d-1)}}_parseHeader(e){const t=ue(e,"MRF_META/Raster");if(!t)throw new d.a("mrf:open","not a valid MRF format");const i=ue(t,"Size"),n=parseInt(i.getAttribute("x"),10),r=parseInt(i.getAttribute("y"),10),a=parseInt(i.getAttribute("c"),10),s=(de(t,"Compression")||"none").toLowerCase();if(!s||-1===["none","lerc"].indexOf(s))throw new d.a("mrf:open","currently does not support compression "+s);const o=de(t,"DataType")||"UInt8",l=pe.get(o);if(null==l)throw new d.a("mrf:open","currently does not support pixel type "+o);const c=ue(t,"PageSize"),h=parseInt(c.getAttribute("x"),10),u=parseInt(c.getAttribute("y"),10),f=ue(t,"DataValues");let p,m;if(f&&(m=f.getAttribute("NoData"),null!=m&&(p=m.trim().split(" ").map(e=>parseFloat(e)))),ue(e,"MRF_META/CachedSource"))throw new d.a("mrf:open","currently does not support MRF referencing other data files");const b=ue(e,"MRF_META/GeoTags"),y=ue(b,"BoundingBox");if(null==y)throw new d.a("mrf:open","missing node MRF_META/GeoTags/BoundingBox");const g=parseFloat(y.getAttribute("minx")),x=parseFloat(y.getAttribute("miny")),w=parseFloat(y.getAttribute("maxx")),v=parseFloat(y.getAttribute("maxy")),O=de(b,"Projection"),j=de(e,"datafile"),I=de(e,"IndexFile");let _;"LOCAL_CS[]"!==O&&(_=new k.a({wkt:O}));const S=new C.a(g,x,w,v);S.spatialReference=_;const T=ue(e,"MRF_META/Rsets"),R=parseInt(T&&T.getAttribute("scale")||"2",10),M=new W({origin:new J.a({x:S.xmin,y:S.ymax,spatialReference:_}),blockWidth:h,blockHeight:u,pyramidBlockWidth:h,pyramidBlockHeight:u,compression:s,pyramidScalingFactor:R}),z=new J.a({x:(w-g)/n,y:(v-x)/r,spatialReference:_});return{rasterInfo:new q.a({width:n,height:r,extent:S,spatialReference:_,bandCount:a,pixelType:l,pixelSize:z,noDataValue:p,storageInfo:M}),files:{mrf:this.url,index:I||this.url.replace(".mrf",".idx"),data:j||this.url.replace(".mrf",me.get(s))}}}};Object(n.a)([Object(o.b)()],be.prototype,"_files",void 0),Object(n.a)([Object(o.b)()],be.prototype,"_storageIndex",void 0),Object(n.a)([Object(o.b)({type:String,json:{write:!0}})],be.prototype,"datasetFormat",void 0),be=Object(n.a)([Object(u.a)("esri.layers.support.rasterIO.MRFRaster")],be);var ye=be,ge=i(754),xe=i(752);const we=function(e,t){const i=e.get(t);return i&&i.values},ve=function(e,t){const i=e.get(t);return i&&i.values[0]};let Oe=class extends ee{constructor(){super(...arguments),this._files=null,this._headerInfo=null,this._bufferSize=1048576,this.datasetFormat="TIFF"}async open(e){await this.init();const t=e?Object(r.m)(e.signal):null,{data:i}=await this.request(this.url,{range:{from:0,to:this._bufferSize},responseType:"array-buffer",signal:t});if(!i)throw new d.a("tiffraster:open","failed to open url "+this.url);this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1);const{littleEndian:n,firstIFD:a}=Object(xe.f)(i),s=[];await this.readIFDs(s,i,n,a,0,4,t);const o=Object(xe.c)(s),{width:l,height:c,tileWidth:h,tileHeight:u,planes:f,pixelType:p,compression:m,firstPyramidLevel:b,maximumPyramidLevel:y,pyramidBlockWidth:g,pyramidBlockHeight:x,tileBoundary:w,metadata:v}=o,O=C.a.fromJSON(o.extent),j=O.spatialReference,I=new J.a(O?{x:O.xmin,y:O.ymax,spatialReference:j}:{x:0,y:0}),_=new W({blockWidth:h,blockHeight:u,pyramidBlockWidth:g,pyramidBlockHeight:x,compression:m,origin:I,firstPyramidLevel:b,maximumPyramidLevel:y,blockBoundary:w}),S=new J.a({x:(O.xmax-O.xmin)/l,y:(O.ymax-O.ymin)/c,spatialReference:j}),T=v?{BandProperties:v.bandProperties,DataType:v.dataType}:{},R=new q.a({width:l,height:c,bandCount:f,pixelType:p,compression:m,pixelSize:S,storageInfo:_,spatialReference:j,keyProperties:T,extent:O,statistics:v?v.statistics:null});if(this._set("rasterInfo",R),this._headerInfo={littleEndian:n,ifds:s,...o},!this._headerInfo.isSupported)throw new d.a("tiffraster:open","this tiff is not supported: "+this._headerInfo.message);this.updateTileInfo()}async fetchRawTile(e,t,i,n={}){if(!this._headerInfo&&this._headerInfo.isSupported)return null;const{blockBoundary:r}=this.rasterInfo.storageInfo,a=e>0?this.rasterInfo.storageInfo.pyramidBlockWidth:this.rasterInfo.storageInfo.blockWidth,s=e>0?this.rasterInfo.storageInfo.pyramidBlockHeight:this.rasterInfo.storageInfo.blockHeight,o=r[e];if(!o||o.maxRow<t||o.maxCol<i||o.minRow>t||o.minCol>i)return null;const l=this.getTileLocation(e,t,i);if(!l)return null;const{range:c,actualTileWidth:h,actualTileHeight:u,ifd:d}=l,{data:f}=await this.request(this.url,{range:c,responseType:"array-buffer",signal:n.signal}),p=await this.decodePixelBlock(f,{format:"tiff",customOptions:{headerInfo:this._headerInfo,ifd:d,offset:0,size:0},width:a,height:s,planes:null,pixelType:null});let m,b,y;if(h!==a||u!==s){let e=p.mask;if(e)for(m=0;m<s;m++)if(y=m*a,m<u)for(b=h;b<a;b++)e[y+b]=0;else for(b=0;b<a;b++)e[y+b]=0;else for(e=new Uint8Array(a*s),p.mask=e,m=0;m<u;m++)for(y=m*a,b=0;b<h;b++)e[y+b]=1}return p}async readIFDs(e,t,i,n,r,a=4,s){if(!n)return null;(n>=t.byteLength||n<0)&&(t=(await this.request(this.url,{range:{from:n+r,to:n+r+this._bufferSize},responseType:"array-buffer",signal:s})).data,r=n+r,n=0);const o=await this.readIFD(t,i,n,r,ge.a.TIFF_TAGS,a,s);if(e.push(o.ifd),!o.nextIFD)return null;await this.readIFDs(e,t,i,o.nextIFD-r,r,a,s)}async readIFD(e,t,i,n,r=ge.a.TIFF_TAGS,a=4,s){if(!e)return null;const o=Object(xe.e)(e,t,i,n,r,a);if(o.success){const i=[];if(o.ifd.forEach(e=>{e.values||i.push(e)}),i.length>0){const r=i.map(e=>e.offlineOffsetSize),a=Math.min.apply(null,r.map(e=>e[0]));if(Math.min.apply(null,r.map(e=>e[0]+e[1]))-a<=this._bufferSize){const{data:r}=await this.request(this.url,{range:{from:a,to:a+this._bufferSize},responseType:"array-buffer",signal:s});e=r,n=a,i.forEach(i=>Object(xe.d)(e,t,i,n))}}if(o.ifd.has("GEOKEYDIRECTORY")){const i=o.ifd.get("GEOKEYDIRECTORY"),r=i.values;if(r&&r.length>4){const a=r[0]+"."+r[1]+"."+r[2],o=await this.readIFD(e,t,i.valueOffset+6-n,n,ge.a.GEO_KEYS,2,s);i.data=o.ifd,i.data&&i.data.set("GEOTIFFVersion",{id:0,type:2,valueCount:1,valueOffset:null,values:[a]})}}return o}if(o.requiredBufferSize&&o.requiredBufferSize!==e.byteLength){const i=await this.request(this.url,{range:{from:n,to:n+o.requiredBufferSize+4},responseType:"array-buffer",signal:s});return(e=i.data).byteLength<o.requiredBufferSize?null:this.readIFD(e,t,0,n,ge.a.TIFF_TAGS,4,s)}}getTileLocation(e,t,i){const{firstPyramidLevel:n,blockBoundary:r}=this.rasterInfo.storageInfo,a=0===e?0:e-(n-1),s=this._headerInfo.ifds[a];if(!s)return null;const o=we(s,"TILEOFFSETS");if(void 0===o)return null;const l=we(s,"TILEBYTECOUNTS"),{minRow:c,minCol:h,maxRow:u,maxCol:d}=r[a];if(t>u||i>d||t<c||i<h)return null;const f=ve(s,"IMAGEWIDTH"),p=ve(s,"IMAGELENGTH"),m=ve(s,"TILEWIDTH"),b=ve(s,"TILELENGTH"),y=t*(d+1)+i,g=o[y],x=l[y];return null==g||null==x?null:{range:{from:g,to:g+x-1},ifd:s,actualTileWidth:i===d?f%m:m,actualTileHeight:t===u?p%b:b}}};Object(n.a)([Object(o.b)()],Oe.prototype,"_files",void 0),Object(n.a)([Object(o.b)()],Oe.prototype,"_headerInfo",void 0),Object(n.a)([Object(o.b)()],Oe.prototype,"_bufferSize",void 0),Object(n.a)([Object(o.b)({type:String,json:{write:!0}})],Oe.prototype,"datasetFormat",void 0),Oe=Object(n.a)([Object(u.a)("esri.layers.support.rasterDatasets.TIFFRaster")],Oe);var je=Oe;const Ie=new Map;Ie.set("CRF",{desc:"Cloud Raster Format",constructor:re}),Ie.set("MRF",{desc:"Meta Raster Format",constructor:ye}),Ie.set("TIFF",{desc:"GeoTIFF",constructor:je}),Ie.set("RasterTileServer",{desc:"Raster Tile Server",constructor:le});const _e=Object(l.b)()({RSP_NearestNeighbor:"nearest",RSP_BilinearInterpolation:"bilinear",RSP_CubicConvolution:"cubic",RSP_Majority:"majority"});function Se(){return{enabled:!this.loaded||"RasterTileServer"===this.raster.datasetFormat&&"Raster"===this.raster.tileType}}let Te=class extends(Object(w.a)(Object(_.a)(Object(I.a)(Object(O.a)(Object(j.a)(A(Object(y.a)(b.a)))))))){constructor(...e){super(...e),this.bandIds=null,this.interpolation=null,this.legendEnabled=!0,this.isReference=null,this.listMode="show",this.sourceJSON=null,this.version=null,this.title=null,this.type="imagery-tile",this.operationalLayerType="ArcGISTiledImageServiceLayer",this.popupEnabled=!0,this.popupTemplate=null}normalizeCtorArgs(e,t){return"string"==typeof e?{url:e,...t}:e}load(e){const t=Object(r.h)(e)?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Image Service"]},e).then(()=>this._openRaster(t),()=>this._openRaster(t))),Object(p.r)(this)}get defaultPopupTemplate(){return this.createPopupTemplate()}get fields(){var e,t;let i=[new x.a({name:"Raster.ServicePixelValue",alias:"Pixel Value",domain:null,editable:!1,length:50,type:"string"})];const n=null==(e=this.rasterInfo)||null==(t=e.attributeTable)?void 0:t.fields;if(n){const e=n.filter(e=>"oid"!==e.type&&"value"!==e.name.toLowerCase()).map(e=>{const t=e.clone();return t.name="Raster."+e.name,t});i=i.concat(e)}return i}set renderer(e){this._set("renderer",e),this.updateRenderer()}readRenderer(e,t,i){const n=t&&t.layerDefinition&&t.layerDefinition.drawingInfo&&t.layerDefinition.drawingInfo.renderer,r=Object(g.b)(n,i)||void 0;if(null!=r)return r}createPopupTemplate(e){return Object(S.a)(this,e)}write(e,t){const{raster:i}=this;if(this.loaded?"RasterTileServer"===i.datasetFormat&&("Raster"===i.tileType||"Map"===i.tileType):this.url&&/\/ImageServer(\/|\/?$)/i.test(this.url))return super.write(e,t);if(t&&t.messages){const e=`${t.origin}/${t.layerContainerType||"operational-layers"}`;t.messages.push(new d.a("layer:unsupported",`Layers (${this.title}, ${this.id}) of type '${this.declaredClass}' are not supported in the context of '${e}'`,{layer:this}))}return null}async _openRaster(e){this.raster?this.url=this.raster.url:this.raster=await class{static get supportedFormats(){const e=new Set;return Ie.forEach((t,i)=>e.add(i)),e}static async open(e){const{url:t,ioConfig:i,sourceJSON:n}=e;let r=e.datasetFormat;null==r&&t.lastIndexOf(".")&&(r=t.slice(t.lastIndexOf(".")+1).toUpperCase()),"OVR"===r||"TIF"===r?r="TIFF":t.toLowerCase().indexOf("/imageserver")>-1&&(r="RasterTileServer");const a={url:t,sourceJSON:n,datasetFormat:r,ioConfig:i||{bandIds:null,sampling:null}};let s,o;if(this.supportedFormats.has(r))return s=Ie.get(r).constructor,o=new s(a),await o.open({signal:e.signal}),o;if(r)throw new d.a("rasterfactory:open","not a supported format "+r);const l=Object(H.b)(Ie);let c=0;const h=function(){return r=l[c++],r?(s=Ie.get(r).constructor,o=new s(a),o.open({signal:e.signal}).then(()=>o).catch(()=>h())):null};return h()}static register(e,t,i){Ie.has(e.toUpperCase())||Ie.set(e.toUpperCase(),{desc:t,constructor:i})}}.open({url:this.url,sourceJSON:this.sourceJSON,signal:e});const{rasterInfo:t}=this.raster;if(!t)throw new d.a("imagery-tile-layer:load","cannot load resources on "+this.url);this.sourceJSON=this.sourceJSON||this.raster.sourceJSON,null!=this.sourceJSON&&(this._set("version",this.sourceJSON.currentVersion),this._set("copyright",this.sourceJSON.copyrightText)),null==this.title&&(this.title=this.raster.datasetName),"Map"===this.raster.tileType&&(this.popupEnabled=!1),this._configDefaultSettings()}};Object(n.a)([Object(o.b)({type:[s.a],json:{write:{overridePolicy:Se}}})],Te.prototype,"bandIds",void 0),Object(n.a)([Object(o.b)({json:{write:{overridePolicy:Se}}}),Object(c.a)(_e)],Te.prototype,"interpolation",void 0),Object(n.a)([Object(o.b)({json:{write:!0}})],Te.prototype,"multidimensionalDefinition",void 0),Object(n.a)([Object(o.b)(v.d)],Te.prototype,"legendEnabled",void 0),Object(n.a)([Object(o.b)({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],Te.prototype,"isReference",void 0),Object(n.a)([Object(o.b)({type:["show","hide"]})],Te.prototype,"listMode",void 0),Object(n.a)([Object(o.b)()],Te.prototype,"sourceJSON",void 0),Object(n.a)([Object(o.b)({readOnly:!0})],Te.prototype,"version",void 0),Object(n.a)([Object(o.b)()],Te.prototype,"title",void 0),Object(n.a)([Object(o.b)({readOnly:!0,json:{read:!1}})],Te.prototype,"type",void 0),Object(n.a)([Object(o.b)({type:["ArcGISTiledImageServiceLayer"]})],Te.prototype,"operationalLayerType",void 0),Object(n.a)([Object(o.b)({type:Boolean,value:!0,json:{read:{source:"disablePopup",reader:(e,t)=>!t.disablePopup},write:{target:"disablePopup",overridePolicy:Se,writer(e,t,i){t[i]=!e}}}})],Te.prototype,"popupEnabled",void 0),Object(n.a)([Object(o.b)({type:m.a,json:{read:{source:"popupInfo"},write:{target:"popupInfo",overridePolicy:Se}}})],Te.prototype,"popupTemplate",void 0),Object(n.a)([Object(o.b)({readOnly:!0,dependsOn:["title"]})],Te.prototype,"defaultPopupTemplate",null),Object(n.a)([Object(o.b)({readOnly:!0,type:[x.a],dependsOn:["rasterInfo"]})],Te.prototype,"fields",null),Object(n.a)([Object(o.b)({types:g.a,json:{read:{source:"layerDefinition.drawingInfo.renderer"},write:{target:"layerDefinition.drawingInfo.renderer",overridePolicy:Se}}})],Te.prototype,"renderer",null),Object(n.a)([Object(h.a)("renderer")],Te.prototype,"readRenderer",null),Te=Object(n.a)([Object(u.a)("esri.layers.ImageryTileLayer")],Te);var Re=Te;t.default=Re},727:function(e,t,i){"use strict";var n=i(14),r=i(7),a=i(307),s=i(562);t.a=class{constructor(){this._workerThread=null,this._destroyed=!1}async initialize(){const e=await Object(a.b)("RasterWorker");this._destroyed?e.close():this._workerThread=e}destroy(){this._destroyed=!0,this._workerThread&&(this._workerThread.close(),this._workerThread=null)}async decode(e,t){if(!this._workerThread)throw new n.a("raster-jobhandler:no-connection","no available worker connection");const i=await this._workerThread.invoke("decode",e,t);return i?new s.a(i):null}async symbolize(e,t){if(!this._workerThread)throw new n.a("raster-jobhandler:no-connection","no available worker connection");const i={extent:e.extent&&e.extent.toJSON(),pixelBlock:e.pixelBlock.toJSON(),simpleStretchParams:e.simpleStretchParams,bandIds:e.bandIds},r=await this._workerThread.invoke("symbolize",i,t);return r?new s.a(r):null}async updateSymbolizer(e,t){if(!this._workerThread)throw new n.a("raster-jobhandler:no-connection","no available worker connection");const i=e&&e.renderer&&"raster-stretch"===e.renderer.type&&e.renderer.histograms;await Object(r.a)(this._workerThread.broadcast("updateSymbolizer",{symbolizerJSON:e.toJSON(),histograms:i},t))}async stretch(e,t){if(!this._workerThread)throw new n.a("raster-jobhandler:no-connection","no available worker connection");if(!e||!e.pixelBlock)return null;const i={srcPixelBlock:e.pixelBlock.toJSON(),stretchParams:e.stretchParams},r=await this._workerThread.invoke("stretch",i,t);return r?new s.a(r):null}async mosaicAndTransform(e,t){if(!this._workerThread)throw new n.a("raster-jobhandler:no-connection","no available worker connection");if(!(e&&e.srcPixelBlocks&&e.srcPixelBlocks.length>0))return null;const i={...e,srcPixelBlocks:e.srcPixelBlocks.map(e=>e?e.toJSON():null)},r=await this._workerThread.invoke("mosaicAndTransform",i,t);return r?new s.a(r):null}}},737:function(e,t,i){"use strict";i.d(t,"a",(function(){return u})),i.d(t,"b",(function(){return p})),i.d(t,"c",(function(){return d})),i.d(t,"d",(function(){return l})),i.d(t,"e",(function(){return f})),i.d(t,"f",(function(){return c})),i.d(t,"g",(function(){return h})),i.d(t,"h",(function(){return m}));var n=i(29),r=(i(54),i(125)),a=i(604);const s=new Map,o=new class{constructor(e=15e3,t=5e3){this._timer=null,this._cachedBlocks=new Map,this._size=-1,this._duration=e,this._interval=Math.min(e,t)}decreaseRefCount(e,t){const i=e+"/"+t,n=this._cachedBlocks;if(n.has(i)){const e=n.get(i);return e.refCount--,e.refCount<=0&&(n.delete(i),e.controller&&e.controller.abort()),e.refCount}return 0}getBlock(e,t){const i=e+"/"+t,n=this._cachedBlocks;if(n.has(i)){const e=n.get(i);return e.ts=Date.now(),e.refCount++,n.delete(i),n.set(i,e),e.block}return null}putBlock(e,t,i,n=null){const r=this._cachedBlocks,a=e+"/"+t;if(r.has(a)){const e=r.get(a);e.ts=Date.now(),e.refCount++}else r.set(a,{block:i,ts:Date.now(),refCount:1,controller:n});this.trim(),this.updateTimer()}deleteBlock(e,t){const i=this._cachedBlocks,n=e+"/"+t;i.has(n)&&i.delete(n)}updateMaxSize(e){this._size=e,this.trim()}empty(){this._cachedBlocks.clear(),this.clearTimer()}getCurrentSize(){return this._cachedBlocks.size}updateTimer(){if(null!=this._timer)return;const e=this._cachedBlocks;this._timer=setInterval(()=>{const t=Object(r.c)(e),i=Date.now();for(let n=0;n<t.length&&t[n][1].ts<=i-this._duration;n++)e.delete(t[n][0]);0===e.size&&this.clearTimer()},this._interval)}trim(){const e=this._cachedBlocks;if(-1===this._size||this._size>=e.size)return;const t=Object(r.c)(e);for(let i=0;i<t.length-this._size;i++)e.delete(t[i][0])}clearTimer(){null!=this._timer&&(clearInterval(this._timer),this._timer=null)}};function l(e,t){return null==t?e:`${e}?sliceId=${t}`}function c(e,t){const i={extent:null,rasterInfo:t,cache:new Map};if(s.has(e)){const t=s.get(e);return t.push(i),t.length-1}return s.set(e,[i]),0}function h(e,t){s.has(e)&&(s.get(e)[t]=null)}function u(e,t,i){if(!s.has(e))return null==t?o.decreaseRefCount(e,i):0;const n=s.get(e);if(null==n[t])return o.decreaseRefCount(e,i);const r=n[t].cache;if(r.has(i)){const e=r.get(i);if(e.refCount--,0===e.refCount){r.delete(i);for(let e=0;e<n.length;e++)n[e]&&n[e].cache.has(i)&&n[e].cache.delete(i);e.controller&&e.controller.abort()}return e.refCount}return 0}function d(e,t,i){if(!s.has(e))return null==t?o.getBlock(e,i):null;const n=s.get(e);if(null==n[t]){for(let e=0;e<n.length;e++)if(n[e]&&n[e].cache.has(i)){const t=n[e].cache.get(i);return t.refCount++,t.block}return o.getBlock(e,i)}const r=n[t].cache;if(r.has(i)){const e=r.get(i);return e.refCount++,e.block}for(let e=0;e<n.length;e++)if(e!==t&&n[e]&&n[e]&&n[e].cache.has(i)){const t=n[e].cache.get(i);return t.refCount++,r.set(i,t),t.block}return null}function f(e,t,i,n,r=null){if(!s.has(e))return void(null==t&&o.putBlock(e,i,n,r));const a=s.get(e);if(null==a[t])return void o.putBlock(e,i,n,r);const l={refCount:1,block:n,isResolved:!1,isRejected:!1,controller:r};n.then(()=>l.isResolved=!0).catch(()=>l.isRejected=!0),a[t].cache.set(i,l)}function p(e,t,i){if(!s.has(e))return void(null==t&&o.deleteBlock(e,i));const n=s.get(e);null!=n[t]?n[t].cache.delete(i):o.deleteBlock(e,i)}function m(e,t,i,r,o,l,c=null){const h=function(e,t){if(!s.has(e))return null;const i=s.get(e);return null==i[t]?null:i[t]}(e,t),u=h.extent,{cache:d,rasterInfo:f}=h;if(u&&u.xmin===i.xmin&&u.xmax===i.xmax&&u.ymin===i.ymin&&u.ymax===i.ymax)return;const p=i.clone().normalize(),m=f.spatialReference,b=new Set;for(let e=0;e<p.length;e++){const t=p[e];if(t.xmax-t.xmin<=r||t.ymax-t.ymin<=r)continue;const i=Object(a.d)(t,m,c),s=new n.a({x:r,y:r,spatialReference:t.spatialReference});if(null===o&&!(o=Object(a.f)(s,m,t,c)))return;const{pyramidLevel:h,pyramidResolution:u,excessiveReading:d}=Object(a.g)(o,f,l||"closest");if(d)return;const y={x:Math.max(0,Math.floor((i.xmin-f.storageInfo.origin.x)/u.x)),y:Math.max(0,Math.floor((f.storageInfo.origin.y-i.ymax)/u.y))},g=Math.ceil((i.xmax-i.xmin)/u.x-.1),x=Math.ceil((i.ymax-i.ymin)/u.y-.1),w=h>0?f.storageInfo.pyramidBlockWidth:f.storageInfo.blockWidth,v=h>0?f.storageInfo.pyramidBlockHeight:f.storageInfo.blockHeight,O=1,j=Math.max(0,Math.floor(y.x/w)-O),I=Math.max(0,Math.floor(y.y/v)-O),_=Math.floor((y.x+g-1)/w)+O,S=Math.floor((y.y+x-1)/v)+O;for(let e=I;e<=S;e++)for(let t=j;t<=_;t++)b.add(`${h}/${e}/${t}`)}d.forEach((e,t)=>{if(!b.has(t)){const e=d.get(t);(null==e||e.isResolved||e.isRejected)&&d.delete(t)}}),h.extent={xmin:i.xmin,ymin:i.ymin,xmax:i.xmax,ymax:i.ymax}}}}]);