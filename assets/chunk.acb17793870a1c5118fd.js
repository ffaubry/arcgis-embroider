(window.webpackJsonp=window.webpackJsonp||[]).push([[101],{392:function(e,a,n){"use strict";n.r(a),n.d(a,"fromUrl",(function(){return y}));n(9);var l=n(8),r=n(14),t=n(39),s=n(65),i=(n(126),n(302)),u=n(579);async function y(e){const a=await async function(e){const a=Object(i.e)(e);if(!a)throw new r.a("arcgis-layers:url-mismatch","The url '${url}' is not a valid arcgis resource",{url:e});const{serverType:n,sublayer:l}=a;let t;const s={FeatureServer:"FeatureLayer",StreamServer:"StreamLayer",VectorTileServer:"VectorTileLayer"};switch(n){case"MapServer":t=null!=l?"FeatureLayer":async function(e){return(await d(e)).tileInfo}(e).then(e=>e?"TileLayer":"MapImageLayer");break;case"ImageServer":t=d(e).then(e=>{const a=e.tileInfo&&e.tileInfo.format;return e.tileInfo?a&&"LERC"===a.toUpperCase()&&e.cacheType&&"elevation"===e.cacheType.toLowerCase()?"ElevationLayer":"ImageryTileLayer":"ImageryLayer"});break;case"SceneServer":t=d(a.url.path).then(e=>{const a={Point:"SceneLayer","3DObject":"SceneLayer",IntegratedMesh:"IntegratedMeshLayer",PointCloud:"PointCloudLayer",Building:"BuildingSceneLayer"};if(e&&Array.isArray(e.layers)&&e.layers.length>0){const n=e.layers[0].layerType;if(null!=a[n])return a[n]}return"SceneLayer"});break;default:t=s[n]}const y="FeatureServer"===n,o={parsedUrl:a,Constructor:null,layerOrTableId:y?l:null,sublayerIds:null,tableIds:null},f=await t;if({FeatureLayer:!0,SceneLayer:!0}[f]&&null==l){const a=await async function(e,a){var n,l;let r,t=!1;if("FeatureServer"===a){const a=await async function(e){var a,n;let l=await d(e);l=l||{},l.layers=(null==(a=l.layers)?void 0:a.filter(c))||[];const r={serviceJSON:l};if(l.currentVersion<10.5)return r;const t=await d(e+"/layers");return r.layersJSON={layers:(null==t||null==(n=t.layers)?void 0:n.filter(c))||[],tables:(null==t?void 0:t.tables)||[]},r}(e);t=!!a.layersJSON,r=a.layersJSON||a.serviceJSON}else r=await d(e);const s=null==(n=r)?void 0:n.layers,i=null==(l=r)?void 0:l.tables;return{layerIds:(null==s?void 0:s.map(e=>e.id).reverse())||[],tableIds:(null==i?void 0:i.map(e=>e.id).reverse())||[],layerInfos:t?s:[],tableInfos:t?i:[]}}(e,n);if(y&&(o.sublayerInfos=a.layerInfos,o.tableInfos=a.tableInfos),1!==a.layerIds.length+a.tableIds.length)o.sublayerIds=a.layerIds,o.tableIds=a.tableIds;else if(y){var b,w;o.layerOrTableId=null!=(b=a.layerIds[0])?b:a.tableIds[0],o.sourceJSON=null!=(w=a.layerInfos[0])?w:a.tableInfos[0]}}return o.Constructor=await async function(e){return(0,u.a[e])()}(f),o}(e.url),t={...e.properties,url:e.url};if(!a.sublayerIds)return null!=a.layerOrTableId&&(t.layerId=a.layerOrTableId,t.sourceJSON=a.sourceJSON),new a.Constructor(t);const s=new(0,(await n.e(21).then(n.bind(null,631))).default)({title:a.parsedUrl.title});return function(e,a,n){function r(e,r){const t={...n,layerId:e,sublayerTitleMode:"service-name"};return Object(l.h)(r)&&(t.sourceJSON=r),new a.Constructor(t)}a.sublayerIds.forEach(n=>{const l=r(n,o(a.sublayerInfos,n));e.add(l)}),a.tableIds.forEach(n=>{const l=r(n,o(a.tableInfos,n));e.tables.add(l)})}(s,a,t),s}function o(e,a){return e?Object(t.d)(e,e=>e.id===a):null}function c(e){return!e.type||"Feature Layer"===e.type}async function d(e){return(await Object(s.default)(e,{responseType:"json",query:{f:"json"}})).data}},579:function(e,a,n){"use strict";n.d(a,"a",(function(){return l}));n(9);const l={BingMapsLayer:async()=>(await n.e(70).then(n.bind(null,691))).default,BuildingSceneLayer:async()=>(await Promise.all([n.e(3),n.e(5),n.e(8),n.e(9),n.e(43)]).then(n.bind(null,681))).default,CSVLayer:async()=>(await Promise.all([n.e(3),n.e(5),n.e(8),n.e(9),n.e(48)]).then(n.bind(null,692))).default,ElevationLayer:async()=>(await n.e(19).then(n.bind(null,689))).default,FeatureLayer:async()=>(await Promise.all([n.e(3),n.e(5),n.e(8),n.e(9),n.e(55)]).then(n.bind(null,457))).default,GroupLayer:async()=>(await n.e(21).then(n.bind(null,631))).default,GeoRSSLayer:async()=>(await n.e(66).then(n.bind(null,663))).default,ImageryLayer:async()=>(await Promise.all([n.e(3),n.e(5),n.e(8),n.e(12),n.e(64)]).then(n.bind(null,683))).default,ImageryTileLayer:async()=>(await Promise.all([n.e(3),n.e(5),n.e(8),n.e(12),n.e(69)]).then(n.bind(null,682))).default,IntegratedMeshLayer:async()=>(await n.e(57).then(n.bind(null,686))).default,KMLLayer:async()=>(await Promise.all([n.e(3),n.e(5),n.e(45)]).then(n.bind(null,693))).default,MapImageLayer:async()=>(await Promise.all([n.e(3),n.e(5),n.e(8),n.e(9),n.e(54)]).then(n.bind(null,632))).default,MapNotesLayer:async()=>(await Promise.all([n.e(3),n.e(5),n.e(8),n.e(9),n.e(50)]).then(n.bind(null,665))).default,OpenStreetMapLayer:async()=>(await Promise.all([n.e(15),n.e(154)]).then(n.bind(null,666))).default,PointCloudLayer:async()=>(await Promise.all([n.e(8),n.e(61)]).then(n.bind(null,684))).default,RouteLayer:async()=>(await Promise.all([n.e(3),n.e(5),n.e(8),n.e(9),n.e(51)]).then(n.bind(null,667))).default,SceneLayer:async()=>(await Promise.all([n.e(3),n.e(5),n.e(8),n.e(9),n.e(44)]).then(n.bind(null,694))).default,StreamLayer:async()=>(await Promise.all([n.e(3),n.e(5),n.e(8),n.e(9),n.e(59)]).then(n.bind(null,695))).default,TileLayer:async()=>(await Promise.all([n.e(3),n.e(5),n.e(8),n.e(9),n.e(58)]).then(n.bind(null,668))).default,UnknownLayer:async()=>(await n.e(85).then(n.bind(null,669))).default,UnsupportedLayer:async()=>(await n.e(86).then(n.bind(null,670))).default,VectorTileLayer:async()=>(await Promise.all([n.e(24),n.e(52)]).then(n.bind(null,685))).default,WebTileLayer:async()=>(await n.e(15).then(n.bind(null,605))).default,WMSLayer:async()=>(await n.e(53).then(n.bind(null,696))).default,WMTSLayer:async()=>(await Promise.all([n.e(15),n.e(155)]).then(n.bind(null,687))).default}}}]);